{
	"datasources": [
		{
			"name": "const_app_categories",
			"schema": {
				"attributes": [
					{
						"name": "const_app_categories",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "display",
										"string": {
											"computed_optional_required": "computed",
											"description": "Description of the app category"
										}
									},
									{
										"name": "filters",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "srx",
													"list": {
														"computed_optional_required": "computed",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "ssr",
													"list": {
														"computed_optional_required": "computed",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "includes",
										"list": {
											"computed_optional_required": "computed",
											"element_type": {
												"string": {}
											},
											"description": "List of other App Categories contained by this one"
										}
									},
									{
										"name": "key",
										"string": {
											"computed_optional_required": "computed",
											"description": "Key name of the app category"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "const_app_sub_categories",
			"schema": {
				"attributes": [
					{
						"name": "const_app_sub_categories",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "display",
										"string": {
											"computed_optional_required": "computed",
											"description": "Description of the app subcategory"
										}
									},
									{
										"name": "key",
										"string": {
											"computed_optional_required": "computed",
											"description": "Key name of the app subcategory"
										}
									},
									{
										"name": "traffic_type",
										"string": {
											"computed_optional_required": "computed",
											"description": "Type of traffic (QoS) of the app subcategory"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "const_countries",
			"schema": {
				"attributes": [
					{
						"name": "const_countries",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "alpha2",
										"string": {
											"computed_optional_required": "computed",
											"description": "country code, in two-character"
										}
									},
									{
										"name": "certified",
										"bool": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "numeric",
										"number": {
											"computed_optional_required": "computed",
											"description": "country code, ISO 3166-1 numeric"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "const_gateway_applications",
			"schema": {
				"attributes": [
					{
						"name": "const_gateway_applications",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "app_id",
										"bool": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "key",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "ssr_app_id",
										"bool": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "const_traffic_types",
			"schema": {
				"attributes": [
					{
						"name": "const_traffic_types",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "display",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "dscp",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "failover_policy",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "max_jitter",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "max_latency",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "max_loss",
										"int64": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "traffic_class",
										"string": {
											"computed_optional_required": "computed"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "org_idpprofiles",
			"schema": {
				"attributes": [
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_idpprofiles",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed",
											"description": "enum: `critical`, `standard`, `strict`"
										}
									},
									{
										"name": "created_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "modified_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed",
															"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed"
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "org_servicepolicies",
			"schema": {
				"attributes": [
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_servicepolicies",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed",
											"description": "enum: `allow`, `deny`"
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "created_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed"
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed",
															"description": "enum: `critical`, `standard`, `strict`"
														}
													}
												]
											}
										}
									},
									{
										"name": "id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed"
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed",
														"description": "`strict` (default) / `standard` / or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed",
											"description": "access within the same VRF"
										}
									},
									{
										"name": "modified_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "path_preference",
										"string": {
											"computed_optional_required": "computed",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "org_vpns",
			"schema": {
				"attributes": [
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_vpns",
						"set_nested": {
							"computed_optional_required": "computed",
							"nested_object": {
								"attributes": [
									{
										"name": "created_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "modified_time",
										"number": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed"
										}
									},
									{
										"name": "paths",
										"map_nested": {
											"computed_optional_required": "computed",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed",
															"description": "enum: `broadband`, `lte`"
														}
													},
													{
														"name": "ip",
														"string": {
															"computed_optional_required": "computed",
															"description": "if different from the wan port"
														}
													},
													{
														"name": "pod",
														"int64": {
															"computed_optional_required": "computed"
														}
													}
												]
											}
										}
									}
								]
							}
						}
					}
				]
			}
		}
	],
	"provider": {
		"name": "mistapi"
	},
	"resources": [
		{
			"name": "device_switch",
			"schema": {
				"attributes": [
					{
						"name": "acl_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "actions",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "allow"
															},
															"description": "enum: `allow`, `deny`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dst_tag",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "src_tags",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									}
								]
							}
						}
					},
					{
						"name": "acl_tags",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "gbp_tag",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "required if\n- `type`==`dynamic_gbp` (gbp_tag received from RADIUS)\n- `type`==`static_gbp` (applying gbp tag against matching conditions)"
										}
									},
									{
										"name": "macs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "required if \n- `type`==`mac`\n- `type`==`static_gbp` if from matching mac"
										}
									},
									{
										"name": "network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if:\n  * `type`==`mac` (optional. default is `any`)\n  * `type`==`subnet` (optional. default is `any`)\n  * `type`==`network`\n  * `type`==`resource` (optional. default is `any`)\n  * `type`==`static_gbp` if from matching network (vlan)'"
										}
									},
									{
										"name": "radius_group",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if:\n  * `type`==`radius_group`\n  * `type`==`static_gbp`\nif from matching radius_group"
										}
									},
									{
										"name": "specs",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "port_range",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "80"
															},
															"description": "matched dst port, \"0\" means any"
														}
													},
													{
														"name": "protocol",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "any"
															},
															"description": "`tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`. `protocol_number` is between 1-254"
														}
													}
												]
											},
											"description": "if `type`==`resource`\nempty means unrestricted, i.e. any"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if \n- `type`==`subnet` \n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching subnet"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "required",
											"description": "enum: `any`, `dynamic_gbp`, `mac`, `network`, `radius_group`, `resource`, `static_gbp`, `subnet`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"dynamic_gbp\",\n\"mac\",\n\"network\",\n\"radius_group\",\n\"resource\",\n\"static_gbp\",\n\"subnet\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "ACL Tags to identify traffic source or destination. Key name is the tag name"
						}
					},
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "deviceprofile_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "dhcp_snooping",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "all_networks",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for dynamic ARP inspection check"
									}
								},
								{
									"name": "enable_ip_source_guard",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for check for forging source IP address"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "networks",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "if `all_networks`==`false`, list of network with DHCP snooping enabled"
									}
								}
							]
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the MAC Address"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n  * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n  * sub option code: 1-255, sub-option code'"
													}
												}
											]
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if set to `true`, enable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "disable_auto_config",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "for a claimed switch, we control the configs by default. This option (disables the behavior)"
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "evpn_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "role",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `access`, `core`, `distribution`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"core\",\n\"distribution\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "EVPN Junos settings"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							}
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "image1_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "image2_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "image3_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "dns",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "dns_suffix",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "used only if `subnet` is not specified in `networks`"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "the network where this mgmt IP reside, this will be used as default network for outbound-ssh, dns, ntp, dns, tacplus, radius, syslog, snmp"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Junos IP Config"
						}
					},
					{
						"name": "mac",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device MAC address"
						}
					},
					{
						"name": "managed",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "for an adopted switch, we don’t overwrite their existing configs automatically"
						}
					},
					{
						"name": "map_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "map where the device belongs to"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "enable mist_nac to use radsec"
						}
					},
					{
						"name": "model",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device Model"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "networks",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)\nNOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set"
										}
									},
									{
										"name": "isolation_vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional for pure switching, required when L3 / routing features are used"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "Property key is network name"
						}
					},
					{
						"name": "notes",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "used only if `subnet` is not specified in `networks`"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "optional, the network to be used for mgmt"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_mgmt_vrf",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "f supported on the platform. If enabled, DNS will be using this routing-instance, too"
									}
								},
								{
									"name": "use_mgmt_vrf_for_host_out",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired,"
									}
								}
							],
							"description": "- If HA configuration: key parameter will be nodeX (eg: node1)\n- If there are 2 routing engines, re1 mgmt IP has to be set separately (if desired): key parameter = `re1`"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ospf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "areas",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "no_summary",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "for a stub/nssa area, where to avoid forwarding type-3 LSA to this area"
													}
												}
											]
										},
										"description": "OSPF areas to run on this device and the corresponding per-area-specific configs. Property key is the area"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to rung OSPF on this device"
									}
								},
								{
									"name": "reference_bandwidth",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "100M"
										},
										"description": "Bandwidth for calculating metric defaults (9600..4000000000000)"
									}
								}
							],
							"description": "Junos OSPF config"
						}
					},
					{
						"name": "other_ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "evpn_anycast",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "for EVPN, if anycast is desired"
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if `type`==`static`"
										}
									},
									{
										"name": "ip6",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if `type6`==`static`"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional, `subnet` from `network` definition will be used if defined"
										}
									},
									{
										"name": "netmask6",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional, `subnet` from `network` definition will be used if defined"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "dhcp"
											},
											"description": "enum: `dhcp`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "type6",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "disabled"
											},
											"description": "enum: `autoconf`, `dhcp`, `disabled`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"autoconf\",\n\"dhcp\",\n\"disabled\",\n\"static\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ae_disable_lacp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "To disable LACP support for the AE interface"
										}
									},
									{
										"name": "ae_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Users could force to use the designated AE name"
										}
									},
									{
										"name": "ae_lacp_slow",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "to use fast timeout"
										}
									},
									{
										"name": "aggregated",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "critical",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if want to generate port up/down alarm"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_usage",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
										}
									},
									{
										"name": "esilag",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1514
											},
											"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
										}
									},
									{
										"name": "no_local_overwrite",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "prevent helpdesk to override the port config"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `auto`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"100m\",\n\"10m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
										}
									}
								]
							},
							"description": "Property key is the port name or range (e.g. \"ge-0/0/0-10\")"
						}
					},
					{
						"name": "port_mirroring",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "input_networks_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_egress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "output_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									},
									{
										"name": "output_port_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									}
								]
							},
							"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
						}
					},
					{
						"name": "port_usages",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "all_networks",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`trunk` whether to trunk all network/vlans"
										}
									},
									{
										"name": "allow_dhcpd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri_state.\n\nWhen it is not defined, it means using the system’s default setting which depends on whether the port is a access or trunk port."
										}
									},
									{
										"name": "allow_multiple_supplicants",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "bypass_auth_when_server_down",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down"
										}
									},
									{
										"name": "bypass_auth_when_server_down_for_unkonwn_client",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether the port is disabled"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_vlan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return"
										}
									},
									{
										"name": "enable_mac_auth",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` whether to enable MAC Auth"
										}
									},
									{
										"name": "enable_qos",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "guest_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)"
										}
									},
									{
										"name": "inter_switch_link",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` inter_switch_link is used together with \"isolation\" under networks\nNOTE: inter_switch_link works only between Juniper device. This has to be applied to both ports connected together"
										}
									},
									{
										"name": "mac_auth_only",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth`==`true`"
										}
									},
									{
										"name": "mac_auth_protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "eap-md5"
											},
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth` ==`true`. This type is ignored if mist_nac is enabled. enum: `eap-md5`, `eap-peap`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"eap-md5\",\n\"eap-peap\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mac_limit",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(0)"
													}
												}
											]
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "`mode`==`dynamic` must only be used with the port usage with the name `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"dynamic\",\n\"inet\",\n\"trunk\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514."
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`==`trunk`, the list of network/vlans"
										}
									},
									{
										"name": "persist_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`access` and `port_auth`!=`dot1x` whether the port should retain dynamically learned MAC addresses"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port"
										}
									},
									{
										"name": "port_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dot1x\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` native network/vlan for untagged traffic"
										}
									},
									{
										"name": "reauth_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3600
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` reauthentication interval range",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(10, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "rejected_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` when radius server reject / fails"
										}
									},
									{
										"name": "reset_default_when",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "link_down"
											},
											"description": "Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `link_down`, `none` (let the DPC port keep at the current port usage)",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_down\",\n\"none\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "rules",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "equals",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "equals_any",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "use `equals_any` to match any item in a list"
														}
													},
													{
														"name": "expression",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "\"[0:3]\":\"abcdef\" -\u003e \"abc\"\n\"split(.)[1]\": \"a.b.c\" -\u003e \"b\"\n\"split(-)[1][0:3]: \"a1234-b5678-c90\" -\u003e \"b56\""
														}
													},
													{
														"name": "src",
														"string": {
															"computed_optional_required": "required",
															"description": "enum: `link_peermac`, `lldp_chassis_id`, `lldp_hardware_revision`, `lldp_manufacturer_name`, `lldp_oui`, `lldp_serial_number`, `lldp_system_name`, `radius_dynamicfilter`, `radius_usermac`, `radius_username`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_peermac\",\n\"lldp_chassis_id\",\n\"lldp_hardware_revision\",\n\"lldp_manufacturer_name\",\n\"lldp_oui\",\n\"lldp_serial_number\",\n\"lldp_system_name\",\n\"radius_dynamicfilter\",\n\"radius_usermac\",\n\"radius_username\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "usage",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "`port_usage` name"
														}
													}
												]
											},
											"description": "Only if `mode`==`dynamic`"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed"
										}
									},
									{
										"name": "storm_control",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "no_broadcast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on broadcast traffic"
													}
												},
												{
													"name": "no_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on multicast traffic"
													}
												},
												{
													"name": "no_registered_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on registered multicast traffic"
													}
												},
												{
													"name": "no_unknown_unicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on unknown unicast traffic"
													}
												},
												{
													"name": "percentage",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 100)"
																}
															}
														]
													}
												}
											],
											"description": "Switch storm control\nOnly if `mode`!=`dynamic`"
										}
									},
									{
										"name": "stp_edge",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames"
										}
									},
									{
										"name": "voip_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth"
										}
									}
								]
							}
						}
					},
					{
						"name": "radius_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "acct_interim_interval",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "acct_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1813
														},
														"description": "Acct port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1812
														},
														"description": "Auth port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers_retries",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3
										},
										"description": "radius auth session retries"
									}
								},
								{
									"name": "auth_servers_timeout",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "radius auth session timeout"
									}
								},
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "coa_port",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3799
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip"
									}
								},
								{
									"name": "source_ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`"
									}
								}
							],
							"description": "Junos Radius config"
						}
					},
					{
						"name": "remote_syslog",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "archive",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "files",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "size",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "console",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "contents",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "facility",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "severity",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "files",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "archive",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "files",
																"int64": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "size",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												},
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "file",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
									}
								},
								{
									"name": "send_to_all_servers",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "facility",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 514
														}
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "udp"
														},
														"description": "enum: `tcp`, `udp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"tcp\",\n\"udp\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "routing_instance",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "severity",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "source_address",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "tag",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "time_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `millisecond`, `year`, `year millisecond`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"millisecond\",\n\"year\",\n\"year millisecond\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "users",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "role",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "used for OSPF / BGP / EVPN"
						}
					},
					{
						"name": "serial",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device Serial"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "snmp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "client_list",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "clients",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "contact",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "engine_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `engine-id-suffix`, `local`, `use-default-ip-address`, `use_mac-address`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"engine-id-suffix\",\n\"local\",\n\"use-default-ip-address\",\n\"use_mac-address\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "location",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										}
									}
								},
								{
									"name": "trap_groups",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "categories",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "group_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html"
													}
												},
												{
													"name": "targets",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "version",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "v2"
														},
														"description": "enum: `all`, `v1`, `v2`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"all\",\n\"v1\",\n\"v2\",\n)"
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"name": "v2c_config",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "authorization",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "client_list_name here should refer to client_list above"
													}
												},
												{
													"name": "community_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "view name here should be defined in views above"
													}
												}
											]
										}
									}
								},
								{
									"name": "v3_config",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "notify",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "tag",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "type",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `inform`, `trap`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"inform\",\n\"trap\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											},
											{
												"name": "notify_filter",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "contents",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "include",
																				"bool": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "oid",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															},
															{
																"name": "profile_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_address",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "address",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "address_mask",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 161
																	}
																}
															},
															{
																"name": "tag_list",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "\u003crefer to notify tag, can be multiple with blank"
																}
															},
															{
																"name": "target_address_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "target_parameters",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to notify target parameters name"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_parameters",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "message_processing_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `v1`, `v2c`, `v3`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v1\",\n\"v2c\",\n\"v3\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "notify_filter",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to profile-name in notify_filter"
																}
															},
															{
																"name": "security_level",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `authentication`, `none`, `privacy`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `usm`, `v1`, `v2c`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to security_name in usm"
																}
															}
														]
													}
												}
											},
											{
												"name": "usm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "engineid",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "required only if `engine_type`==`remote_engine`"
															}
														},
														{
															"name": "engine_type",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "enum: `local_engine`, `remote_engine`",
																"validators": [
																	{
																		"custom": {
																			"imports": [
																				{
																					"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																				}
																			],
																			"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local_engine\",\n\"remote_engine\",\n)"
																		}
																	}
																]
															}
														},
														{
															"name": "users",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "authentication_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `authentication_type`==`authentication_none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(7)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "authentication_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication_md5`, `authentication_none`, `authentication_sha`, `authentication_sha224`, `authentication_sha256`, `authentication_sha384`, `authentication_sha512`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication_md5\",\n\"authentication_none\",\n\"authentication_sha\",\n\"authentication_sha224\",\n\"authentication_sha256\",\n\"authentication_sha384\",\n\"authentication_sha512\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `encryption_type`==`privacy-none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(8)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"privacy-3des\",\n\"privacy-aes128\",\n\"privacy-des\",\n\"privacy-none\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		}
																	]
																}
															}
														}
													]
												}
											},
											{
												"name": "vacm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "access",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "group_name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		},
																		{
																			"name": "prefix_list",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "context_prefix",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "only required if `type`==`context_prefix`"
																							}
																						},
																						{
																							"name": "notify_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "read_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "security_level",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `authentication`, `none`, `privacy`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "security_model",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `any`, `usm`, `v1`, `v2c`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "type",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `context_prefix`, `default_context_prefix`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"context_prefix\",\n\"default_context_prefix\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "write_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														{
															"name": "security_to_group",
															"single_nested": {
																"computed_optional_required": "computed_optional",
																"attributes": [
																	{
																		"name": "content",
																		"list_nested": {
																			"computed_optional_required": "computed_optional",
																			"nested_object": {
																				"attributes": [
																					{
																						"name": "group",
																						"string": {
																							"computed_optional_required": "computed_optional",
																							"description": "refer to group_name under access"
																						}
																					},
																					{
																						"name": "security_name",
																						"string": {
																							"computed_optional_required": "computed_optional"
																						}
																					}
																				]
																			}
																		}
																	},
																	{
																		"name": "security_model",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "enum: `usm`, `v1`, `v2c`",
																			"validators": [
																				{
																					"custom": {
																						"imports": [
																							{
																								"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																							}
																						],
																						"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "views",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "include",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "if the root oid configured is included"
													}
												},
												{
													"name": "oid",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "stp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "rstp"
										},
										"description": "enum: `rstp`, `vstp`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"rstp\",\n\"vstp\",\n)"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config_revert",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										}
									}
								},
								{
									"name": "protect_re",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "allowed_services",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "optionally, services we'll allow"
												}
											},
											{
												"name": "custom",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "port_range",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "0"
																	},
																	"description": "matched dst port, \"0\" means any"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `icmp`, `tcp`, `udp`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"icmp\",\n\"tcp\",\n\"udp\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "subnet",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when enabled, all traffic that is not essential to our operation will be dropped\ne.g. ntp / dns / traffic to mist will be allowed by default\n     if dhcpd is enabled, we'll make sure it works"
												}
											},
											{
												"name": "trusted_hosts",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "host/subnets we'll allow traffic to/from"
												}
											}
										],
										"description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works"
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tacacs",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "acct_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "default_role",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "none"
													},
													"description": "enum: `admin`, `helpdesk`, `none`, `read`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"admin\",\n\"helpdesk\",\n\"none\",\n\"read\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "network",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "which network the TACACS server resides"
												}
											},
											{
												"name": "tacplus_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Device Type. enum: `switch`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"switch\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "use_router_id_as_source_ip",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to use it for snmp / syslog / tacplus / radius"
						}
					},
					{
						"name": "vars",
						"map": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "a dictionary of name-\u003evalue, the vars can then be used in Wlans. This can overwrite those from Site Vars"
						}
					},
					{
						"name": "virtual_chassis",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "members",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "mac",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "fpc0, same as the mac of device_id"
													}
												},
												{
													"name": "member_id",
													"int64": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "vc_role",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Both vc_role master and backup will be matched to routing-engine role in Junos preprovisioned VC config. enum: `backup`, `linecard`, `master`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"backup\",\n\"linecard\",\n\"master\",\n)"
																}
															}
														]
													}
												}
											]
										},
										"description": "list of Virtual Chassis members"
									}
								},
								{
									"name": "preprovisioned",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "to configure whether the VC is preprovisioned or nonprovisioned"
									}
								}
							],
							"description": "required for preprovisioned Virtual Chassis"
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Next-hop address"
														}
													}
												]
											},
											"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "vrrp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "groups",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "priority",
													"int64": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										},
										"description": "Property key is the VRRP name"
									}
								}
							],
							"description": "Junos VRRP config"
						}
					},
					{
						"name": "x",
						"float64": {
							"computed_optional_required": "computed_optional",
							"description": "x in pixel"
						}
					},
					{
						"name": "y",
						"float64": {
							"computed_optional_required": "computed_optional",
							"description": "y in pixel"
						}
					},
					{
						"name": "device_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "org",
			"schema": {
				"attributes": [
					{
						"name": "alarmtemplate_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "allow_mist",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "msp_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "msp_logo_url",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "logo uploaded by the MSP with advanced tier, only present if provided"
						}
					},
					{
						"name": "msp_name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "name of the msp the org belongs to"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "orggroup_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							}
						}
					},
					{
						"name": "session_expiry",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 1440
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(10, 20160)"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "org_gatewaytemplate",
			"schema": {
				"attributes": [
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "bgp_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auth_key",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "bfd_minimum_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 350
											},
											"description": "when bfd_multiplier is configured alone. Default:\n  * 1000 if `type`==`external`\n  * 350 `type`==`internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255000)"
													}
												}
											]
										}
									},
									{
										"name": "bfd_multiplier",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3
											},
											"description": "when bfd_minimum_interval_is_configured alone",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "communities",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "id",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "local_preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "vpn_name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "disable_bfd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "BFD provides faster path failure detection and is enabled by default"
										}
									},
									{
										"name": "export",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "export_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default export policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "extended_v4_nexthop",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "by default, either inet/net6 unicast depending on neighbor IP family (v4 or v6)\nfor v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this"
										}
									},
									{
										"name": "graceful_restart_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "`0` means disable",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4095)"
													}
												}
											]
										}
									},
									{
										"name": "hold_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 90
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "import",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "import_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default import policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "local_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbor_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbors",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "If true, the BGP session to this neighbor will be administratively disabled/shutdown"
														}
													},
													{
														"name": "export_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "hold_time",
														"int64": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": 90
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 65535)"
																	}
																}
															]
														}
													},
													{
														"name": "import_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "multihop_ttl",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "assuming BGP neighbor is directly connected",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 255)"
																	}
																}
															]
														}
													},
													{
														"name": "neighbor_as",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "if per-neighbor as is desired. Property key is the neighbor address"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "by default, we'll re-advertise all learned BGP routers toward overlay"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `external`, `internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"internal\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "lan"
											},
											"description": "network name. enum: `lan`, `vpn`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"vpn\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vpn_name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "wan_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `via`==`wan`"
										}
									}
								]
							}
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the MAC Address"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n  * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n  * sub option code: 1-255, sub-option code'"
													}
												}
											]
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if set to `true`, enable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "dns_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "idp_profiles",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `critical`, `standard`, `strict`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "alert"
															},
															"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"close\",\n\"drop\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									}
								]
							},
							"description": "Property key is the profile name"
						}
					},
					{
						"name": "ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "secondary_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "optional list of secondary IPs in CIDR format"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "dhcp"
											},
											"description": "enum: `dhcp`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networks",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disallow_mist_services",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disallow Mist Devices in the network"
										}
									},
									{
										"name": "gateway",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "gateway6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "internal_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									},
									{
										"name": "internet_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "create_simple_service_policy",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "destination_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "port",
																	"int64": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "restricted",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
													}
												},
												{
													"name": "static_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
																	}
																}
															]
														},
														"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
													}
												}
											],
											"description": "whether this network has direct internet access"
										}
									},
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow clients in the network to talk to each other"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "routed_for_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "tenants",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "addresses",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															}
														}
													}
												]
											}
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_access",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "advertised_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
														}
													},
													{
														"name": "allow_ping",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether to allow ping from vpn into this routed network"
														}
													},
													{
														"name": "destination_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "port",
																		"int64": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
														}
													},
													{
														"name": "nat_pool",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
														}
													},
													{
														"name": "no_readvertise_to_lan_bgp",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "no_readvertise_to_lan_ospf",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side OSPF peers"
														}
													},
													{
														"name": "no_readvertise_to_overlay",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "other_vrfs",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
														}
													},
													{
														"name": "routed",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether this network is routable"
														}
													},
													{
														"name": "source_nat",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "external_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															],
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
														}
													},
													{
														"name": "static_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "wan_name",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
																		}
																	}
																]
															},
															"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
														}
													},
													{
														"name": "summarized_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "summarized_subnet_to_lan_bgp",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "summarized_subnet_to_lan_ospf",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side OSPF peers"
														}
													}
												]
											},
											"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
										}
									}
								]
							}
						}
					},
					{
						"name": "ntp_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "node1",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "gateway",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "if `type`==`static`"
												}
											},
											{
												"name": "ip",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "netmask",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "used only if `subnet` is not specified in `networks`"
												}
											},
											{
												"name": "type",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "dhcp"
													},
													"description": "enum: `dhcp`, `static`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "use_mgmt_vrf",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
												}
											},
											{
												"name": "use_mgmt_vrf_for_host_out",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
												}
											},
											{
												"name": "vlan_id",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for HA Cluster, node1 can have different IP Config"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_mgmt_vrf",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
									}
								},
								{
									"name": "use_mgmt_vrf_for_host_out",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired,"
									}
								},
								{
									"name": "vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "out-of-band (vme/em0/fxp0) IP config"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preferences",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "paths",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "cost",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "For SSR Only. `true`, if this specific path is undesired"
														}
													},
													{
														"name": "gateway_ip",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`local`, if a different gateway is desired"
														}
													},
													{
														"name": "internet_access",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`vpn`, if this vpn path can be used for internet"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "required when \n  * `type`==`vpn`: the name of the VPN Path to use \n  * `type`==`wan`: the name of the WAN interface to use'"
														}
													},
													{
														"name": "networks",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "required when `type`==`local`"
														}
													},
													{
														"name": "target_ips",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`, if destination IP is to be replaced"
														}
													},
													{
														"name": "type",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `local`, `tunnel`, `vpn`, `wan`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "required when`type`==`tunnel`, optional if `type`==`vpn` wan"
														}
													}
												]
											}
										}
									},
									{
										"name": "strategy",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "ordered"
											},
											"description": "enum: `ecmp`, `ordered`, `weighted`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ecmp\",\n\"ordered\",\n\"weighted\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the path name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "port admin up (true) / down (false)"
										}
									},
									{
										"name": "dsl_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "vdsl"
											},
											"description": "if `wan_type`==`lte`. enum: `adsl`, `vdsl`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"adsl\",\n\"vdsl\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dsl_vci",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 35
											},
											"description": "if `wan_type`==`dsl`\n16 bit int"
										}
									},
									{
										"name": "dsl_vpi",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "if `wan_type`==`dsl`\n8 bit int"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip_config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "dns",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "netmask",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "used only if `subnet` is not specified in `networks`"
													}
												},
												{
													"name": "network",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "optional, the network to be used for mgmt"
													}
												},
												{
													"name": "poser_password",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "pppoe_auth",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "if `type`==`pppoe`. enum: `chap`, `none`, `pap`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "pppoe_username",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "dhcp"
														},
														"description": "enum: `dhcp`, `pppoe`, `static`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"pppoe\",\n\"static\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Junos IP Config"
										}
									},
									{
										"name": "lte_apn",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "if `wan_type`==`lte`. enum: `chap`, `none`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "lte_backup",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "lte_password",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_username",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "name that we'll use to derive config"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `usage`==`lan`"
										}
									},
									{
										"name": "outer_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "for Q-in-Q"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `usage`==`lan`"
										}
									},
									{
										"name": "preserve_dscp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "whether to preserve dscp when sending traffic over VPN (SSR-only)"
										}
									},
									{
										"name": "redundant",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_node",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_nodes",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "SSR only - supporting vlan-based redundancy (matching the size of `networks`)"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											}
										}
									},
									{
										"name": "ssr_no_virtual_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when SSR is running as VM, this is required on certain hosting platforms"
										}
									},
									{
										"name": "svr_port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "for SSR only"
										}
									},
									{
										"name": "traffic_shaping",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "class_percentages",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name. enum: `ha_control`, `ha_data`, `lan`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ha_control\",\n\"ha_data\",\n\"lan\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if WAN interface is on a VLAN"
										}
									},
									{
										"name": "vpn_paths",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "broadband"
															},
															"description": "enum: `broadband`, `lte`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "bfd_use_tunnel_mode",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "whether to use tunnel mode. SSR only"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "for a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)"
														}
													},
													{
														"name": "role",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "spoke"
															},
															"description": "enum: `hub`, `spoke`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hub\",\n\"spoke\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "traffic_shaping",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "class_percentages",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"int64": {}
																		},
																		"description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100"
																	}
																},
																{
																	"name": "enabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "wan_arp_policer",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "recommended"
											},
											"description": "when `wan_type`==`broadband`. enum: `default`, `max`, `recommended`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"max\",\n\"recommended\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "wan_ext_ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional, if spoke should reach this port by a different IP"
										}
									},
									{
										"name": "wan_source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "or to disable the source-nat"
													}
												},
												{
													"name": "nat_pool",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if alternative nat_pool is desired"
													}
												}
											],
											"description": "optional, by default, source-NAT is performed on all WAN Ports using the interface-ip"
										}
									},
									{
										"name": "wan_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"dsl\",\n\"lte\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the port(s) name or range (e.g. \"ge-0/0/0-10\")"
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "auto assigned if not set"
						}
					},
					{
						"name": "routing_policies",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "terms",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "accept",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "add_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "add_target_vrfs",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "for SSR, hub decides how VRF routes are leaked on spoke"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "exclude_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. To exclude certain AS"
																	}
																},
																{
																	"name": "exclude_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "export_communitites",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "local_preference",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "optional, for an import policy, local_preference can be changed"
																	}
																},
																{
																	"name": "prepend_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. By default, the local AS will be prepended, to change it"
																	}
																}
															],
															"description": "when used as import policy"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "takes regular expression"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "network",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																						}
																					],
																					"schema_definition": "listvalidator.UniqueValues()"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "prefix",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
																	}
																},
																{
																	"name": "protocol",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "`direct`, `bgp`, `osp`, ..."
																	}
																},
																{
																	"name": "route_exists",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "route",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "vrf_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"default": {
																						"static": "default"
																					},
																					"description": "name of the vrf instance\nit can also be the name of the VPN or wan if they"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "vpn_neighbor_mac",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)"
																	}
																},
																{
																	"name": "vpn_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)\nordered-"
																	}
																},
																{
																	"name": "vpn_path_sla",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "max_jitter",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_latency",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_loss",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															],
															"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
														}
													}
												]
											},
											"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the routing policy name"
						}
					},
					{
						"name": "service_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "allow"
											},
											"description": "enum: `allow`, `deny`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															}
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "strict"
															},
															"description": "enum: `critical`, `standard`, `strict`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "strict"
														},
														"description": "`strict` (default) / `standard` / or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "access within the same VRF"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "path_preference",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "servicepolicy_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "used to link servicepolicy defined at org level and overwrite some attributes"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "tunnel_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auto_provision",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enable",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "latlng",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "lat",
																"float64": {
																	"computed_optional_required": "required"
																}
															},
															{
																"name": "lng",
																"float64": {
																	"computed_optional_required": "required"
																}
															}
														]
													}
												},
												{
													"name": "primary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "num_hosts",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												},
												{
													"name": "region",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "auto"
														},
														"description": "enum: `APAC`, `Americas`, `EMEA`, `auto`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"APAC\",\n\"Americas\",\n\"EMEA\",\n\"auto\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "secondary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "num_hosts",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"name": "ike_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ike_mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "main"
											},
											"description": "Only if `provider`== `custom-ipsec`. enum: `aggressive`, `main`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aggressive\",\n\"main\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ike_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ipsec_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ipsec_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "Only if `provider`== `custom-ipsec`. enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n\"5\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"20\",\n\"21\",\n\"24\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Only if  `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "local_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n  * `provider`== `zscaler-ipsec`\n  * `provider`==`jse-ipsec`\n  * `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "active-standby"
											},
											"description": "enum: `active-active`, `active-standby`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"active-active\",\n\"active-standby\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "primary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n  * `provider`== `zscaler-gre`\n  * `provider`== `custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`== `custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "probe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "interval",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "how often to trigger the probe"
													}
												},
												{
													"name": "threshold",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "number of consecutive misses before declaring the tunnel down"
													}
												},
												{
													"name": "timeout",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "time within which to complete the connectivity check"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "icmp"
														},
														"description": "enum: `http`, `icmp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"http\",\n\"icmp\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`== `custom-ipsec`. enum: `gre`, `ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gre\",\n\"ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "provider",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `custom-ipsec`, `customer-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom-ipsec\",\n\"customer-gre\",\n\"jse-ipsec\",\n\"zscaler-gre\",\n\"zscaler-ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "psk",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n  * `provider`== `zscaler-ipsec`\n  * `provider`==`jse-ipsec`\n  * `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "secondary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n  * `provider`== `zscaler-gre`\n  * `provider`== `custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`== `custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "version",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "2"
											},
											"description": "Only if `provider`== `custom-gre` or `provider`== `custom-ipsec`. enum: `1`, `2`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the tunnel name"
						}
					},
					{
						"name": "tunnel_provider_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "jse",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "num_users",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for jse-ipsec, this allow provisioning of adequate resource on JSE. Make sure adequate licenses are added"
									}
								},
								{
									"name": "zscaler",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "aup_acceptance_required",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": true
													}
												}
											},
											{
												"name": "aup_expire",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 1
													},
													"description": "days before AUP is requested again"
												}
											},
											{
												"name": "aup_ssl_proxy",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
												}
											},
											{
												"name": "download_mbps",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps"
												}
											},
											{
												"name": "enable_aup",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if `use_xff`==`true`, display Acceptable Use Policy (AUP)"
												}
											},
											{
												"name": "enable_caution",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when `enforce_authentication`==`false`, display caution notification for non-authenticated users"
												}
											},
											{
												"name": "enforce_authentication",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "sub_locations",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "aup_acceptance_required",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": true
																	}
																}
															},
															{
																"name": "aup_expire",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 1
																	},
																	"description": "days before AUP is requested again"
																}
															},
															{
																"name": "aup_ssl_proxy",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
																}
															},
															{
																"name": "download_mbps",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps"
																}
															},
															{
																"name": "enable_aup",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"description": "if `use_xff`==`true`, display Acceptable Use Policy (AUP)"
																}
															},
															{
																"name": "enable_caution",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "when `enforce_authentication`==`false`, display caution notification for non-authenticated users"
																}
															},
															{
																"name": "enforce_authentication",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	}
																}
															},
															{
																"name": "subnets",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															},
															{
																"name": "upload_mbps",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps"
																}
															}
														]
													},
													"description": "if `use_xff`==`true`"
												}
											},
											{
												"name": "upload_mbps",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps"
												}
											},
											{
												"name": "use_xff",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "location uses proxy chaining to forward traffic"
												}
											}
										],
										"description": "for zscaler-ipsec and zscaler-gre"
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "standalone"
							},
							"description": "enum: `spoke`, `standalone`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"spoke\",\n\"standalone\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		},
		{
			"name": "org_idpprofile",
			"schema": {
				"attributes": [
					{
						"name": "base_profile",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "enum: `critical`, `standard`, `strict`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "overwrites",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "alert"
											},
											"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"close\",\n\"drop\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "matching",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "attack_name",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "dst_subnet",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "severity",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "org_mx_edge",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "magic",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "model",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "mxagent_registered",
						"bool": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mxcluster_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "MxCluster this MxEdge belongs to"
						}
					},
					{
						"name": "mxedge_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "fips_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "mist_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "oob_ip_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `disabled`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"disabled\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "oob_ip_type6",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "autoconf"
										},
										"description": "enum: `autoconf`, `dhcp`, `disabled`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"autoconf\",\n\"dhcp\",\n\"disabled\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "note",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "autoconf6",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "dhcp6",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "dns",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "IPv4 ignored if `type`!=`static`\nIPv6 ignored if `type6`!=`static`"
									}
								},
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`=`static`"
									}
								},
								{
									"name": "gateway6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`=`static`"
									}
								},
								{
									"name": "ip6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`=`static`"
									}
								},
								{
									"name": "netmask6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "type6",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "ip configuration of the Mist Edge out-of_band management interface"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "proxy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "url",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "Proxy Configuration to talk to Mist"
						}
					},
					{
						"name": "services",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of services to run, tunterm only for now"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "tunterm_dhcpd_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "enabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "servers",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "list of DHCP servers; required if `type`==`relay`"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "relay"
											},
											"description": "enum: `relay`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"relay\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "global and per-VLAN. Property key is the VLAN ID"
						}
					},
					{
						"name": "tunterm_extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is a CIDR"
						}
					},
					{
						"name": "tunterm_igmp_snooping_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "querier",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "max_response_time",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "querier’s query response interval, in tenths-of-seconds"
												}
											},
											{
												"name": "mtu",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "the MTU we use (needed when forming large IGMPv3 Reports)"
												}
											},
											{
												"name": "query_interval",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "querier’s query interval, in seconds"
												}
											},
											{
												"name": "robustness",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "querier’s robustness",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 7)"
															}
														}
													]
												}
											},
											{
												"name": "version",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "querier’s maximum protocol version"
												}
											}
										]
									}
								},
								{
									"name": "vlan_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "the list of vlans on which tunterm performs IGMP snooping"
									}
								}
							]
						}
					},
					{
						"name": "tunterm_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "required"
									}
								},
								{
									"name": "gateway6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "required",
										"description": "untagged VLAN"
									}
								},
								{
									"name": "ip6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "required"
									}
								},
								{
									"name": "netmask6",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "ip configuration of the Mist Tunnel interface"
						}
					},
					{
						"name": "tunterm_monitoring",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"list": {
									"element_type": {
										"object": {
											"attribute_types": [
												{
													"name": "host",
													"string": {}
												},
												{
													"name": "port",
													"int64": {}
												},
												{
													"name": "protocol",
													"string": {}
												},
												{
													"name": "timeout",
													"int64": {}
												}
											]
										}
									}
								}
							}
						}
					},
					{
						"name": "tunterm_multicast_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "mdns",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "vlan_ids",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																	}
																],
																"schema_definition": "listvalidator.UniqueValues()"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "ssdp",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "vlan_ids",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																	}
																],
																"schema_definition": "listvalidator.UniqueValues()"
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "tunterm_other_ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "ip configs by VLAN ID. Property key is the VLAN ID"
						}
					},
					{
						"name": "tunterm_port_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "downstream_ports",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of ports to be used for downstream (to AP) purpose"
									}
								},
								{
									"name": "separate_upstream_downstream",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "weather to separate upstream / downstream ports. default is false where all ports will be used."
									}
								},
								{
									"name": "upstream_port_vlan_id",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 1
										},
										"description": "native VLAN id for upstream ports"
									}
								},
								{
									"name": "upstream_ports",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of ports to be used for upstrea purpose (to LAN)"
									}
								}
							],
							"description": "ethernet port configurations"
						}
					},
					{
						"name": "tunterm_registered",
						"bool": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "tunterm_switch_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "port_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vlan_ids",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							},
							"description": "if custom vlan settings are desired"
						}
					},
					{
						"name": "versions",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "mxagent",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tuntnerm",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "org_nacrule",
			"schema": {
				"attributes": [
					{
						"name": "action",
						"string": {
							"computed_optional_required": "required",
							"description": "enum: `allow`, `block`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"block\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "apply_tags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "all optional, this goes into Access-Accept"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "enabled or not"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auth_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `cert`, `device-auth`, `eap-teap`, `eap-tls`, `eap-ttls`, `idp`, `mab`, `psk`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert\",\n\"device-auth\",\n\"eap-teap\",\n\"eap-tls\",\n\"eap-ttls\",\n\"idp\",\n\"mab\",\n\"psk\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "nactags",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "port_types",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids to match"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids to match"
									}
								},
								{
									"name": "vendor",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of vendors to match"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "not_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auth_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `cert`, `device-auth`, `eap-teap`, `eap-tls`, `eap-ttls`, `idp`, `mab`, `psk`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert\",\n\"device-auth\",\n\"eap-teap\",\n\"eap-tls\",\n\"eap-ttls\",\n\"idp\",\n\"mab\",\n\"psk\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "nactags",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "port_types",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids to match"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids to match"
									}
								},
								{
									"name": "vendor",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of vendors to match"
									}
								}
							]
						}
					},
					{
						"name": "order",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "the order of the rule, lower value implies higher priority",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.AtLeast(0)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "org_nactag",
			"schema": {
				"attributes": [
					{
						"name": "allow_usermac_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "can be set to true to allow the override by usermac result"
						}
					},
					{
						"name": "egress_vlan_names",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`egress_vlan_names`, list of egress vlans to return"
						}
					},
					{
						"name": "gbp_tag",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`gbp_tag`"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "match",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`match`. enum: `cert_cn`, `cert_issuer`, `cert_san`, `cert_serial`, `cert_sub`, `client_mac`, `idp_role`, `mdm_status`, `radius_group`, `realm`, `ssid`, `user_name`, `usermac_label`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert_cn\",\n\"cert_issuer\",\n\"cert_san\",\n\"cert_serial\",\n\"cert_sub\",\n\"client_mac\",\n\"idp_role\",\n\"mdm_status\",\n\"radius_group\",\n\"realm\",\n\"ssid\",\n\"user_name\",\n\"usermac_label\",\n)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "match_all",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "This field is applicable only when `type`==`match`\n  * `false`: means it is sufficient to match any of the values (i.e., match-any behavior)\n  * `true`: means all values should be matched (i.e., match-all behavior)\n\n\nCurrently it makes sense to set this field to `true` only if the `match`==`idp_role` or `match`==`usermac_label`'"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "radius_attrs",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`radius_attrs`, user can specify a list of one or more standard attributes in the field \"radius_attrs\". \nIt is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.\nNote that it is allowed to have more than one radius_attrs in the result of a given rule."
						}
					},
					{
						"name": "radius_group",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`radius_group`"
						}
					},
					{
						"name": "radius_vendor_attrs",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`radius_vendor_attrs`, user can specify a list of one or more vendor-specific attributes in the field \"radius_vendor_attrs\". \nIt is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.\nNote that it is allowed to have more than one radius_vendor_attrs in the result of a given rule."
						}
					},
					{
						"name": "session_timeout",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`session_timeout, in seconds"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"description": "enum: `egress_vlan_names`, `gbp_tag`, `match`, `radius_attrs`, `radius_group`, `radius_vendor_attrs`, `session_timeout`, `vlan`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"egress_vlan_names\",\n\"gbp_tag\",\n\"match\",\n\"radius_attrs\",\n\"radius_group\",\n\"radius_vendor_attrs\",\n\"session_timeout\",\n\"vlan\",\n)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "values",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`match`"
						}
					},
					{
						"name": "vlan",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`vlan`"
						}
					}
				]
			}
		},
		{
			"name": "org_network",
			"schema": {
				"attributes": [
					{
						"name": "disallow_mist_services",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disallow Mist Devices in the network"
						}
					},
					{
						"name": "gateway",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "gateway6",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "internal_access",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "internet_access",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "create_simple_service_policy",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "destination_nat",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "internal_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										},
										"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "restricted",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
									}
								},
								{
									"name": "static_nat",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "internal_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "wan_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
													}
												}
											]
										},
										"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
									}
								}
							],
							"description": "whether this network has direct internet access"
						}
					},
					{
						"name": "isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "whether to allow clients in the network to talk to each other"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "routed_for_networks",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
						}
					},
					{
						"name": "subnet",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "subnet6",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "tenants",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "addresses",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							}
						}
					},
					{
						"name": "vlan_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "vpn_access",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "advertised_subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
										}
									},
									{
										"name": "allow_ping",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow ping from vpn into this routed network"
										}
									},
									{
										"name": "destination_nat",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "internal_ip",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "port",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
										}
									},
									{
										"name": "nat_pool",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
										}
									},
									{
										"name": "no_readvertise_to_lan_bgp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "toward LAN-side BGP peers"
										}
									},
									{
										"name": "no_readvertise_to_lan_ospf",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "toward LAN-side OSPF peers"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
										}
									},
									{
										"name": "other_vrfs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
										}
									},
									{
										"name": "routed",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether this network is routable"
										}
									},
									{
										"name": "source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "external_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											],
											"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
										}
									},
									{
										"name": "static_nat",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "internal_ip",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
														}
													}
												]
											},
											"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
										}
									},
									{
										"name": "summarized_subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
										}
									},
									{
										"name": "summarized_subnet_to_lan_bgp",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward LAN-side BGP peers"
										}
									},
									{
										"name": "summarized_subnet_to_lan_ospf",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward LAN-side OSPF peers"
										}
									}
								]
							},
							"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
						}
					}
				]
			}
		},
		{
			"name": "org_networktemplate",
			"schema": {
				"attributes": [
					{
						"name": "acl_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "actions",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "allow"
															},
															"description": "enum: `allow`, `deny`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dst_tag",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "src_tags",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									}
								]
							}
						}
					},
					{
						"name": "acl_tags",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "gbp_tag",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "required if\n- `type`==`dynamic_gbp` (gbp_tag received from RADIUS)\n- `type`==`static_gbp` (applying gbp tag against matching conditions)"
										}
									},
									{
										"name": "macs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "required if \n- `type`==`mac`\n- `type`==`static_gbp` if from matching mac"
										}
									},
									{
										"name": "network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if:\n  * `type`==`mac` (optional. default is `any`)\n  * `type`==`subnet` (optional. default is `any`)\n  * `type`==`network`\n  * `type`==`resource` (optional. default is `any`)\n  * `type`==`static_gbp` if from matching network (vlan)'"
										}
									},
									{
										"name": "radius_group",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if:\n  * `type`==`radius_group`\n  * `type`==`static_gbp`\nif from matching radius_group"
										}
									},
									{
										"name": "specs",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "port_range",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "80"
															},
															"description": "matched dst port, \"0\" means any"
														}
													},
													{
														"name": "protocol",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "any"
															},
															"description": "`tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`. `protocol_number` is between 1-254"
														}
													}
												]
											},
											"description": "if `type`==`resource`\nempty means unrestricted, i.e. any"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if \n- `type`==`subnet` \n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching subnet"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "required",
											"description": "enum: `any`, `dynamic_gbp`, `mac`, `network`, `radius_group`, `resource`, `static_gbp`, `subnet`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"dynamic_gbp\",\n\"mac\",\n\"network\",\n\"radius_group\",\n\"resource\",\n\"static_gbp\",\n\"subnet\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "ACL Tags to identify traffic source or destination. Key name is the tag name"
						}
					},
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "dhcp_snooping",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "all_networks",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for dynamic ARP inspection check"
									}
								},
								{
									"name": "enable_ip_source_guard",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for check for forging source IP address"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "networks",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "if `all_networks`==`false`, list of network with DHCP snooping enabled"
									}
								}
							]
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							}
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "enable mist_nac to use radsec"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "networks",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)\nNOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set"
										}
									},
									{
										"name": "isolation_vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional for pure switching, required when L3 / routing features are used"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "Property key is network name"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "port_mirroring",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "input_networks_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_egress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "output_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									},
									{
										"name": "output_port_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									}
								]
							},
							"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
						}
					},
					{
						"name": "port_usages",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "all_networks",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`trunk` whether to trunk all network/vlans"
										}
									},
									{
										"name": "allow_dhcpd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri_state.\n\nWhen it is not defined, it means using the system’s default setting which depends on whether the port is a access or trunk port."
										}
									},
									{
										"name": "allow_multiple_supplicants",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "bypass_auth_when_server_down",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down"
										}
									},
									{
										"name": "bypass_auth_when_server_down_for_unkonwn_client",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether the port is disabled"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_vlan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return"
										}
									},
									{
										"name": "enable_mac_auth",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` whether to enable MAC Auth"
										}
									},
									{
										"name": "enable_qos",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "guest_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)"
										}
									},
									{
										"name": "inter_switch_link",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` inter_switch_link is used together with \"isolation\" under networks\nNOTE: inter_switch_link works only between Juniper device. This has to be applied to both ports connected together"
										}
									},
									{
										"name": "mac_auth_only",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth`==`true`"
										}
									},
									{
										"name": "mac_auth_protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "eap-md5"
											},
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth` ==`true`. This type is ignored if mist_nac is enabled. enum: `eap-md5`, `eap-peap`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"eap-md5\",\n\"eap-peap\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mac_limit",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(0)"
													}
												}
											]
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "`mode`==`dynamic` must only be used with the port usage with the name `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"dynamic\",\n\"inet\",\n\"trunk\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514."
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`==`trunk`, the list of network/vlans"
										}
									},
									{
										"name": "persist_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`access` and `port_auth`!=`dot1x` whether the port should retain dynamically learned MAC addresses"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port"
										}
									},
									{
										"name": "port_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dot1x\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` native network/vlan for untagged traffic"
										}
									},
									{
										"name": "reauth_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3600
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` reauthentication interval range",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(10, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "rejected_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` when radius server reject / fails"
										}
									},
									{
										"name": "reset_default_when",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "link_down"
											},
											"description": "Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `link_down`, `none` (let the DPC port keep at the current port usage)",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_down\",\n\"none\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "rules",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "equals",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "equals_any",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "use `equals_any` to match any item in a list"
														}
													},
													{
														"name": "expression",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "\"[0:3]\":\"abcdef\" -\u003e \"abc\"\n\"split(.)[1]\": \"a.b.c\" -\u003e \"b\"\n\"split(-)[1][0:3]: \"a1234-b5678-c90\" -\u003e \"b56\""
														}
													},
													{
														"name": "src",
														"string": {
															"computed_optional_required": "required",
															"description": "enum: `link_peermac`, `lldp_chassis_id`, `lldp_hardware_revision`, `lldp_manufacturer_name`, `lldp_oui`, `lldp_serial_number`, `lldp_system_name`, `radius_dynamicfilter`, `radius_usermac`, `radius_username`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_peermac\",\n\"lldp_chassis_id\",\n\"lldp_hardware_revision\",\n\"lldp_manufacturer_name\",\n\"lldp_oui\",\n\"lldp_serial_number\",\n\"lldp_system_name\",\n\"radius_dynamicfilter\",\n\"radius_usermac\",\n\"radius_username\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "usage",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "`port_usage` name"
														}
													}
												]
											},
											"description": "Only if `mode`==`dynamic`"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed"
										}
									},
									{
										"name": "storm_control",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "no_broadcast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on broadcast traffic"
													}
												},
												{
													"name": "no_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on multicast traffic"
													}
												},
												{
													"name": "no_registered_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on registered multicast traffic"
													}
												},
												{
													"name": "no_unknown_unicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on unknown unicast traffic"
													}
												},
												{
													"name": "percentage",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 100)"
																}
															}
														]
													}
												}
											],
											"description": "Switch storm control\nOnly if `mode`!=`dynamic`"
										}
									},
									{
										"name": "stp_edge",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames"
										}
									},
									{
										"name": "voip_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth"
										}
									}
								]
							}
						}
					},
					{
						"name": "radius_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "acct_interim_interval",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "acct_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1813
														},
														"description": "Acct port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1812
														},
														"description": "Auth port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers_retries",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3
										},
										"description": "radius auth session retries"
									}
								},
								{
									"name": "auth_servers_timeout",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "radius auth session timeout"
									}
								},
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "coa_port",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3799
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip"
									}
								},
								{
									"name": "source_ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`"
									}
								}
							],
							"description": "Junos Radius config"
						}
					},
					{
						"name": "remote_syslog",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "archive",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "files",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "size",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "console",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "contents",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "facility",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "severity",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "files",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "archive",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "files",
																"int64": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "size",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												},
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "file",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
									}
								},
								{
									"name": "send_to_all_servers",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "facility",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 514
														}
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "udp"
														},
														"description": "enum: `tcp`, `udp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"tcp\",\n\"udp\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "routing_instance",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "severity",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "source_address",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "tag",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "time_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `millisecond`, `year`, `year millisecond`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"millisecond\",\n\"year\",\n\"year millisecond\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "users",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "snmp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "client_list",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "clients",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "contact",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "engine_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `engine-id-suffix`, `local`, `use-default-ip-address`, `use_mac-address`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"engine-id-suffix\",\n\"local\",\n\"use-default-ip-address\",\n\"use_mac-address\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "location",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										}
									}
								},
								{
									"name": "trap_groups",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "categories",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "group_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html"
													}
												},
												{
													"name": "targets",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "version",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "v2"
														},
														"description": "enum: `all`, `v1`, `v2`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"all\",\n\"v1\",\n\"v2\",\n)"
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"name": "v2c_config",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "authorization",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "client_list_name here should refer to client_list above"
													}
												},
												{
													"name": "community_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "view name here should be defined in views above"
													}
												}
											]
										}
									}
								},
								{
									"name": "v3_config",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "notify",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "tag",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "type",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `inform`, `trap`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"inform\",\n\"trap\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											},
											{
												"name": "notify_filter",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "contents",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "include",
																				"bool": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "oid",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															},
															{
																"name": "profile_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_address",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "address",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "address_mask",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 161
																	}
																}
															},
															{
																"name": "tag_list",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "\u003crefer to notify tag, can be multiple with blank"
																}
															},
															{
																"name": "target_address_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "target_parameters",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to notify target parameters name"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_parameters",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "message_processing_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `v1`, `v2c`, `v3`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v1\",\n\"v2c\",\n\"v3\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "notify_filter",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to profile-name in notify_filter"
																}
															},
															{
																"name": "security_level",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `authentication`, `none`, `privacy`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `usm`, `v1`, `v2c`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to security_name in usm"
																}
															}
														]
													}
												}
											},
											{
												"name": "usm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "engineid",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "required only if `engine_type`==`remote_engine`"
															}
														},
														{
															"name": "engine_type",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "enum: `local_engine`, `remote_engine`",
																"validators": [
																	{
																		"custom": {
																			"imports": [
																				{
																					"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																				}
																			],
																			"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local_engine\",\n\"remote_engine\",\n)"
																		}
																	}
																]
															}
														},
														{
															"name": "users",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "authentication_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `authentication_type`==`authentication_none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(7)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "authentication_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication_md5`, `authentication_none`, `authentication_sha`, `authentication_sha224`, `authentication_sha256`, `authentication_sha384`, `authentication_sha512`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication_md5\",\n\"authentication_none\",\n\"authentication_sha\",\n\"authentication_sha224\",\n\"authentication_sha256\",\n\"authentication_sha384\",\n\"authentication_sha512\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `encryption_type`==`privacy-none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(8)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"privacy-3des\",\n\"privacy-aes128\",\n\"privacy-des\",\n\"privacy-none\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		}
																	]
																}
															}
														}
													]
												}
											},
											{
												"name": "vacm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "access",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "group_name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		},
																		{
																			"name": "prefix_list",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "context_prefix",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "only required if `type`==`context_prefix`"
																							}
																						},
																						{
																							"name": "notify_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "read_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "security_level",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `authentication`, `none`, `privacy`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "security_model",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `any`, `usm`, `v1`, `v2c`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "type",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `context_prefix`, `default_context_prefix`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"context_prefix\",\n\"default_context_prefix\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "write_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														{
															"name": "security_to_group",
															"single_nested": {
																"computed_optional_required": "computed_optional",
																"attributes": [
																	{
																		"name": "content",
																		"list_nested": {
																			"computed_optional_required": "computed_optional",
																			"nested_object": {
																				"attributes": [
																					{
																						"name": "group",
																						"string": {
																							"computed_optional_required": "computed_optional",
																							"description": "refer to group_name under access"
																						}
																					},
																					{
																						"name": "security_name",
																						"string": {
																							"computed_optional_required": "computed_optional"
																						}
																					}
																				]
																			}
																		}
																	},
																	{
																		"name": "security_model",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "enum: `usm`, `v1`, `v2c`",
																			"validators": [
																				{
																					"custom": {
																						"imports": [
																							{
																								"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																							}
																						],
																						"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "views",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "include",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "if the root oid configured is included"
													}
												},
												{
													"name": "oid",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enable",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "rules",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "additional_config_cmds",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
													}
												},
												{
													"name": "match_role",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "role to match"
													}
												},
												{
													"name": "match_type",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "'property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`"
													}
												},
												{
													"name": "match_value",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `auto`, `full`, `half`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `auto`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"100m\",\n\"10m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n\"auto\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Propery key is the interface name or interface range"
													}
												},
												{
													"name": "port_mirroring",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "input_networks_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_egress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "output_network",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
																	}
																},
																{
																	"name": "output_port_id",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
																	}
																}
															]
														},
														"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "Switch template"
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config_revert",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										}
									}
								},
								{
									"name": "protect_re",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "allowed_services",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "optionally, services we'll allow"
												}
											},
											{
												"name": "custom",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "port_range",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "0"
																	},
																	"description": "matched dst port, \"0\" means any"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `icmp`, `tcp`, `udp`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"icmp\",\n\"tcp\",\n\"udp\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "subnet",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when enabled, all traffic that is not essential to our operation will be dropped\ne.g. ntp / dns / traffic to mist will be allowed by default\n     if dhcpd is enabled, we'll make sure it works"
												}
											},
											{
												"name": "trusted_hosts",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "host/subnets we'll allow traffic to/from"
												}
											}
										],
										"description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works"
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tacacs",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "acct_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "default_role",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "none"
													},
													"description": "enum: `admin`, `helpdesk`, `none`, `read`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"admin\",\n\"helpdesk\",\n\"none\",\n\"read\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "network",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "which network the TACACS server resides"
												}
											},
											{
												"name": "tacplus_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Next-hop address"
														}
													}
												]
											},
											"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		},
		{
			"name": "org_rftemplate",
			"schema": {
				"attributes": [
					{
						"name": "ant_gain_24",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ant_gain_5",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ant_gain_6",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "band_24",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 20
										},
										"description": "channel width for the 2.4GHz band. enum: `20`, `40`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 17
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 18)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 18)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"description": "enum: `auto`, `long`, `short`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "band_24_usage",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "enum: `24`, `5`, `6`, `auto`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"24\",\n\"5\",\n\"6\",\n\"auto\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "band_5",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "channel width for the 5GHz band. enum: `20`, `40`, `80`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 17
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"description": "enum: `auto`, `long`, `short`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "band_5_on_24_radio",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "channel width for the 5GHz band. enum: `20`, `40`, `80`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 17
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"description": "enum: `auto`, `long`, `short`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "band_6",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 80
										},
										"description": "channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n160,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 18
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 18)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 18)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"description": "enum: `auto`, `long`, `short`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "standard_power",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed and we'll fallback to Low Power Indoor if AFC failed"
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "country_code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, country code to use. If specified, this gets applied to all sites using the RF Template"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "model_specific",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ant_gain_24",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "ant_gain_5",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "ant_gain_6",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "band_24",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 20
														},
														"description": "channel width for the 2.4GHz band. enum: `20`, `40`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 18)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 18)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"description": "enum: `auto`, `long`, `short`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_24_usage",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `24`, `5`, `6`, `auto`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"24\",\n\"5\",\n\"6\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "band_5",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "channel width for the 5GHz band. enum: `20`, `40`, `80`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"description": "enum: `auto`, `long`, `short`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_5_on_24_radio",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "channel width for the 5GHz band. enum: `20`, `40`, `80`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"description": "enum: `auto`, `long`, `short`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_6",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"description": "enum: `1x1`, `2x2`, `3x3`, `4x4`, `default`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n\"default\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "channel width for the 6GHz band. enum: `20`, `40`, `80`, `160`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n160,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 18
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 18)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 18)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"description": "enum: `auto`, `long`, `short`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"long\",\n\"short\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "standard_power",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "for 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed and we'll fallback to Low Power Indoor if AFC failed"
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									}
								]
							},
							"description": "overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name (e.g. \"AP63\")"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name of the RF template"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "scanning_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "whether scanning radio is enabled"
						}
					}
				]
			}
		},
		{
			"name": "org_service",
			"schema": {
				"attributes": [
					{
						"name": "addresses",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`custom`, ip subnets (e.g. 10.0.0.0/8)"
						}
					},
					{
						"name": "app_categories",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`app_categories`, list of application categories are available through /api/v1/const/app_categories"
						}
					},
					{
						"name": "app_subcategories",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`app_categories`, list of application categories are available through /api/v1/const/app_subcategories"
						}
					},
					{
						"name": "apps",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`apps`, list of applications are available through:\n  * /api/v1/const/applications\n  * /api/v1/const/gateway_applications\n  * /insight/top_app_by-bytes?wired=true"
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "dscp",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "failover_policy",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "revertable"
							},
							"description": "enum: `non_revertable`, `none`, `revertable`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"non_revertable\",\n\"none\",\n\"revertable\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`custom`, web filtering"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "max_jitter",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "max_latency",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "max_loss",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "sle_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable measure SLE"
						}
					},
					{
						"name": "specs",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "port number, port range, or variable"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "any"
											},
											"description": "`https`/ `tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`.\n`protocol_number` is between 1-254"
										}
									}
								]
							},
							"description": "when `type`==`custom`, optional, if it doesn't exist, http and https is assumed"
						}
					},
					{
						"name": "ssr_relaxed_tcp_state_enforcement",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "traffic_class",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "best_effort"
							},
							"description": "when `traffic_type`==`custom`. enum: `best_effort`, `high`, `low`, `medium`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"best_effort\",\n\"high\",\n\"low\",\n\"medium\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "traffic_type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "data_best_effort"
							},
							"description": "values from `/api/v1/consts/traffic_types`"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "custom"
							},
							"description": "enum: `app_categories`, `apps`, `custom`, `urls`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"app_categories\",\n\"apps\",\n\"custom\",\n\"urls\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "urls",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`urls`, no need for spec as URL can encode the ports being used"
						}
					}
				]
			}
		},
		{
			"name": "org_servicepolicy",
			"schema": {
				"attributes": [
					{
						"name": "action",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "allow"
							},
							"description": "enum: `allow`, `deny`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "appqoe",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							],
							"description": "For SRX Only"
						}
					},
					{
						"name": "ewf",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "alert_only",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "block_message",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "enabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "strict"
											},
											"description": "enum: `critical`, `standard`, `strict`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "idp",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "alert_only",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "idpprofile_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
									}
								},
								{
									"name": "profile",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "strict"
										},
										"description": "`strict` (default) / `standard` / or keys from from idp_profiles"
									}
								}
							]
						}
					},
					{
						"name": "local_routing",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "access within the same VRF"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preference",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
						}
					},
					{
						"name": "services",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					},
					{
						"name": "tenants",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "org_setting",
			"schema": {
				"attributes": [
					{
						"name": "ap_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for AP devices only. When configured it takes effect for AP devices and `device_updown_threshold` is ignored.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "api_policy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "no_reveal",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, API hides password/secrets when the user doesn't have write access\n  * `true`: API will hide passwords/secrets for all users\n  * `false`: API will hide passwords/secrets for read-only users"
									}
								}
							]
						}
					},
					{
						"name": "cacerts",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of PEM-encoded ca certs"
						}
					},
					{
						"name": "celona",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "api_key",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "api_prefix",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "cloudshark",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "apitoken",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "url",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if using CS Enteprise"
									}
								}
							]
						}
					},
					{
						"name": "cradlepoint",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "cp_api_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "cp_api_key",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ecm_api_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "ecm_api_key",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "device_cert",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "cert",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "key",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "common device cert, optional"
						}
					},
					{
						"name": "device_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery via\n  * device-updowns webhooks topic, \n  * Mist Alert Framework; e.g. send AP/SW/GW down event only if AP/SW/GW Up is not seen within the threshold in minutes; 0 - 240, default is 0 (trigger immediate)",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "disable_pcap",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disallow Mist to analyze pcap files (this is required for marvis pcap)"
						}
					},
					{
						"name": "disable_remote_shell",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disable remote shell access for an entire org"
						}
					},
					{
						"name": "gateway_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for Gateway devices only. When configured it takes effect for GW devices and `device_updown_threshold` is ignored.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "installer",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_all_devices",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "allow_all_sites",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "extra_site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "grace_period",
									"int64": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "jcloud",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "org_apitoken",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "JCloud Org Token"
									}
								},
								{
									"name": "org_apitoken_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "JCloud Org Token Name"
									}
								},
								{
									"name": "org_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "JCloud Org ID"
									}
								}
							]
						}
					},
					{
						"name": "juniper",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "accounts",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "linked_by",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "mxtunnel_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of Mist Tunnels"
									}
								},
								{
									"name": "use_mxtunnel",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to use Mist Tunnel for mgmt connectivity, this takes precedence over use_wxtunnel"
									}
								},
								{
									"name": "use_wxtunnel",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to use wxtunnel for mgmt connectivity"
									}
								}
							],
							"description": "management-related properties"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "cacerts",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of PEM-encoded ca certs"
									}
								},
								{
									"name": "default_idp_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use this IDP when no explicit realm present in the incoming username/CN OR when no IDP is explicitly mapped to the incoming realm."
									}
								},
								{
									"name": "eap_ssl_security_level",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 2
										},
										"description": "eap ssl security level\nsee https://www.openssl.org/docs/man1.1.1/man3/SSL_CTX_set_security_level.html#DEFAULT-CALLBACK-BEHAVIOUR",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 4)"
												}
											}
										]
									}
								},
								{
									"name": "eu_only",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "By default NAC POD failover considers all NAC pods available around the globe, i.e. EU, US, or APAC based, failover happens based on geo IP of the originating site.\nFor strict GDPR compliancy NAC POD failover would only happen between the PODs located within the EU environment, and no authentication would take place outside of EU. This is an org setting that is applicable to WLANs, switch templates, mxedge clusters that have mist_nac enabled"
									}
								},
								{
									"name": "idps",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "exclude_realms",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "when the IDP of mxedge_proxy type, exclude the following realms from proxying in addition to other valid home realms in this org"
													}
												},
												{
													"name": "id",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user_realms",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "which realm should trigger this IDP. User Realm is extracted from:\n  * Username-AVP (`mist.com` from john@mist.com)\n  * Cert CN"
													}
												}
											]
										}
									}
								},
								{
									"name": "server_cert",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "cert",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "key",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "password",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "private key password (optional)"
												}
											}
										],
										"description": "radius server cert to be presented in EAP TLS"
									}
								},
								{
									"name": "use_ip_version",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "v4"
										},
										"description": "by default NAS devices(switches/aps) and proxies(mxedge) are configured to reach mist-nac via IPv4. enum: `v4`, `v6`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v4\",\n\"v6\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_ssl_port",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "By default NAS devices (switches/aps) and proxies(mxedge) are configured to use port TCP2083(radsec) to reach mist-nac. \nSet `use_ssl_port`==`true` to override that port with TCP43 (ssl), \nThis is a org level setting that is applicable to wlans, switch_templates, and mxedge_clusters that have mist-nac enabled"
									}
								}
							]
						}
					},
					{
						"name": "mxedge_fips_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "mxedge_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "fips_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "mist_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "oob_ip_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `disabled`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"disabled\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "oob_ip_type6",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "autoconf"
										},
										"description": "enum: `autoconf`, `dhcp`, `disabled`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"autoconf\",\n\"dhcp\",\n\"disabled\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "password_policy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether the policy is enabled"
									}
								},
								{
									"name": "freshness",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "days, required if password policy is enabled"
									}
								},
								{
									"name": "min_length",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "required password length"
									}
								},
								{
									"name": "requires_special_char",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to require special character"
									}
								},
								{
									"name": "requires_two_factor_auth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to require two-factor auth"
									}
								}
							],
							"description": "password policy"
						}
					},
					{
						"name": "pcap",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "bucket",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "max_pkt_len",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 128
										},
										"description": "max_len of non-management packets to capture",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtMost(128)"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "security",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "disable_local_ssh",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to disable local SSH (by default, local SSH is enabled with allow_mist in Org is enabled"
									}
								},
								{
									"name": "fips_zeroize_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "password required to zeroize devices (FIPS) on site level"
									}
								},
								{
									"name": "limit_ssh_access",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to allow certain SSH keys to SSH into the AP (see Site:Setting)"
									}
								}
							]
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "ap_affinity_threshold",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 12
										},
										"description": "If the field is set in both site/setting and org/setting, the value from site/setting will be used."
									}
								}
							]
						}
					},
					{
						"name": "switch_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for Switch devices only. When configured it takes effect for SW devices and `device_updown_threshold` is ignored."
						}
					},
					{
						"name": "synthetic_test",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "vlans",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "custom_test_urls",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "for some vlans where we don't want this to run"
													}
												},
												{
													"name": "vlan_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "wan_speedtest",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "time_od_fay",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "any"
													},
													"description": "any / HH:MM (24-hour format)"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "ui_idle_timeout",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "automatically logout the user when UI session is inactive. `0` means disabled",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 480)"
									}
								}
							]
						}
					},
					{
						"name": "vpn_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "as_base",
									"int64": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 2147483647)"
												}
											}
										]
									}
								},
								{
									"name": "st_subnet",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "10.224.0.0/12"
										},
										"description": "equiring /12 or bigger to support 16 private IPs for 65535 gateways"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "org_sitegroup",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "org_vpn",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "paths",
						"map_nested": {
							"computed_optional_required": "required",
							"nested_object": {
								"attributes": [
									{
										"name": "bfd_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "enum: `broadband`, `lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if different from the wan port"
										}
									},
									{
										"name": "pod",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 128)"
													}
												}
											]
										}
									}
								]
							}
						}
					}
				]
			}
		},
		{
			"name": "org_wlan",
			"schema": {
				"attributes": [
					{
						"name": "acct_immediate_update",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "enable coa-immediate-update and address-change-immediate-update on the access profile."
						}
					},
					{
						"name": "acct_interim_interval",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 65535)"
									}
								}
							]
						}
					},
					{
						"name": "acct_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "host",
										"string": {
											"computed_optional_required": "required",
											"description": "ip / hostname of RADIUS server"
										}
									},
									{
										"name": "keywrap_enabled",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_format",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `ascii`, `hex`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "keywrap_kek",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_mack",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1813
											},
											"description": "Acct port of RADIUS server",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required",
											"description": "secret of RADIUS server"
										}
									}
								]
							},
							"description": "list of RADIUS accounting servers, optional, order matters where the first one is treated as primary"
						}
					},
					{
						"name": "airwatch",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "api_key",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "API Key"
									}
								},
								{
									"name": "console_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "console URL"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "password"
									}
								},
								{
									"name": "username",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "username"
									}
								}
							],
							"description": "airwatch wlan settings"
						}
					},
					{
						"name": "allow_ipv6_ndp",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "only applicable when limit_bcast==true, which allows or disallows ipv6 Neighbor Discovery packets to go through"
						}
					},
					{
						"name": "allow_mdns",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "only applicable when limit_bcast==true, which allows mDNS / Bonjour packets to go through"
						}
					},
					{
						"name": "allow_ssdp",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "only applicable when `limit_bcast`==`tru`e, which allows SSDP"
						}
					},
					{
						"name": "ap_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of device ids"
						}
					},
					{
						"name": "app_limit",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "apps",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "Map from app key to bandwidth in kbps. \nProperty key is the app key, defined in Get Application List"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "wxtag_ids",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "Map from wxtag_id of Hostname Wxlan Tags to bandwidth in kbps\nProperty key is the wxtag id"
									}
								}
							],
							"description": "bandwidth limiting for apps (applies to up/down)"
						}
					},
					{
						"name": "app_qos",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "apps",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dscp",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 63)"
																}
															}
														]
													}
												},
												{
													"name": "dst_subnet",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "subnet filter is not required but helps AP to only inspect certain traffic (thus reducing AP load)"
													}
												},
												{
													"name": "src_subnet",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "subnet filter is not required but helps AP to only inspect certain traffic (thus reducing AP load)"
													}
												}
											]
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "others",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dscp",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 63)"
																}
															}
														]
													}
												},
												{
													"name": "dst_subnet",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_ranges",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "src_subnet",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "app qos wlan settings"
						}
					},
					{
						"name": "apply_to",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "enum: `aps`, `site`, `wxtags`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aps\",\n\"site\",\n\"wxtags\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "arp_filter",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable smart arp filter"
						}
					},
					{
						"name": "auth",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "anticlog_threshold",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 16
										},
										"description": "SAE anti-clogging token threshold",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(16, 32)"
												}
											}
										]
									}
								},
								{
									"name": "eap_reauth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to trigger EAP reauth when the session ends"
									}
								},
								{
									"name": "enable_mac_auth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable MAC Auth, uses the same auth_servers"
									}
								},
								{
									"name": "key_idx",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 1
										},
										"description": "when `type`==`wep`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 4)"
												}
											}
										]
									}
								},
								{
									"name": "keys",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "when type=wep, four 10-character or 26-character hex string, null can be used. All keys, if provided, have to be in the same length"
									}
								},
								{
									"name": "multi_psk_only",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when `type`==`psk`, whether to only use multi_psk"
									}
								},
								{
									"name": "owe",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "disabled"
										},
										"description": "if `type`==`open`. enum: `disabled`, `enabled` (means transition mode), `required`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"disabled\",\n\"enabled\",\n\"required\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "pairwise",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "when `type`=`psk` or `type`=`eap`, one or more of `wpa1-ccmp`, `wpa1-tkip`, `wpa2-ccmp`, `wpa2-tkip`, `wpa3`"
									}
								},
								{
									"name": "private_wlan",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when `multi_psk_only`==`true`, whether private wlan is enabled"
									}
								},
								{
									"name": "psk",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `type`==`psk`, 8-64 characters, or 64 hex characters",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.LengthBetween(8, 64)"
												}
											}
										]
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "open"
										},
										"description": "enum: `eap`, `eap192`, `open`, `psk`, `psk-tkip`, `psk-wpa2-tkip`, `wep`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"eap\",\n\"eap192\",\n\"open\",\n\"psk\",\n\"psk-tkip\",\n\"psk-wpa2-tkip\",\n\"wep\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "wep_as_secondary_auth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "enable WEP as secondary auth"
									}
								}
							],
							"description": "authentication wlan settings"
						}
					},
					{
						"name": "auth_server_selection",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "ordered"
							},
							"description": "When ordered, AP will prefer and go back to the first server if possible. enum: `ordered`, `unordered`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ordered\",\n\"unordered\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "auth_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "host",
										"string": {
											"computed_optional_required": "required",
											"description": "ip / hostname of RADIUS server"
										}
									},
									{
										"name": "keywrap_enabled",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_format",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `ascii`, `hex`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "keywrap_kek",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_mack",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1812
											},
											"description": "Auth port of RADIUS server",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required",
											"description": "secret of RADIUS server"
										}
									}
								]
							},
							"description": "list of RADIUS authentication servers, at least one is needed if `auth type`==`eap`, order matters where the first one is treated as primary"
						}
					},
					{
						"name": "auth_servers_nas_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, up to 48 bytes, will be dynamically generated if not provided. used only for authentication servers"
						}
					},
					{
						"name": "auth_servers_nas_ip",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, NAS-IP-ADDRESS to use"
						}
					},
					{
						"name": "auth_servers_retries",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 2
							},
							"description": "radius auth session retries. Following fast timers are set if “fast_dot1x_timers” knob is enabled. ‘retries’  are set to value of auth_servers_retries. ‘max-requests’ is also set when setting auth_servers_retries and is set to default value to 3."
						}
					},
					{
						"name": "auth_servers_timeout",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 5
							},
							"description": "radius auth session timeout. Following fast timers are set if “fast_dot1x_timers” knob is enabled. ‘quite-period’  and ‘transmit-period’ are set to half the value of auth_servers_timeout. ‘supplicant-timeout’ is also set when setting auth_servers_timeout and is set to default value of 10."
						}
					},
					{
						"name": "band_steer",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable band_steering, this works only when band==both"
						}
					},
					{
						"name": "band_steer_force_band5",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "force dual_band capable client to connect to 5G"
						}
					},
					{
						"name": "bands",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of radios that the wlan should apply to"
						}
					},
					{
						"name": "block_blacklist_clients",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to block the clients in the blacklist (up to first 256 macs)"
						}
					},
					{
						"name": "bonjour",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "additional_vlan_ids",
									"list": {
										"computed_optional_required": "required",
										"element_type": {
											"string": {}
										},
										"description": "additional VLAN IDs (on the LAN side or from other WLANs) should we be forwarding bonjour queries/responses"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable bonjour for this WLAN. Once enabled, limit_bcast is assumed true, allow_mdns is assumed false"
									}
								},
								{
									"name": "services",
									"map_nested": {
										"computed_optional_required": "required",
										"nested_object": {
											"attributes": [
												{
													"name": "disable_local",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to prevent wireless clients to discover bonjour devices on the same WLAN"
													}
												},
												{
													"name": "radius_groups",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "optional, if the service is further restricted for certain RADIUS groups"
													}
												},
												{
													"name": "scope",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "same_site"
														},
														"description": "how bonjour services should be discovered for the same WLAN. enum: `same_ap`, `same_map`, `same_site`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"same_ap\",\n\"same_map\",\n\"same_site\",\n)"
																}
															}
														]
													}
												}
											]
										},
										"description": "what services are allowed. \nProperty key is the service name"
									}
								}
							],
							"description": "bonjour gateway wlan settings"
						}
					},
					{
						"name": "cisco_cwa",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allowed_hostnames",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of hostnames without http(s):// (matched by substring)"
									}
								},
								{
									"name": "allowed_subnets",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of CIDRs"
									}
								},
								{
									"name": "blocked_subnets",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of blocked CIDRs"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							],
							"description": "Cisco CWA (central web authentication) required RADIUS with COA in order to work. See CWA: https://www.cisco.com/c/en/us/support/docs/security/identity-services-engine/115732-central-web-auth-00.html"
						}
					},
					{
						"name": "client_limit_down",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "kbps"
						}
					},
					{
						"name": "client_limit_down_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if downlink limiting per-client is enabled"
						}
					},
					{
						"name": "client_limit_up",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "kbps"
						}
					},
					{
						"name": "client_limit_up_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if uplink limiting per-client is enabled"
						}
					},
					{
						"name": "coa_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disable_event_timestamp_check",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disable Event-Timestamp Check"
										}
									},
									{
										"name": "enabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3799
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "list of COA (change of authorization) servers, optional"
						}
					},
					{
						"name": "disable_11ax",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "some old WLAN drivers may not be compatible"
						}
					},
					{
						"name": "disable_ht_vht_rates",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "to disable ht or vht rates"
						}
					},
					{
						"name": "disable_uapsd",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disable U-APSD"
						}
					},
					{
						"name": "disable_v1_roam_notify",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "disable sending v2 roam notification messages"
						}
					},
					{
						"name": "disable_v2_roam_notify",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "disable sending v2 roam notification messages"
						}
					},
					{
						"name": "disable_wmm",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disable WMM"
						}
					},
					{
						"name": "dns_server_rewrite",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "radius_groups",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "map between radius_group and the desired DNS server (IPv4 only)\nProperty key is the RADIUS group, property value is the desired DNS Server"
									}
								}
							],
							"description": "for radius_group-based DNS server (rewrite DNS request depending on the Group RADIUS server returns)"
						}
					},
					{
						"name": "dtim",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 2
							}
						}
					},
					{
						"name": "dynamic_psk",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "default_psk",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "default PSK to use if cloud WLC is not available, 8-63 characters",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.LengthBetween(8, 63)"
												}
											}
										]
									}
								},
								{
									"name": "default_vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "force_lookup",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when 11r is enabled, we'll try to use the cached PMK, this can be disabled\n`false` means auto"
									}
								},
								{
									"name": "source",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "radius"
										},
										"description": "enum: `cloud_psks`, `radius`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cloud_psks\",\n\"radius\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "vlan_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								}
							],
							"description": "for dynamic PSK where we get per_user PSK from Radius. dynamic_psk allows PSK to be selected at runtime depending on context (wlan/site/user/...) thus following configurations are assumed (currently)\n  * PSK will come from RADIUS server\n  * AP sends client MAC as username ans password (i.e. `enable_mac_auth` is assumed)\n  * AP sends BSSID:SSID as Caller-Station-ID\n  * `auth_servers` is required\n  * PSK will come from cloud WLC if source is cloud_psks\n  * default_psk will be used if cloud WLC is not available\n  * `multi_psk_only` and `psk` is ignored\n  * `pairwise` can only be wpa2-ccmp (for now, wpa3 support on the roadmap)"
						}
					},
					{
						"name": "dynamic_vlan",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "default_vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable dynamic vlan"
									}
								},
								{
									"name": "local_vlan_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "vlan_ids to be locally bridged"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "standard"
										},
										"description": "standard (using Tunnel-Private-Group-ID, widely supported), airespace-interface-name (Airespace/Cisco). enum: `airespace-interface-name`, `standard`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"airespace-interface-name\",\n\"standard\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "vlans",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "map between vlan_id (as string) to airespace interface names (comma-separated) or null for stndard mapping\n  * if `dynamic_vlan.type`==`standard`, property key is the Vlan ID and property value is \\\"\\\"\n  * if `dynamic_vlan.type`==`airespace-interface-name`, property key is the Vlan ID and property value is the Airespace Interface Name"
									}
								}
							],
							"description": "for 802.1x"
						}
					},
					{
						"name": "enable_local_keycaching",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "enable AP-AP keycaching via multicast"
						}
					},
					{
						"name": "enable_wireless_bridging",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "by default, we'd inspect all DHCP packets and drop those unrelated to the wireless client itself in the case where client is a wireless bridge (DHCP packets for other MACs will need to be orwarded), wireless_bridging can be enabled"
						}
					},
					{
						"name": "enable_wireless_bridging_dhcp_tracking",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if the client bridge is doing DHCP on behalf of other devices (L2-NAT), enable dhcp_tracking will cut down DHCP response packets to be forwarded to wireless"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "if this wlan is enabled"
						}
					},
					{
						"name": "fast_dot1x_timers",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if set to true, sets default fast-timers with values calculated from ‘auth_servers_timeout’ and ‘auth_server_retries’ ."
						}
					},
					{
						"name": "hide_ssid",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to hide SSID in beacon"
						}
					},
					{
						"name": "hostname_ie",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "include hostname inside IE in AP beacons / probe responses"
						}
					},
					{
						"name": "hotspot20",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "domain_name",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable hotspot 2.0 config"
									}
								},
								{
									"name": "nai_realms",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "operators",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of operators to support"
									}
								},
								{
									"name": "rcoi",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "venue_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "venue name, default is site name"
									}
								}
							],
							"description": "hostspot 2.0 wlan settings"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "inject_dhcp_option_82",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "circuit_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to inject option 82 when forwarding DHCP packets"
									}
								}
							]
						}
					},
					{
						"name": "interface",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "all"
							},
							"description": "where this WLAN will be connected to. enum: `all`, `eth0`, `eth1`, `eth2`, `eth3`, `mxtunnel`, `site_mxedge`, `wxtunnel`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"all\",\n\"eth0\",\n\"eth1\",\n\"eth2\",\n\"eth3\",\n\"mxtunnel\",\n\"site_mxedge\",\n\"wxtunnel\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to stop clients to talk to each other"
						}
					},
					{
						"name": "l2_isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if isolation is enabled, whether to deny clients to talk to L2 on the LAN"
						}
					},
					{
						"name": "legacy_overds",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "legacy devices requires the Over-DS (for Fast BSS Transition) bit set (while our chip doesn’t support it). Warning! Enabling this will cause problem for iOS devices."
						}
					},
					{
						"name": "limit_bcast",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to limit broadcast packets going to wireless (i.e. only allow certain bcast packets to go through)"
						}
					},
					{
						"name": "limit_probe_response",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "limit probe response base on some heuristic rules"
						}
					},
					{
						"name": "max_idletime",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 1800
							},
							"description": "max idle time in seconds",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(60, 86400)"
									}
								}
							]
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when enabled:\n  * `auth_servers` is ignored\n  * `acct_servers` is ignored\n  * `auth_servers_*` are ignored\n  * `coa_servers` is ignored\n  * `radsec` is ignored\n  * `coa_enabled` is assumed'"
									}
								}
							]
						}
					},
					{
						"name": "msp_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							}
						}
					},
					{
						"name": "mxtunnel_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `interface`=`mxtunnel`, id of the Mist Tunnel"
						}
					},
					{
						"name": "mxtunnel_name",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `interface`=`site_medge`, name of the mxtunnel that in mxtunnels under Site Setting"
						}
					},
					{
						"name": "no_static_dns",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to only allow client to use DNS that we’ve learned from DHCP response"
						}
					},
					{
						"name": "no_static_ip",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to only allow client that we’ve learned from DHCP exchange to talk"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "portal",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "amazon_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "amazon OAuth2 client id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "amazon_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "amazon OAuth2 client secret. If amazon_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "amazon_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "amazon_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether amazon is enabled as a login method"
									}
								},
								{
									"name": "amazon_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using amazon auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "auth",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "none"
										},
										"description": "authentication scheme. enum: `external`, `none`, `sso`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"none\",\n\"sso\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "azure_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory app client id"
									}
								},
								{
									"name": "azure_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory app client secret"
									}
								},
								{
									"name": "azure_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether Azure Active Directory is enabled as a login method"
									}
								},
								{
									"name": "azure_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using azure auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "azure_tenant_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory tenant id."
									}
								},
								{
									"name": "broadnet_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "broadnet_sid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "MIST"
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "broadnet_user_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "bypass_when_cloud_down",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to bypass the guest portal when cloud not reachable (and apply the default policies)"
									}
								},
								{
									"name": "clickatell_api_key",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`clickatell`"
									}
								},
								{
									"name": "cross_site",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to allow guest to roam between WLANs (with same `WLAN.ssid`, regardless of variables) of different sites of same org without reauthentication (disable random_mac for seamless roaming)"
									}
								},
								{
									"name": "email_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether email (access code verification) is enabled as a login method"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether guest portal is enabled"
									}
								},
								{
									"name": "expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 1440
										},
										"description": "how long to remain authorized, in minutes"
									}
								},
								{
									"name": "external_portal_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "external portal URL (e.g. https://host/url) where we can append our query parameters to"
									}
								},
								{
									"name": "facebook_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `facebook_enabled`==`true`.\nFacebook OAuth2 app id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "facebook_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `facebook_enabled`==`true`.\nFacebook OAuth2 app secret. If facebook_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "facebook_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "facebook_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether facebook is enabled as a login method"
									}
								},
								{
									"name": "facebook_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using facebook auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "forward",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to forward the user to another URL after authorized"
									}
								},
								{
									"name": "forward_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "the URL to forward the user to"
									}
								},
								{
									"name": "google_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Google OAuth2 app id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "google_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Google OAuth2 app secret. If google_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "google_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "google_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether google is enabled as login method"
									}
								},
								{
									"name": "google_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using google auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "gupshup_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`gupshup`"
									}
								},
								{
									"name": "gupshup_userid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`gupshup`"
									}
								},
								{
									"name": "microsoft_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "microsoft 365 OAuth2 client id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "microsoft_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "microsoft 365 OAuth2 client secret. If microsoft_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "microsoft_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "microsoft_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether microsoft 365 is enabled as a login method"
									}
								},
								{
									"name": "microsoft_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using microsoft auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "passphrase_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether password is enabled"
									}
								},
								{
									"name": "passphrase_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using passphrase auth (in minutes), if not provided, uses `expire`"
									}
								},
								{
									"name": "password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "passphrase"
									}
								},
								{
									"name": "predefined_sponsors_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "whether to show list of sponsor emails mentioned in `sponsors` object as a dropdown. If both `sponsor_notify_all` and `predefined_sponsors_enabled` are false, behaviour is acc to `sponsor_email_domains`"
									}
								},
								{
									"name": "privacy",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "puzzel_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "puzzel_service_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "puzzel_username",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "sms_message_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "sms_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether sms is enabled as a login method"
									}
								},
								{
									"name": "sms_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using sms auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "sms_provider",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "manual"
										},
										"description": "enum: `broadnet`, `clickatell`, `gupshup`, `manual`, `puzzel`, `telstra`, `twilio`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadnet\",\n\"clickatell\",\n\"gupshup\",\n\"manual\",\n\"puzzel\",\n\"telstra\",\n\"twilio\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "sponsor_auto_approve",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to automatically approve guest and allow sponsor to revoke guest access, needs predefined_sponsors_enabled enabled and sponsor_notify_all disabled"
									}
								},
								{
									"name": "sponsor_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of domain allowed for sponsor email. Required if `sponsor_enabled` is `true` and `sponsors` is empty."
									}
								},
								{
									"name": "sponsor_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether sponsor is enabled"
									}
								},
								{
									"name": "sponsor_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using sponsor auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "sponsor_link_validity_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 60
										},
										"description": "how long to remain valid sponsored guest request approve/deny link received in email, in minutes."
									}
								},
								{
									"name": "sponsor_notify_all",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to notify all sponsors that are mentioned in `sponsors` object. Both `sponsor_notify_all` and `predefined_sponsors_enabled` should be true in order to notify sponsors. If true, email sent to 10 sponsors in no particular order."
									}
								},
								{
									"name": "sponsor_status_notify",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if enabled, guest will get email about sponsor's action (approve/deny)"
									}
								},
								{
									"name": "sponsors",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "object of allowed sponsors email with name. Required if `sponsor_enabled` is `true` and `sponsor_email_domains` is empty.\nProperty key is the sponsor email, Property value is the sponsor name"
									}
								},
								{
									"name": "sso_default_role",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "default role to assign if there’s no match. By default, an assertion is treated as invalid when there’s no role matched"
									}
								},
								{
									"name": "sso_forced_role",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "sso_idp_cert",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP Cert (used to verify the signed response)"
									}
								},
								{
									"name": "sso_idp_sign_algo",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "signing algorithm for SAML Assertion"
									}
								},
								{
									"name": "sso_idp_sso_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP Single-Sign-On URL"
									}
								},
								{
									"name": "sso_issuer",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP issuer URL"
									}
								},
								{
									"name": "sso_nameid_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "email"
										},
										"description": "enum: `email`, `unspecified`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"email\",\n\"unspecified\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "telstra_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`telstra`, Client ID provided by Telstra"
									}
								},
								{
									"name": "telstra_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`telstra`, Client secret provided by Telstra"
									}
								},
								{
									"name": "twilio_auth_token",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Auth token account with twilio account"
									}
								},
								{
									"name": "twilio_phone_number",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Twilio phone number associated with the account. See example for accepted format."
									}
								},
								{
									"name": "twilio_sid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Account SID provided by Twilio"
									}
								}
							],
							"description": "portal wlan settings"
						}
					},
					{
						"name": "portal_allowed_hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of hostnames without http(s):// (matched by substring)"
						}
					},
					{
						"name": "portal_allowed_subnets",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of CIDRs"
						}
					},
					{
						"name": "portal_api_secret",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "api secret (auto-generated) that can be used to sign guest authorization requests"
						}
					},
					{
						"name": "portal_denied_hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of hostnames without http(s):// (matched by substring), this takes precedence over portal_allowed_hostnames"
						}
					},
					{
						"name": "portal_image",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "Url of portal background image"
						}
					},
					{
						"name": "portal_sso_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "portal_template_url",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "N.B portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
						}
					},
					{
						"name": "qos",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "class",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "best_effort"
										},
										"description": "enum: `background`, `best_effort`, `video`, `voice`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"background\",\n\"best_effort\",\n\"video\",\n\"voice\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "overwrite",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to overwrite QoS"
									}
								}
							]
						}
					},
					{
						"name": "radsec",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "idle_timeout",
									"int64": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "mxcluster_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "To use Org mxedges when this WLAN does not use mxtunnel, specify their mxcluster_ids.\nOrg mxedge(s) identified by mxcluster_ids"
									}
								},
								{
									"name": "proxy_hosts",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "default is site.mxedge.radsec.proxy_hosts which must be a superset of all wlans[*].radsec.proxy_hosts\nwhen radsec.proxy_hosts are not used, tunnel peers (org or site mxedges) are used irrespective of use_site_mxedge"
									}
								},
								{
									"name": "server_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "name of the server to verify (against the cacerts in Org Setting). Only if not Mist Edge."
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												}
											]
										},
										"description": "List of Radsec Servers. Only if not Mist Edge.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "use_mxedge",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "use mxedge(s) as radsecproxy"
									}
								},
								{
									"name": "use_site_mxedge",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "To use Site mxedges when this WLAN does not use mxtunnel"
									}
								}
							],
							"description": "Radsec settings"
						}
					},
					{
						"name": "roam_mode",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "none"
							},
							"description": "enum: `11r`, `OKC`, `none`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"11r\",\n\"OKC\",\n\"none\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "schedule",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "hours",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "fri",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "mon",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sat",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sun",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "thu",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "tue",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "wed",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											}
										],
										"description": "hours of operation filter, the available days (mon, tue, wed, thu, fri, sat, sun). \n\n**Note**: If the dow is not defined then it\\u2019\\ s treated as 00:00-23:59."
									}
								}
							],
							"description": "WLAN operating schedule, default is disabled"
						}
					},
					{
						"name": "sle_excluded",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to exclude this WLAN from SLE metrics"
						}
					},
					{
						"name": "ssid",
						"string": {
							"computed_optional_required": "required",
							"description": "the name of the SSID"
						}
					},
					{
						"name": "template_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							}
						}
					},
					{
						"name": "thumbnail",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "Url of portal background image thumbnail"
						}
					},
					{
						"name": "use_eapol_v1",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if `auth.type`==’eap’ or ‘psk’, should only be set for legacy client, such as pre-2004, 802.11b devices"
						}
					},
					{
						"name": "vlan_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if vlan tagging is enabled"
						}
					},
					{
						"name": "vlan_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "vlan_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "vlan_ids to use when there’s no match from RA"
						}
					},
					{
						"name": "vlan_pooling",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "vlan pooling allows AP to place client on different VLAN using a deterministic algorithm"
						}
					},
					{
						"name": "wlan_limit_down",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "kbps"
						}
					},
					{
						"name": "wlan_limit_down_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if downlink limiting for whole wlan is enabled"
						}
					},
					{
						"name": "wlan_limit_up",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "kbps"
						}
					},
					{
						"name": "wlan_limit_up_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if uplink limiting for whole wlan is enabled"
						}
					},
					{
						"name": "wxtag_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of wxtag_ids"
						}
					},
					{
						"name": "wxtunnel_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "when `interface`=`wxtunnel`, id of the WXLAN Tunnel"
						}
					},
					{
						"name": "wxtunnel_remote_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "when `interface`=`wxtunnel`, remote tunnel identifier"
						}
					}
				]
			}
		},
		{
			"name": "org_wlantemplate",
			"schema": {
				"attributes": [
					{
						"name": "applies",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "org_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids"
									}
								}
							],
							"description": "where this template should be applied to, can be org_id, site_ids, sitegroup_ids"
						}
					},
					{
						"name": "deviceprofile_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of Device Profile ids"
						}
					},
					{
						"name": "exceptions",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids"
									}
								}
							],
							"description": "where this template should not be applied to (takes precedence)"
						}
					},
					{
						"name": "filter_by_deviceprofile",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "whether to further filter by Device Profile"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "org_wxrule",
			"schema": {
				"attributes": [
					{
						"name": "action",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "type of action, allow / block. enum: `allow`, `block`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"block\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "apply_tags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							}
						}
					},
					{
						"name": "blocked_apps",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "blocked apps (always blocking, ignoring action), the key of Get Application List"
						}
					},
					{
						"name": "dst_allow_wxtags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "tag list to indicate these tags are allowed access"
						}
					},
					{
						"name": "dst_deny_wxtags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "tag list to indicate these tags are blocked access"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "order",
						"int64": {
							"computed_optional_required": "required",
							"description": "the order how rules would be looked up, \u003e 0 and bigger order got matched first, -1 means LAST, uniqueness not checked",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.AtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "src_wxtags",
						"list": {
							"computed_optional_required": "required",
							"element_type": {
								"string": {}
							},
							"description": "tag list to determine if this rule would match"
						}
					},
					{
						"name": "template_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Only for Org Level WxRule"
						}
					}
				]
			}
		},
		{
			"name": "org_wxtag",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mac",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`client`, Client MAC Address"
						}
					},
					{
						"name": "match",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "required if `type`==`match`. enum: `ap_id`, `app`, `asset_mac`, `client_mac`, `hostname`, `ip_range_subnet`, `port`, `psk_name`, `psk_role`, `radius_attr`, `radius_class`, `radius_group`, `radius_username`, `sdkclient_uuid`, `wlan_id`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ap_id\",\n\"app\",\n\"asset_mac\",\n\"client_mac\",\n\"hostname\",\n\"ip_range_subnet\",\n\"port\",\n\"psk_name\",\n\"psk_role\",\n\"radius_attr\",\n\"radius_class\",\n\"radius_group\",\n\"radius_username\",\n\"sdkclient_uuid\",\n\"wlan_id\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name"
						}
					},
					{
						"name": "op",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "in"
							},
							"description": "required if `type`==`match`, type of tag (inclusive/exclusive). enum: `in`, `not_in`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"in\",\n\"not_in\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "specs",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "0"
											},
											"description": "matched destination port, \"0\" means any"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "any"
											},
											"description": "tcp / udp / icmp / gre / any / \":protocol_number\", `protocol_number` is between 1-254"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "matched destination subnets and/or IP Addresses"
										}
									}
								]
							},
							"description": "if `type`==`spec`"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"description": "enum: `client`, `match`, `resource`, `spec`, `subnet`, `vlan`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"client\",\n\"match\",\n\"resource\",\n\"spec\",\n\"subnet\",\n\"vlan\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "values",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "required if `type`==`match` and\n  * `match`==`ap_id`: list of AP IDs\n  * `match`==`app`: list of Application Names\n  * `match`==`asset_mac`: list of Asset MAC Addresses\n  * `match`==`client_mac`: list of Client MAC Addresses\n  * `match`==`hostname`: list of Resources Hostnames\n  * `match`==`ip_range_subnet`: list of IP Addresses and/or CIDRs\n  * `match`==`psk_name`: list of PSK Names\n  * `match`==`psk_role`: list of PSK Roles\n  * `match`==`port`: list of Ports or Port Ranges\n  * `match`==`radius_attr`: list of RADIUS Attributes. The values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n  * `match`==`radius_class`: list of RADIUS Classes. This matches the ATTR-Class(25)\n  * `match`==`radius_group`: list of RADIUS Groups. This is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n  * `match`==`radius_username`: list of RADIUS Usernames. This matches the ATTR-User-Name(1)\n  * `match`==`sdkclient_uuid`: list of SDK UUIDs\n  * `match`==`wlan_id`: list of WLAN IDs\n\n**Notes**:\nVariables are not allowed"
						}
					},
					{
						"name": "vlan_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "site",
			"schema": {
				"attributes": [
					{
						"name": "address",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "full address of the site"
						}
					},
					{
						"name": "alarmtemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id"
						}
					},
					{
						"name": "aptemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "AP Template ID, used by APs"
						}
					},
					{
						"name": "country_code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "country code for the site (for AP config generation), in two-character"
						}
					},
					{
						"name": "gatewaytemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Gateway Template ID, used by gateways"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "latlng",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "lat",
									"float64": {
										"computed_optional_required": "required"
									}
								},
								{
									"name": "lng",
									"float64": {
										"computed_optional_required": "required"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networktemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Network Template ID, this takes precedence over Site Settings"
						}
					},
					{
						"name": "notes",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, any notes about the site"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "rftemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "RF Template ID, this takes precedence over Site Settings"
						}
					},
					{
						"name": "secpolicy_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "SecPolicy ID"
						}
					},
					{
						"name": "sitegroup_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "sitegroups this site belongs to"
						}
					},
					{
						"name": "sitetemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Site Template ID"
						}
					},
					{
						"name": "timezone",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Timezone the site is at"
						}
					}
				]
			}
		},
		{
			"name": "site_networktemplate",
			"schema": {
				"attributes": [
					{
						"name": "acl_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "actions",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "allow"
															},
															"description": "enum: `allow`, `deny`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dst_tag",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "src_tags",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									}
								]
							}
						}
					},
					{
						"name": "acl_tags",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "gbp_tag",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "required if\n- `type`==`dynamic_gbp` (gbp_tag received from RADIUS)\n- `type`==`static_gbp` (applying gbp tag against matching conditions)"
										}
									},
									{
										"name": "macs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "required if \n- `type`==`mac`\n- `type`==`static_gbp` if from matching mac"
										}
									},
									{
										"name": "network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if:\n  * `type`==`mac` (optional. default is `any`)\n  * `type`==`subnet` (optional. default is `any`)\n  * `type`==`network`\n  * `type`==`resource` (optional. default is `any`)\n  * `type`==`static_gbp` if from matching network (vlan)'"
										}
									},
									{
										"name": "radius_group",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if:\n  * `type`==`radius_group`\n  * `type`==`static_gbp`\nif from matching radius_group"
										}
									},
									{
										"name": "specs",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "port_range",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "80"
															},
															"description": "matched dst port, \"0\" means any"
														}
													},
													{
														"name": "protocol",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "any"
															},
															"description": "`tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`. `protocol_number` is between 1-254"
														}
													}
												]
											},
											"description": "if `type`==`resource`\nempty means unrestricted, i.e. any"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if \n- `type`==`subnet` \n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching subnet"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "required",
											"description": "enum: `any`, `dynamic_gbp`, `mac`, `network`, `radius_group`, `resource`, `static_gbp`, `subnet`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"dynamic_gbp\",\n\"mac\",\n\"network\",\n\"radius_group\",\n\"resource\",\n\"static_gbp\",\n\"subnet\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "ACL Tags to identify traffic source or destination. Key name is the tag name"
						}
					},
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "dhcp_snooping",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "all_networks",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for dynamic ARP inspection check"
									}
								},
								{
									"name": "enable_ip_source_guard",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for check for forging source IP address"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "networks",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "if `all_networks`==`false`, list of network with DHCP snooping enabled"
									}
								}
							]
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							}
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 2147483647)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "enable mist_nac to use radsec"
						}
					},
					{
						"name": "networks",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)\nNOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set"
										}
									},
									{
										"name": "isolation_vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional for pure switching, required when L3 / routing features are used"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "Property key is network name"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers"
						}
					},
					{
						"name": "port_mirroring",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "input_networks_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_egress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "input_port_ids_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
										}
									},
									{
										"name": "output_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									},
									{
										"name": "output_port_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
										}
									}
								]
							},
							"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
						}
					},
					{
						"name": "port_usages",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "all_networks",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`trunk` whether to trunk all network/vlans"
										}
									},
									{
										"name": "allow_dhcpd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri_state.\n\nWhen it is not defined, it means using the system’s default setting which depends on whether the port is a access or trunk port."
										}
									},
									{
										"name": "allow_multiple_supplicants",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "bypass_auth_when_server_down",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down"
										}
									},
									{
										"name": "bypass_auth_when_server_down_for_unkonwn_client",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether the port is disabled"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "Only if `mode`!=`dynamic` link connection mode. enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_vlan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x`, if dynamic vlan is used, specify the possible networks/vlans RADIUS can return"
										}
									},
									{
										"name": "enable_mac_auth",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` whether to enable MAC Auth"
										}
									},
									{
										"name": "enable_qos",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "guest_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)"
										}
									},
									{
										"name": "inter_switch_link",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` inter_switch_link is used together with \"isolation\" under networks\nNOTE: inter_switch_link works only between Juniper device. This has to be applied to both ports connected together"
										}
									},
									{
										"name": "mac_auth_only",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth`==`true`"
										}
									},
									{
										"name": "mac_auth_protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "eap-md5"
											},
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth` ==`true`. This type is ignored if mist_nac is enabled. enum: `eap-md5`, `eap-peap`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"eap-md5\",\n\"eap-peap\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mac_limit",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(0)"
													}
												}
											]
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "`mode`==`dynamic` must only be used with the port usage with the name `dynamic`. enum: `access`, `dynamic`, `inet`, `trunk`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"dynamic\",\n\"inet\",\n\"trunk\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514."
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`==`trunk`, the list of network/vlans"
										}
									},
									{
										"name": "persist_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`access` and `port_auth`!=`dot1x` whether the port should retain dynamically learned MAC addresses"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port"
										}
									},
									{
										"name": "port_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x. enum: `dot1x`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dot1x\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` native network/vlan for untagged traffic"
										}
									},
									{
										"name": "reauth_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3600
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` reauthentication interval range",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(10, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "rejected_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` when radius server reject / fails"
										}
									},
									{
										"name": "reset_default_when",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "link_down"
											},
											"description": "Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage. enum: `link_down`, `none` (let the DPC port keep at the current port usage)",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_down\",\n\"none\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "rules",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "equals",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "equals_any",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "use `equals_any` to match any item in a list"
														}
													},
													{
														"name": "expression",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "\"[0:3]\":\"abcdef\" -\u003e \"abc\"\n\"split(.)[1]\": \"a.b.c\" -\u003e \"b\"\n\"split(-)[1][0:3]: \"a1234-b5678-c90\" -\u003e \"b56\""
														}
													},
													{
														"name": "src",
														"string": {
															"computed_optional_required": "required",
															"description": "enum: `link_peermac`, `lldp_chassis_id`, `lldp_hardware_revision`, `lldp_manufacturer_name`, `lldp_oui`, `lldp_serial_number`, `lldp_system_name`, `radius_dynamicfilter`, `radius_usermac`, `radius_username`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"link_peermac\",\n\"lldp_chassis_id\",\n\"lldp_hardware_revision\",\n\"lldp_manufacturer_name\",\n\"lldp_oui\",\n\"lldp_serial_number\",\n\"lldp_system_name\",\n\"radius_dynamicfilter\",\n\"radius_usermac\",\n\"radius_username\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "usage",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "`port_usage` name"
														}
													}
												]
											},
											"description": "Only if `mode`==`dynamic`"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed"
										}
									},
									{
										"name": "storm_control",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "no_broadcast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on broadcast traffic"
													}
												},
												{
													"name": "no_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on multicast traffic"
													}
												},
												{
													"name": "no_registered_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on registered multicast traffic"
													}
												},
												{
													"name": "no_unknown_unicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on unknown unicast traffic"
													}
												},
												{
													"name": "percentage",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 100)"
																}
															}
														]
													}
												}
											],
											"description": "Switch storm control\nOnly if `mode`!=`dynamic`"
										}
									},
									{
										"name": "stp_edge",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames"
										}
									},
									{
										"name": "voip_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth"
										}
									}
								]
							}
						}
					},
					{
						"name": "radius_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "acct_interim_interval",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "acct_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1813
														},
														"description": "Acct port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "enum: `ascii`, `hex`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1812
														},
														"description": "Auth port of RADIUS server",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers_retries",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3
										},
										"description": "radius auth session retries"
									}
								},
								{
									"name": "auth_servers_timeout",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "radius auth session timeout"
									}
								},
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "coa_port",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3799
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip"
									}
								},
								{
									"name": "source_ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`"
									}
								}
							],
							"description": "Junos Radius config"
						}
					},
					{
						"name": "remote_syslog",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "archive",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "files",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "size",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "console",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "contents",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "facility",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "severity",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "files",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "archive",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "files",
																"int64": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "size",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												},
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "file",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
									}
								},
								{
									"name": "send_to_all_servers",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "facility",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 514
														}
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "udp"
														},
														"description": "enum: `tcp`, `udp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"tcp\",\n\"udp\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "routing_instance",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "severity",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "source_address",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "tag",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "time_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `millisecond`, `year`, `year millisecond`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"millisecond\",\n\"year\",\n\"year millisecond\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "users",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `any`, `authorization`, `change-log`, `config`, `conflict-log`, `daemon`, `dfc`, `external`, `firewall`, `ftp`, `interactive-commands`, `kernel`, `ntp`, `pfe`, `security`, `user`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"change-log\",\n\"config\",\n\"conflict-log\",\n\"daemon\",\n\"dfc\",\n\"external\",\n\"firewall\",\n\"ftp\",\n\"interactive-commands\",\n\"kernel\",\n\"ntp\",\n\"pfe\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"description": "enum: `alert`, `any`, `critical`, `emergency`, `error`, `info`, `notice`, `warning`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"any\",\n\"critical\",\n\"emergency\",\n\"error\",\n\"info\",\n\"notice\",\n\"warning\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "snmp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "client_list",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "clients",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "contact",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "engine_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `engine-id-suffix`, `local`, `use-default-ip-address`, `use_mac-address`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"engine-id-suffix\",\n\"local\",\n\"use-default-ip-address\",\n\"use_mac-address\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "location",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										}
									}
								},
								{
									"name": "trap_groups",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "categories",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "group_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html"
													}
												},
												{
													"name": "targets",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "version",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "v2"
														},
														"description": "enum: `all`, `v1`, `v2`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"all\",\n\"v1\",\n\"v2\",\n)"
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"name": "v2c_config",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "authorization",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "client_list_name here should refer to client_list above"
													}
												},
												{
													"name": "community_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "view name here should be defined in views above"
													}
												}
											]
										}
									}
								},
								{
									"name": "v3_config",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "notify",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "tag",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "type",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `inform`, `trap`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"inform\",\n\"trap\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											},
											{
												"name": "notify_filter",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "contents",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "include",
																				"bool": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "oid",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															},
															{
																"name": "profile_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_address",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "address",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "address_mask",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 161
																	}
																}
															},
															{
																"name": "tag_list",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "\u003crefer to notify tag, can be multiple with blank"
																}
															},
															{
																"name": "target_address_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "target_parameters",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to notify target parameters name"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_parameters",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "message_processing_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `v1`, `v2c`, `v3`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v1\",\n\"v2c\",\n\"v3\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "notify_filter",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to profile-name in notify_filter"
																}
															},
															{
																"name": "security_level",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `authentication`, `none`, `privacy`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "enum: `usm`, `v1`, `v2c`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to security_name in usm"
																}
															}
														]
													}
												}
											},
											{
												"name": "usm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "engineid",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "required only if `engine_type`==`remote_engine`"
															}
														},
														{
															"name": "engine_type",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "enum: `local_engine`, `remote_engine`",
																"validators": [
																	{
																		"custom": {
																			"imports": [
																				{
																					"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																				}
																			],
																			"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local_engine\",\n\"remote_engine\",\n)"
																		}
																	}
																]
															}
														},
														{
															"name": "users",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "authentication_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `authentication_type`==`authentication_none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(7)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "authentication_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "sha224, sha256, sha384, sha512 are supported in 21.1 and newer release. enum: `authentication_md5`, `authentication_none`, `authentication_sha`, `authentication_sha224`, `authentication_sha256`, `authentication_sha384`, `authentication_sha512`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication_md5\",\n\"authentication_none\",\n\"authentication_sha\",\n\"authentication_sha224\",\n\"authentication_sha256\",\n\"authentication_sha384\",\n\"authentication_sha512\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `encryption_type`==`privacy-none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(8)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "enum: `privacy-3des`, `privacy-aes128`, `privacy-des`, `privacy-none`",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"privacy-3des\",\n\"privacy-aes128\",\n\"privacy-des\",\n\"privacy-none\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		}
																	]
																}
															}
														}
													]
												}
											},
											{
												"name": "vacm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "access",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "group_name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		},
																		{
																			"name": "prefix_list",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "context_prefix",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "only required if `type`==`context_prefix`"
																							}
																						},
																						{
																							"name": "notify_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "read_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "security_level",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `authentication`, `none`, `privacy`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "security_model",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `any`, `usm`, `v1`, `v2c`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "type",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "enum: `context_prefix`, `default_context_prefix`",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"context_prefix\",\n\"default_context_prefix\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "write_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														{
															"name": "security_to_group",
															"single_nested": {
																"computed_optional_required": "computed_optional",
																"attributes": [
																	{
																		"name": "content",
																		"list_nested": {
																			"computed_optional_required": "computed_optional",
																			"nested_object": {
																				"attributes": [
																					{
																						"name": "group",
																						"string": {
																							"computed_optional_required": "computed_optional",
																							"description": "refer to group_name under access"
																						}
																					},
																					{
																						"name": "security_name",
																						"string": {
																							"computed_optional_required": "computed_optional"
																						}
																					}
																				]
																			}
																		}
																	},
																	{
																		"name": "security_model",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "enum: `usm`, `v1`, `v2c`",
																			"validators": [
																				{
																					"custom": {
																						"imports": [
																							{
																								"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																							}
																						],
																						"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "views",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "include",
													"bool": {
														"computed_optional_required": "computed_optional",
														"description": "if the root oid configured is included"
													}
												},
												{
													"name": "oid",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enable",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "rules",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "additional_config_cmds",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
													}
												},
												{
													"name": "match_role",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "role to match"
													}
												},
												{
													"name": "match_type",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "'property key define the type of matching, value is the string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`"
													}
												},
												{
													"name": "match_value",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `auto`, `full`, `half`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `auto`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"100m\",\n\"10m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n\"auto\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Propery key is the interface name or interface range"
													}
												},
												{
													"name": "port_mirroring",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "input_networks_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_egress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `input_port_ids_ingress`, `input_port_ids_egress` or `input_networks_ingress ` should be specified"
																	}
																},
																{
																	"name": "output_network",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
																	}
																},
																{
																	"name": "output_port_id",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty one of the `output_port_id` or `output_network` should be provided"
																	}
																}
															]
														},
														"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "Switch template"
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config_revert",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										}
									}
								},
								{
									"name": "protect_re",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "allowed_services",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "optionally, services we'll allow"
												}
											},
											{
												"name": "custom",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "port_range",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "0"
																	},
																	"description": "matched dst port, \"0\" means any"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"description": "enum: `any`, `icmp`, `tcp`, `udp`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"icmp\",\n\"tcp\",\n\"udp\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "subnet",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when enabled, all traffic that is not essential to our operation will be dropped\ne.g. ntp / dns / traffic to mist will be allowed by default\n     if dhcpd is enabled, we'll make sure it works"
												}
											},
											{
												"name": "trusted_hosts",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "host/subnets we'll allow traffic to/from"
												}
											}
										],
										"description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works"
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tacacs",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "acct_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "default_role",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "none"
													},
													"description": "enum: `admin`, `helpdesk`, `none`, `read`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"admin\",\n\"helpdesk\",\n\"none\",\n\"read\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "network",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "which network the TACACS server resides"
												}
											},
											{
												"name": "tacplus_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "uplink_port_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "dot1x",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "Whether to do 802.1x against uplink switch. When enaled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch"
									}
								},
								{
									"name": "keep_wlans_up_if_down",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons."
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Next-hop address"
														}
													}
												]
											},
											"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		},
		{
			"name": "site_setting",
			"schema": {
				"attributes": [
					{
						"name": "analytic",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "enable Advanced Analytic feature (using SUB-ANA license)"
									}
								}
							]
						}
					},
					{
						"name": "ap_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for AP devices only. When configured it takes effect for AP devices and `device_updown_threshold` is ignored.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "auto_upgrade",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "custom_versions",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "custom versions for different models. Property key is the model name (e.g. \"AP41\")"
									}
								},
								{
									"name": "day_of_week",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `any`, `fri`, `mon`, `sat`, `sun`, `thu`, `tue`, `wed`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"fri\",\n\"mon\",\n\"sat\",\n\"sun\",\n\"thu\",\n\"tue\",\n\"wed\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether auto upgrade should happen (Note that Mist may auto-upgrade if the version is not supported)"
									}
								},
								{
									"name": "time_of_day",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "any / HH:MM (24-hour format), upgrade will happen within up to 1-hour from this time"
									}
								},
								{
									"name": "version",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "stable"
										},
										"description": "desired version. enum: `beta`, `custom`, `stable`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"beta\",\n\"custom\",\n\"stable\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Auto Upgrade Settings"
						}
					},
					{
						"name": "blacklist_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ble_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "beacon_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether Mist beacons is enabled"
									}
								},
								{
									"name": "beacon_rate",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "required if `beacon_rate_mode`==`custom`, 1-10, in number-beacons-per-second"
									}
								},
								{
									"name": "beacon_rate_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `custom`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom\",\n\"default\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "beam_disabled",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "list of AP BLE location beam numbers (1-8) which should be disabled at the AP and not transmit location information (where beam 1 is oriented at the top the AP, growing counter-clock-wise, with 9 being the omni BLE beam)"
									}
								},
								{
									"name": "custom_ble_packet_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "can be enabled if `beacon_enabled`==`true`, whether to send custom packet"
									}
								},
								{
									"name": "custom_ble_packet_frame",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "The custom frame to be sent out in this beacon. The frame must be a hexstring"
									}
								},
								{
									"name": "custom_ble_packet_freq_msec",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Frequency (msec) of data emitted by custom ble beacon",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeast(0)"
												}
											}
										]
									}
								},
								{
									"name": "eddystone_uid_adv_power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(-100, 20)"
												}
											}
										]
									}
								},
								{
									"name": "eddystone_uid_beams",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "eddystone_uid_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "only if `beacon_enabled`==`false`, Whether Eddystone-UID beacon is enabled"
									}
								},
								{
									"name": "eddystone_uid_freq_msec",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Frequency (msec) of data emmit by Eddystone-UID beacon"
									}
								},
								{
									"name": "eddystone_uid_instance",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Eddystone-UID instance for the device"
									}
								},
								{
									"name": "eddystone_uid_namespace",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Eddystone-UID namespace"
									}
								},
								{
									"name": "eddystone_url_adv_power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(-100, 20)"
												}
											}
										]
									}
								},
								{
									"name": "eddystone_url_beams",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "eddystone_url_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "only if `beacon_enabled`==`false`, Whether Eddystone-URL beacon is enabled"
									}
								},
								{
									"name": "eddystone_url_freq_msec",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Frequency (msec) of data emit by Eddystone-UID beacon"
									}
								},
								{
									"name": "eddystone_url_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "URL pointed by Eddystone-URL beacon"
									}
								},
								{
									"name": "ibeacon_adv_power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "advertised TX Power, -100 to 20 (dBm), omit this attribute to use default",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(-100, 20)"
												}
											}
										]
									}
								},
								{
									"name": "ibeacon_beams",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "ibeacon_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "can be enabled if `beacon_enabled`==`true`, whether to send iBeacon"
									}
								},
								{
									"name": "ibeacon_freq_msec",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Frequency (msec) of data emmit for iBeacon"
									}
								},
								{
									"name": "ibeacon_major",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Major number for iBeacon",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "ibeacon_minor",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "Minor number for iBeacon",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "ibeacon_uuid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "optional, if not specified, the same UUID as the beacon will be used"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 9
										},
										"description": "required if `power_mode`==`custom`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 10)"
												}
											}
										]
									}
								},
								{
									"name": "power_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"description": "enum: `custom`, `default`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom\",\n\"default\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "BLE AP settings"
						}
					},
					{
						"name": "config_auto_revert",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable ap auto config revert"
						}
					},
					{
						"name": "config_push_policy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "no_push",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "stop any new config from being pushed to the device"
									}
								},
								{
									"name": "push_window",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "hours",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "fri",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "mon",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "sat",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "sun",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "thu",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "tue",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														},
														{
															"name": "wed",
															"string": {
																"computed_optional_required": "computed_optional",
																"default": {
																	"static": ""
																}
															}
														}
													],
													"description": "hours of operation filter, the available days (mon, tue, wed, thu, fri, sat, sun). \n\n**Note**: If the dow is not defined then it\\u2019\\ s treated as 00:00-23:59."
												}
											}
										],
										"description": "if enabled, new config will only be pushed to device within the specified time window"
									}
								}
							],
							"description": "mist also uses some heuristic rules to prevent destructive configs from being pushed"
						}
					},
					{
						"name": "critical_url_monitoring",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "monitors",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "url",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "vlan_id",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							],
							"description": "you can define some URLs that's critical to site operaitons the latency will be captured and considered for site health"
						}
					},
					{
						"name": "device_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "sending AP_DISCONNECTED event in device-updowns only if AP_CONNECTED is not seen within the threshold, in minutes",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "disabled_system_defined_port_usages",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if some system-default port usages are not desired - namely, ap / iot / uplink"
						}
					},
					{
						"name": "engagement",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "dwell_tag_names",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "bounce",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "engaged",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "passerby",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "stationed",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "dwell_tags",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "bounce",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "engaged",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "passerby",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "stationed",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "add tags to visits within the duration (in seconds), available tags (passerby, bounce, engaged, stationed)"
									}
								},
								{
									"name": "hours",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "fri",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "mon",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sat",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sun",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "thu",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "tue",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "wed",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											}
										],
										"description": "hours of operation filter, the available days (mon, tue, wed, thu, fri, sat, sun). \n\n**Note**: If the dow is not defined then it\\u2019\\ s treated as 00:00-23:59."
									}
								},
								{
									"name": "max_dwell",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 43200
										},
										"description": "max time, default is 43200(12h), max is 68400 (18h)",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 68400)"
												}
											}
										]
									}
								},
								{
									"name": "min_dwell",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "min time",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeast(0)"
												}
											}
										]
									}
								}
							],
							"description": "**Note**: if hours does not exist, it’s treated as everyday of the week, 00:00-23:59. Currently we don’t allow multiple ranges for the same day\n\n**Note**: default values for `dwell_tags`: passerby (1,300) bounce (301, 14400) engaged (14401, 28800) stationed (28801, 42000)\n\n**Note**: default values for `dwell_tag_names`: passerby = “Passerby”, bounce = “Visitor”, engaged = “Associates”, stationed = “Assets”"
						}
					},
					{
						"name": "gateway_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "admin_sshkeys",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "for SSR only, as direct root access is not allowed"
									}
								},
								{
									"name": "app_probing",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "apps",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													}
												}
											},
											{
												"name": "custom_apps",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "address",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "if `protocol`==`icmp`"
																}
															},
															{
																"name": "app_type",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "hostname",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "if `protocol`==`http`"
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "network",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "http"
																	},
																	"description": "enum: `http`, `udp`",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"http\",\n\"udp\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "url",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "if `protocol`==`http`"
																}
															},
															{
																"name": "vrf",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "app_usage",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "consumes uplink bandwidth, requires WA license"
									}
								},
								{
									"name": "auto_signature_update",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "day_of_week",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "enum: `any`, `fri`, `mon`, `sat`, `sun`, `thu`, `tue`, `wed`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"fri\",\n\"mon\",\n\"sat\",\n\"sun\",\n\"thu\",\n\"tue\",\n\"wed\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enable",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": true
													}
												}
											},
											{
												"name": "time_of_day",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "optional, Mist will decide the timing"
												}
											}
										]
									}
								},
								{
									"name": "config_revert_timer",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										},
										"description": "he rollback timer for commit confirmed",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 30)"
												}
											}
										]
									}
								},
								{
									"name": "probe_hosts",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "for SRX only"
									}
								},
								{
									"name": "security_log_source_address",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "security_log_source_interface",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "Gateway Site settings"
						}
					},
					{
						"name": "gateway_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for Gateway devices only. When configured it takes effect for GW devices and `device_updown_threshold` is ignored.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "led",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "brightness",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 255
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 255)"
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								}
							],
							"description": "LED AP settings"
						}
					},
					{
						"name": "occupancy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "assets_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "indicate whether named BLE assets should be included in the zone occupancy calculation"
									}
								},
								{
									"name": "clients_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "indicate whether connected WiFi clients should be included in the zone occupancy calculation"
									}
								},
								{
									"name": "min_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3000
										},
										"description": "minimum duration"
									}
								},
								{
									"name": "sdkclients_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "indicate whether SDK clients should be included in the zone occupancy calculation"
									}
								},
								{
									"name": "unconnected_clients_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "indicate whether unconnected WiFi clients should be included in the zone occupancy calculation"
									}
								}
							],
							"description": "Occupancy Analytics settings"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "persist_config_on_device",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to store the config on AP"
						}
					},
					{
						"name": "proxy",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "url",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "Proxy Configuration to talk to Mist"
						}
					},
					{
						"name": "report_gatt",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether AP should periodically connect to BLE devices and report GATT device info (device name, manufacturer name, serial number, battery %, temperature, humidity)"
						}
					},
					{
						"name": "rogue",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether or not rogue detection is enabled"
									}
								},
								{
									"name": "honeypot_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether or not honeypot detection is enabled"
									}
								},
								{
									"name": "min_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										},
										"description": "minimum duration for a bssid to be considered rogue",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtMost(59)"
												}
											}
										]
									}
								},
								{
									"name": "min_rssi",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": -80
										},
										"description": "minimum RSSI for an AP to be considered rogue (ignoring APs that’s far away)",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.AtLeast(-85)"
												}
											}
										]
									}
								},
								{
									"name": "whitelisted_bssids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of BSSIDs to whitelist. Ex: \"cc-:8e-:6f-:d4-:bf-:16\", \"cc-8e-6f-d4-bf-16\", \"cc-73-*\", \"cc:82:*\""
									}
								},
								{
									"name": "whitelisted_ssids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of SSIDs to whitelist"
									}
								}
							],
							"description": "Rogue site settings"
						}
					},
					{
						"name": "rtsa",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "app_waking",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "disable_dead_reckoning",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "disable_pressure_sensor",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "track_asset",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "asset tracking related"
									}
								}
							],
							"description": "managed mobility"
						}
					},
					{
						"name": "simple_alert",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "arp_failure",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "client_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 10
													}
												}
											},
											{
												"name": "duration",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 20
													},
													"description": "failing within minutes",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(5, 60)"
															}
														}
													]
												}
											},
											{
												"name": "incident_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 10
													}
												}
											}
										]
									}
								},
								{
									"name": "dhcp_failure",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "client_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 10
													}
												}
											},
											{
												"name": "duration",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 10
													},
													"description": "failing within minutes",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(5, 60)"
															}
														}
													]
												}
											},
											{
												"name": "incident_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 20
													}
												}
											}
										]
									}
								},
								{
									"name": "dns_failure",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "client_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 20
													}
												}
											},
											{
												"name": "duration",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 10
													},
													"description": "failing within minutes",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(5, 60)"
															}
														}
													]
												}
											},
											{
												"name": "incident_count",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 30
													}
												}
											}
										]
									}
								}
							],
							"description": "Set of heuristic rules will be enabled when marvis subscription is not available.\nIt triggers when, in a Z minute window, there are more than Y distinct client encountring over X failures"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "skyatp",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "send_ip_mac_mapping",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to send IP-MAC mapping to SkyATP"
									}
								}
							]
						}
					},
					{
						"name": "srx_app",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							]
						}
					},
					{
						"name": "ssh_keys",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when limit_ssh_access = true in Org Setting, list of SSH public keys provided by Mist Support to install onto APs (see Org:Setting)"
						}
					},
					{
						"name": "ssr",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "conductor_hosts",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "disable_stats",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "switch_updown_threshold",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "enable threshold-based device down delivery for Switch devices only. When configured it takes effect for SW devices and `device_updown_threshold` is ignored.",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 240)"
									}
								}
							]
						}
					},
					{
						"name": "synthetic_test",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "vlans",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "custom_test_urls",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "for some vlans where we don't want this to run"
													}
												},
												{
													"name": "vlan_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "wan_speedtest",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "time_od_fay",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "any"
													},
													"description": "any / HH:MM (24-hour format)"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "track_anonymous_devices",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to track anonymous BLE assets (requires ‘track_asset’  enabled)"
						}
					},
					{
						"name": "uplink_port_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "dot1x",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "Whether to do 802.1x against uplink switch. When enaled, AP cert will be used to do EAP-TLS and the Org's CA Cert has to be provisioned at the switch"
									}
								},
								{
									"name": "keep_wlans_up_if_down",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, WLANs are disabled when uplink is down. In some scenario, like SiteSurvey, one would want the AP to keep sending beacons."
									}
								}
							]
						}
					},
					{
						"name": "vars",
						"map": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "a dictionary of name-\u003evalue, the vars can then be used in Wlans. This can overwrite those from Site Vars"
						}
					},
					{
						"name": "vna",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "enable Virtual Network Assistant (using SUB-VNA license). This applied to AP / Switch / Gateway"
									}
								}
							]
						}
					},
					{
						"name": "vs_instance",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							},
							"description": "optional, for EX9200 only to seggregate virtual-switches. Property key is the instance name"
						}
					},
					{
						"name": "wan_vna",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							]
						}
					},
					{
						"name": "watched_station_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "whitelist_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "wids",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "repeated_auth_failures",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "duration",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "window where a trigger will be detected and action to be taken (in seconds)"
												}
											},
											{
												"name": "threshold",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "count of events to trigger"
												}
											}
										]
									}
								}
							],
							"description": "WIDS site settings"
						}
					},
					{
						"name": "wifi",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "cisco_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "disable_11k",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable 11k"
									}
								},
								{
									"name": "disable_radios_when_power_constrained",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when proxy_arp is enabled, check for arp spoofing."
									}
								},
								{
									"name": "enable_shared_radio_scanning",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "enable WIFI feature (using SUB-MAN license)"
									}
								},
								{
									"name": "locate_connected",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "whether to locate connected clients"
									}
								},
								{
									"name": "locate_unconnected",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to locate unconnected clients"
									}
								},
								{
									"name": "mesh_allow_dfs",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to allow Mesh to use DFS channels. For DFS channels, Remote Mesh AP would have to do CAC when scanning for new Base AP, which is slow and will distrupt the connection. If roaming is desired, keep it disabled."
									}
								},
								{
									"name": "mesh_enable_crm",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "used to enable/disable CRM"
									}
								},
								{
									"name": "mesh_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable Mesh feature for the site"
									}
								},
								{
									"name": "mesh_psk",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "optional passphrase of mesh networking, default is generated randomly"
									}
								},
								{
									"name": "mesh_ssid",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "optional ssid of mesh networking, default is based on site_id"
									}
								},
								{
									"name": "proxy_arp",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "enum: `default`, `disabled`, `enabled`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"disabled\",\n\"enabled\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Wi-Fi site settings"
						}
					},
					{
						"name": "wired_vna",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							]
						}
					},
					{
						"name": "zone_occupancy_alert",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "email_notifiers",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of email addresses to send email notifications when the alert threshold is reached"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "indicate whether zone occupancy alert is enabled for the site"
									}
								},
								{
									"name": "threshold",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "sending zone-occupancy-alert webhook message only if a zone stays non-compliant (i.e. actual occupancy \u003e occupancy_limit) for a minimum duration specified in the threshold, in minutes",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 30)"
												}
											}
										]
									}
								}
							],
							"description": "Zone Occupancy alert site settings"
						}
					}
				]
			}
		},
		{
			"name": "site_wlan",
			"schema": {
				"attributes": [
					{
						"name": "acct_immediate_update",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "enable coa-immediate-update and address-change-immediate-update on the access profile."
						}
					},
					{
						"name": "acct_interim_interval",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(0, 65535)"
									}
								}
							]
						}
					},
					{
						"name": "acct_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "host",
										"string": {
											"computed_optional_required": "required",
											"description": "ip / hostname of RADIUS server"
										}
									},
									{
										"name": "keywrap_enabled",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_format",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `ascii`, `hex`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "keywrap_kek",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_mack",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1813
											},
											"description": "Acct port of RADIUS server",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required",
											"description": "secret of RADIUS server"
										}
									}
								]
							},
							"description": "list of RADIUS accounting servers, optional, order matters where the first one is treated as primary"
						}
					},
					{
						"name": "airwatch",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "api_key",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "API Key"
									}
								},
								{
									"name": "console_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "console URL"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "password"
									}
								},
								{
									"name": "username",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "username"
									}
								}
							],
							"description": "airwatch wlan settings"
						}
					},
					{
						"name": "allow_ipv6_ndp",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "only applicable when limit_bcast==true, which allows or disallows ipv6 Neighbor Discovery packets to go through"
						}
					},
					{
						"name": "allow_mdns",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "only applicable when limit_bcast==true, which allows mDNS / Bonjour packets to go through"
						}
					},
					{
						"name": "allow_ssdp",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "only applicable when `limit_bcast`==`tru`e, which allows SSDP"
						}
					},
					{
						"name": "ap_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of device ids"
						}
					},
					{
						"name": "app_limit",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "apps",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "Map from app key to bandwidth in kbps. \nProperty key is the app key, defined in Get Application List"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "wxtag_ids",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "Map from wxtag_id of Hostname Wxlan Tags to bandwidth in kbps\nProperty key is the wxtag id"
									}
								}
							],
							"description": "bandwidth limiting for apps (applies to up/down)"
						}
					},
					{
						"name": "app_qos",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "apps",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dscp",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 63)"
																}
															}
														]
													}
												},
												{
													"name": "dst_subnet",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "subnet filter is not required but helps AP to only inspect certain traffic (thus reducing AP load)"
													}
												},
												{
													"name": "src_subnet",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "subnet filter is not required but helps AP to only inspect certain traffic (thus reducing AP load)"
													}
												}
											]
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "others",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dscp",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 63)"
																}
															}
														]
													}
												},
												{
													"name": "dst_subnet",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_ranges",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "src_subnet",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "app qos wlan settings"
						}
					},
					{
						"name": "apply_to",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "enum: `aps`, `site`, `wxtags`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aps\",\n\"site\",\n\"wxtags\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "arp_filter",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable smart arp filter"
						}
					},
					{
						"name": "auth",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "anticlog_threshold",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 16
										},
										"description": "SAE anti-clogging token threshold",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(16, 32)"
												}
											}
										]
									}
								},
								{
									"name": "eap_reauth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to trigger EAP reauth when the session ends"
									}
								},
								{
									"name": "enable_mac_auth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable MAC Auth, uses the same auth_servers"
									}
								},
								{
									"name": "key_idx",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 1
										},
										"description": "when `type`==`wep`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 4)"
												}
											}
										]
									}
								},
								{
									"name": "keys",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "when type=wep, four 10-character or 26-character hex string, null can be used. All keys, if provided, have to be in the same length"
									}
								},
								{
									"name": "multi_psk_only",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when `type`==`psk`, whether to only use multi_psk"
									}
								},
								{
									"name": "owe",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "disabled"
										},
										"description": "if `type`==`open`. enum: `disabled`, `enabled` (means transition mode), `required`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"disabled\",\n\"enabled\",\n\"required\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "pairwise",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "when `type`=`psk` or `type`=`eap`, one or more of `wpa1-ccmp`, `wpa1-tkip`, `wpa2-ccmp`, `wpa2-tkip`, `wpa3`"
									}
								},
								{
									"name": "private_wlan",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when `multi_psk_only`==`true`, whether private wlan is enabled"
									}
								},
								{
									"name": "psk",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `type`==`psk`, 8-64 characters, or 64 hex characters",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.LengthBetween(8, 64)"
												}
											}
										]
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "open"
										},
										"description": "enum: `eap`, `eap192`, `open`, `psk`, `psk-tkip`, `psk-wpa2-tkip`, `wep`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"eap\",\n\"eap192\",\n\"open\",\n\"psk\",\n\"psk-tkip\",\n\"psk-wpa2-tkip\",\n\"wep\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "wep_as_secondary_auth",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "enable WEP as secondary auth"
									}
								}
							],
							"description": "authentication wlan settings"
						}
					},
					{
						"name": "auth_server_selection",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "ordered"
							},
							"description": "When ordered, AP will prefer and go back to the first server if possible. enum: `ordered`, `unordered`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ordered\",\n\"unordered\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "auth_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "host",
										"string": {
											"computed_optional_required": "required",
											"description": "ip / hostname of RADIUS server"
										}
									},
									{
										"name": "keywrap_enabled",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_format",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `ascii`, `hex`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ascii\",\n\"hex\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "keywrap_kek",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "keywrap_mack",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1812
											},
											"description": "Auth port of RADIUS server",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required",
											"description": "secret of RADIUS server"
										}
									}
								]
							},
							"description": "list of RADIUS authentication servers, at least one is needed if `auth type`==`eap`, order matters where the first one is treated as primary"
						}
					},
					{
						"name": "auth_servers_nas_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, up to 48 bytes, will be dynamically generated if not provided. used only for authentication servers"
						}
					},
					{
						"name": "auth_servers_nas_ip",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, NAS-IP-ADDRESS to use"
						}
					},
					{
						"name": "auth_servers_retries",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 2
							},
							"description": "radius auth session retries. Following fast timers are set if “fast_dot1x_timers” knob is enabled. ‘retries’  are set to value of auth_servers_retries. ‘max-requests’ is also set when setting auth_servers_retries and is set to default value to 3."
						}
					},
					{
						"name": "auth_servers_timeout",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 5
							},
							"description": "radius auth session timeout. Following fast timers are set if “fast_dot1x_timers” knob is enabled. ‘quite-period’  and ‘transmit-period’ are set to half the value of auth_servers_timeout. ‘supplicant-timeout’ is also set when setting auth_servers_timeout and is set to default value of 10."
						}
					},
					{
						"name": "band_steer",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable band_steering, this works only when band==both"
						}
					},
					{
						"name": "band_steer_force_band5",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "force dual_band capable client to connect to 5G"
						}
					},
					{
						"name": "bands",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of radios that the wlan should apply to"
						}
					},
					{
						"name": "block_blacklist_clients",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to block the clients in the blacklist (up to first 256 macs)"
						}
					},
					{
						"name": "bonjour",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "additional_vlan_ids",
									"list": {
										"computed_optional_required": "required",
										"element_type": {
											"string": {}
										},
										"description": "additional VLAN IDs (on the LAN side or from other WLANs) should we be forwarding bonjour queries/responses"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable bonjour for this WLAN. Once enabled, limit_bcast is assumed true, allow_mdns is assumed false"
									}
								},
								{
									"name": "services",
									"map_nested": {
										"computed_optional_required": "required",
										"nested_object": {
											"attributes": [
												{
													"name": "disable_local",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to prevent wireless clients to discover bonjour devices on the same WLAN"
													}
												},
												{
													"name": "radius_groups",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "optional, if the service is further restricted for certain RADIUS groups"
													}
												},
												{
													"name": "scope",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "same_site"
														},
														"description": "how bonjour services should be discovered for the same WLAN. enum: `same_ap`, `same_map`, `same_site`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"same_ap\",\n\"same_map\",\n\"same_site\",\n)"
																}
															}
														]
													}
												}
											]
										},
										"description": "what services are allowed. \nProperty key is the service name"
									}
								}
							],
							"description": "bonjour gateway wlan settings"
						}
					},
					{
						"name": "cisco_cwa",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allowed_hostnames",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of hostnames without http(s):// (matched by substring)"
									}
								},
								{
									"name": "allowed_subnets",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of CIDRs"
									}
								},
								{
									"name": "blocked_subnets",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of blocked CIDRs"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								}
							],
							"description": "Cisco CWA (central web authentication) required RADIUS with COA in order to work. See CWA: https://www.cisco.com/c/en/us/support/docs/security/identity-services-engine/115732-central-web-auth-00.html"
						}
					},
					{
						"name": "client_limit_down",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "kbps"
						}
					},
					{
						"name": "client_limit_down_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if downlink limiting per-client is enabled"
						}
					},
					{
						"name": "client_limit_up",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "kbps"
						}
					},
					{
						"name": "client_limit_up_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if uplink limiting per-client is enabled"
						}
					},
					{
						"name": "coa_servers",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disable_event_timestamp_check",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disable Event-Timestamp Check"
										}
									},
									{
										"name": "enabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "port",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3799
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "secret",
										"string": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "list of COA (change of authorization) servers, optional"
						}
					},
					{
						"name": "disable_11ax",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "some old WLAN drivers may not be compatible"
						}
					},
					{
						"name": "disable_ht_vht_rates",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "to disable ht or vht rates"
						}
					},
					{
						"name": "disable_uapsd",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disable U-APSD"
						}
					},
					{
						"name": "disable_v1_roam_notify",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "disable sending v2 roam notification messages"
						}
					},
					{
						"name": "disable_v2_roam_notify",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "disable sending v2 roam notification messages"
						}
					},
					{
						"name": "disable_wmm",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disable WMM"
						}
					},
					{
						"name": "dns_server_rewrite",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "radius_groups",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "map between radius_group and the desired DNS server (IPv4 only)\nProperty key is the RADIUS group, property value is the desired DNS Server"
									}
								}
							],
							"description": "for radius_group-based DNS server (rewrite DNS request depending on the Group RADIUS server returns)"
						}
					},
					{
						"name": "dtim",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 2
							}
						}
					},
					{
						"name": "dynamic_psk",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "default_psk",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "default PSK to use if cloud WLC is not available, 8-63 characters",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.LengthBetween(8, 63)"
												}
											}
										]
									}
								},
								{
									"name": "default_vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "force_lookup",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when 11r is enabled, we'll try to use the cached PMK, this can be disabled\n`false` means auto"
									}
								},
								{
									"name": "source",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "radius"
										},
										"description": "enum: `cloud_psks`, `radius`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cloud_psks\",\n\"radius\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "vlan_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								}
							],
							"description": "for dynamic PSK where we get per_user PSK from Radius. dynamic_psk allows PSK to be selected at runtime depending on context (wlan/site/user/...) thus following configurations are assumed (currently)\n  * PSK will come from RADIUS server\n  * AP sends client MAC as username ans password (i.e. `enable_mac_auth` is assumed)\n  * AP sends BSSID:SSID as Caller-Station-ID\n  * `auth_servers` is required\n  * PSK will come from cloud WLC if source is cloud_psks\n  * default_psk will be used if cloud WLC is not available\n  * `multi_psk_only` and `psk` is ignored\n  * `pairwise` can only be wpa2-ccmp (for now, wpa3 support on the roadmap)"
						}
					},
					{
						"name": "dynamic_vlan",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "default_vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to enable dynamic vlan"
									}
								},
								{
									"name": "local_vlan_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "vlan_ids to be locally bridged"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "standard"
										},
										"description": "standard (using Tunnel-Private-Group-ID, widely supported), airespace-interface-name (Airespace/Cisco). enum: `airespace-interface-name`, `standard`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"airespace-interface-name\",\n\"standard\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "vlans",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "map between vlan_id (as string) to airespace interface names (comma-separated) or null for stndard mapping\n  * if `dynamic_vlan.type`==`standard`, property key is the Vlan ID and property value is \\\"\\\"\n  * if `dynamic_vlan.type`==`airespace-interface-name`, property key is the Vlan ID and property value is the Airespace Interface Name"
									}
								}
							],
							"description": "for 802.1x"
						}
					},
					{
						"name": "enable_local_keycaching",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "enable AP-AP keycaching via multicast"
						}
					},
					{
						"name": "enable_wireless_bridging",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "by default, we'd inspect all DHCP packets and drop those unrelated to the wireless client itself in the case where client is a wireless bridge (DHCP packets for other MACs will need to be orwarded), wireless_bridging can be enabled"
						}
					},
					{
						"name": "enable_wireless_bridging_dhcp_tracking",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if the client bridge is doing DHCP on behalf of other devices (L2-NAT), enable dhcp_tracking will cut down DHCP response packets to be forwarded to wireless"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "if this wlan is enabled"
						}
					},
					{
						"name": "fast_dot1x_timers",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if set to true, sets default fast-timers with values calculated from ‘auth_servers_timeout’ and ‘auth_server_retries’ ."
						}
					},
					{
						"name": "hide_ssid",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to hide SSID in beacon"
						}
					},
					{
						"name": "hostname_ie",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "include hostname inside IE in AP beacons / probe responses"
						}
					},
					{
						"name": "hotspot20",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "domain_name",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable hotspot 2.0 config"
									}
								},
								{
									"name": "nai_realms",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "operators",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of operators to support"
									}
								},
								{
									"name": "rcoi",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "venue_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "venue name, default is site name"
									}
								}
							],
							"description": "hostspot 2.0 wlan settings"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "inject_dhcp_option_82",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "circuit_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to inject option 82 when forwarding DHCP packets"
									}
								}
							]
						}
					},
					{
						"name": "interface",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "all"
							},
							"description": "where this WLAN will be connected to. enum: `all`, `eth0`, `eth1`, `eth2`, `eth3`, `mxtunnel`, `site_mxedge`, `wxtunnel`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"all\",\n\"eth0\",\n\"eth1\",\n\"eth2\",\n\"eth3\",\n\"mxtunnel\",\n\"site_mxedge\",\n\"wxtunnel\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to stop clients to talk to each other"
						}
					},
					{
						"name": "l2_isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if isolation is enabled, whether to deny clients to talk to L2 on the LAN"
						}
					},
					{
						"name": "legacy_overds",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "legacy devices requires the Over-DS (for Fast BSS Transition) bit set (while our chip doesn’t support it). Warning! Enabling this will cause problem for iOS devices."
						}
					},
					{
						"name": "limit_bcast",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to limit broadcast packets going to wireless (i.e. only allow certain bcast packets to go through)"
						}
					},
					{
						"name": "limit_probe_response",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "limit probe response base on some heuristic rules"
						}
					},
					{
						"name": "max_idletime",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 1800
							},
							"description": "max idle time in seconds",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.Between(60, 86400)"
									}
								}
							]
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "when enabled:\n  * `auth_servers` is ignored\n  * `acct_servers` is ignored\n  * `auth_servers_*` are ignored\n  * `coa_servers` is ignored\n  * `radsec` is ignored\n  * `coa_enabled` is assumed'"
									}
								}
							]
						}
					},
					{
						"name": "msp_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							}
						}
					},
					{
						"name": "mxtunnel_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `interface`=`mxtunnel`, id of the Mist Tunnel"
						}
					},
					{
						"name": "mxtunnel_name",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `interface`=`site_medge`, name of the mxtunnel that in mxtunnels under Site Setting"
						}
					},
					{
						"name": "no_static_dns",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to only allow client to use DNS that we’ve learned from DHCP response"
						}
					},
					{
						"name": "no_static_ip",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to only allow client that we’ve learned from DHCP exchange to talk"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "portal",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "amazon_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "amazon OAuth2 client id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "amazon_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "amazon OAuth2 client secret. If amazon_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "amazon_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "amazon_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether amazon is enabled as a login method"
									}
								},
								{
									"name": "amazon_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using amazon auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "auth",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "none"
										},
										"description": "authentication scheme. enum: `external`, `none`, `sso`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"none\",\n\"sso\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "azure_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory app client id"
									}
								},
								{
									"name": "azure_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory app client secret"
									}
								},
								{
									"name": "azure_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether Azure Active Directory is enabled as a login method"
									}
								},
								{
									"name": "azure_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using azure auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "azure_tenant_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `azure_enabled`==`true`.\nAzure active directory tenant id."
									}
								},
								{
									"name": "broadnet_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "broadnet_sid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "MIST"
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "broadnet_user_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`broadnet`"
									}
								},
								{
									"name": "bypass_when_cloud_down",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to bypass the guest portal when cloud not reachable (and apply the default policies)"
									}
								},
								{
									"name": "clickatell_api_key",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`clickatell`"
									}
								},
								{
									"name": "cross_site",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to allow guest to roam between WLANs (with same `WLAN.ssid`, regardless of variables) of different sites of same org without reauthentication (disable random_mac for seamless roaming)"
									}
								},
								{
									"name": "email_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether email (access code verification) is enabled as a login method"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether guest portal is enabled"
									}
								},
								{
									"name": "expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 1440
										},
										"description": "how long to remain authorized, in minutes"
									}
								},
								{
									"name": "external_portal_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "external portal URL (e.g. https://host/url) where we can append our query parameters to"
									}
								},
								{
									"name": "facebook_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `facebook_enabled`==`true`.\nFacebook OAuth2 app id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "facebook_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Required if `facebook_enabled`==`true`.\nFacebook OAuth2 app secret. If facebook_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "facebook_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "facebook_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether facebook is enabled as a login method"
									}
								},
								{
									"name": "facebook_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using facebook auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "forward",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to forward the user to another URL after authorized"
									}
								},
								{
									"name": "forward_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "the URL to forward the user to"
									}
								},
								{
									"name": "google_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Google OAuth2 app id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "google_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "Google OAuth2 app secret. If google_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "google_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "google_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether google is enabled as login method"
									}
								},
								{
									"name": "google_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using google auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "gupshup_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`gupshup`"
									}
								},
								{
									"name": "gupshup_userid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`gupshup`"
									}
								},
								{
									"name": "microsoft_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "microsoft 365 OAuth2 client id. This is optional. If not provided, it will use a default one."
									}
								},
								{
									"name": "microsoft_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "microsoft 365 OAuth2 client secret. If microsoft_client_id was provided, provide a correspoinding value. Else leave blank."
									}
								},
								{
									"name": "microsoft_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "Matches authenticated user email against provided domains. If null or [], all authenticated emails will be allowed."
									}
								},
								{
									"name": "microsoft_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether microsoft 365 is enabled as a login method"
									}
								},
								{
									"name": "microsoft_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using microsoft auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "passphrase_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether password is enabled"
									}
								},
								{
									"name": "passphrase_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using passphrase auth (in minutes), if not provided, uses `expire`"
									}
								},
								{
									"name": "password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "passphrase"
									}
								},
								{
									"name": "predefined_sponsors_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "whether to show list of sponsor emails mentioned in `sponsors` object as a dropdown. If both `sponsor_notify_all` and `predefined_sponsors_enabled` are false, behaviour is acc to `sponsor_email_domains`"
									}
								},
								{
									"name": "privacy",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "puzzel_password",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "puzzel_service_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "puzzel_username",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`puzzel`"
									}
								},
								{
									"name": "sms_message_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "sms_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether sms is enabled as a login method"
									}
								},
								{
									"name": "sms_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using sms auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "sms_provider",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "manual"
										},
										"description": "enum: `broadnet`, `clickatell`, `gupshup`, `manual`, `puzzel`, `telstra`, `twilio`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadnet\",\n\"clickatell\",\n\"gupshup\",\n\"manual\",\n\"puzzel\",\n\"telstra\",\n\"twilio\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "sponsor_auto_approve",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to automatically approve guest and allow sponsor to revoke guest access, needs predefined_sponsors_enabled enabled and sponsor_notify_all disabled"
									}
								},
								{
									"name": "sponsor_email_domains",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of domain allowed for sponsor email. Required if `sponsor_enabled` is `true` and `sponsors` is empty."
									}
								},
								{
									"name": "sponsor_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether sponsor is enabled"
									}
								},
								{
									"name": "sponsor_expire",
									"float64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "interval for which guest remains authorized using sponsor auth (in minutes), if not provided, uses expire`"
									}
								},
								{
									"name": "sponsor_link_validity_duration",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 60
										},
										"description": "how long to remain valid sponsored guest request approve/deny link received in email, in minutes."
									}
								},
								{
									"name": "sponsor_notify_all",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to notify all sponsors that are mentioned in `sponsors` object. Both `sponsor_notify_all` and `predefined_sponsors_enabled` should be true in order to notify sponsors. If true, email sent to 10 sponsors in no particular order."
									}
								},
								{
									"name": "sponsor_status_notify",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if enabled, guest will get email about sponsor's action (approve/deny)"
									}
								},
								{
									"name": "sponsors",
									"map": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "object of allowed sponsors email with name. Required if `sponsor_enabled` is `true` and `sponsor_email_domains` is empty.\nProperty key is the sponsor email, Property value is the sponsor name"
									}
								},
								{
									"name": "sso_default_role",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "default role to assign if there’s no match. By default, an assertion is treated as invalid when there’s no role matched"
									}
								},
								{
									"name": "sso_forced_role",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										}
									}
								},
								{
									"name": "sso_idp_cert",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP Cert (used to verify the signed response)"
									}
								},
								{
									"name": "sso_idp_sign_algo",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "signing algorithm for SAML Assertion"
									}
								},
								{
									"name": "sso_idp_sso_url",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP Single-Sign-On URL"
									}
								},
								{
									"name": "sso_issuer",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "IDP issuer URL"
									}
								},
								{
									"name": "sso_nameid_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "email"
										},
										"description": "enum: `email`, `unspecified`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"email\",\n\"unspecified\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "telstra_client_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`telstra`, Client ID provided by Telstra"
									}
								},
								{
									"name": "telstra_client_secret",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`telstra`, Client secret provided by Telstra"
									}
								},
								{
									"name": "twilio_auth_token",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Auth token account with twilio account"
									}
								},
								{
									"name": "twilio_phone_number",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Twilio phone number associated with the account. See example for accepted format."
									}
								},
								{
									"name": "twilio_sid",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": ""
										},
										"description": "when `sms_provider`==`twilio`, Account SID provided by Twilio"
									}
								}
							],
							"description": "portal wlan settings"
						}
					},
					{
						"name": "portal_allowed_hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of hostnames without http(s):// (matched by substring)"
						}
					},
					{
						"name": "portal_allowed_subnets",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of CIDRs"
						}
					},
					{
						"name": "portal_api_secret",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "api secret (auto-generated) that can be used to sign guest authorization requests"
						}
					},
					{
						"name": "portal_denied_hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of hostnames without http(s):// (matched by substring), this takes precedence over portal_allowed_hostnames"
						}
					},
					{
						"name": "portal_image",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "Url of portal background image"
						}
					},
					{
						"name": "portal_sso_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "portal_template_url",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "N.B portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
						}
					},
					{
						"name": "qos",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "class",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "best_effort"
										},
										"description": "enum: `background`, `best_effort`, `video`, `voice`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"background\",\n\"best_effort\",\n\"video\",\n\"voice\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "overwrite",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to overwrite QoS"
									}
								}
							]
						}
					},
					{
						"name": "radsec",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "idle_timeout",
									"int64": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "mxcluster_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "To use Org mxedges when this WLAN does not use mxtunnel, specify their mxcluster_ids.\nOrg mxedge(s) identified by mxcluster_ids"
									}
								},
								{
									"name": "proxy_hosts",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "default is site.mxedge.radsec.proxy_hosts which must be a superset of all wlans[*].radsec.proxy_hosts\nwhen radsec.proxy_hosts are not used, tunnel peers (org or site mxedges) are used irrespective of use_site_mxedge"
									}
								},
								{
									"name": "server_name",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "name of the server to verify (against the cacerts in Org Setting). Only if not Mist Edge."
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 65535)"
																}
															}
														]
													}
												}
											]
										},
										"description": "List of Radsec Servers. Only if not Mist Edge.",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "use_mxedge",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "use mxedge(s) as radsecproxy"
									}
								},
								{
									"name": "use_site_mxedge",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "To use Site mxedges when this WLAN does not use mxtunnel"
									}
								}
							],
							"description": "Radsec settings"
						}
					},
					{
						"name": "roam_mode",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "none"
							},
							"description": "enum: `11r`, `OKC`, `none`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"11r\",\n\"OKC\",\n\"none\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "schedule",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "hours",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "fri",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "mon",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sat",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "sun",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "thu",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "tue",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											},
											{
												"name": "wed",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": ""
													}
												}
											}
										],
										"description": "hours of operation filter, the available days (mon, tue, wed, thu, fri, sat, sun). \n\n**Note**: If the dow is not defined then it\\u2019\\ s treated as 00:00-23:59."
									}
								}
							],
							"description": "WLAN operating schedule, default is disabled"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "sle_excluded",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to exclude this WLAN from SLE metrics"
						}
					},
					{
						"name": "ssid",
						"string": {
							"computed_optional_required": "required",
							"description": "the name of the SSID"
						}
					},
					{
						"name": "thumbnail",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "Url of portal background image thumbnail"
						}
					},
					{
						"name": "use_eapol_v1",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if `auth.type`==’eap’ or ‘psk’, should only be set for legacy client, such as pre-2004, 802.11b devices"
						}
					},
					{
						"name": "vlan_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if vlan tagging is enabled"
						}
					},
					{
						"name": "vlan_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "vlan_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "vlan_ids to use when there’s no match from RA"
						}
					},
					{
						"name": "vlan_pooling",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "vlan pooling allows AP to place client on different VLAN using a deterministic algorithm"
						}
					},
					{
						"name": "wlan_limit_down",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "kbps"
						}
					},
					{
						"name": "wlan_limit_down_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if downlink limiting for whole wlan is enabled"
						}
					},
					{
						"name": "wlan_limit_up",
						"int64": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": 0
							},
							"description": "kbps"
						}
					},
					{
						"name": "wlan_limit_up_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "if uplink limiting for whole wlan is enabled"
						}
					},
					{
						"name": "wxtag_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of wxtag_ids"
						}
					},
					{
						"name": "wxtunnel_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "when `interface`=`wxtunnel`, id of the WXLAN Tunnel"
						}
					},
					{
						"name": "wxtunnel_remote_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": ""
							},
							"description": "when `interface`=`wxtunnel`, remote tunnel identifier"
						}
					}
				]
			}
		},
		{
			"name": "site_wxrule",
			"schema": {
				"attributes": [
					{
						"name": "action",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "type of action, allow / block. enum: `allow`, `block`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"block\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "apply_tags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							}
						}
					},
					{
						"name": "blocked_apps",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "blocked apps (always blocking, ignoring action), the key of Get Application List"
						}
					},
					{
						"name": "dst_allow_wxtags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "tag list to indicate these tags are allowed access"
						}
					},
					{
						"name": "dst_deny_wxtags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "tag list to indicate these tags are blocked access"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "order",
						"int64": {
							"computed_optional_required": "required",
							"description": "the order how rules would be looked up, \u003e 0 and bigger order got matched first, -1 means LAST, uniqueness not checked",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.AtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "src_wxtags",
						"list": {
							"computed_optional_required": "required",
							"element_type": {
								"string": {}
							},
							"description": "tag list to determine if this rule would match"
						}
					},
					{
						"name": "template_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Only for Org Level WxRule"
						}
					}
				]
			}
		},
		{
			"name": "site_wxtag",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mac",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`client`, Client MAC Address"
						}
					},
					{
						"name": "match",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "required if `type`==`match`. enum: `ap_id`, `app`, `asset_mac`, `client_mac`, `hostname`, `ip_range_subnet`, `port`, `psk_name`, `psk_role`, `radius_attr`, `radius_class`, `radius_group`, `radius_username`, `sdkclient_uuid`, `wlan_id`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ap_id\",\n\"app\",\n\"asset_mac\",\n\"client_mac\",\n\"hostname\",\n\"ip_range_subnet\",\n\"port\",\n\"psk_name\",\n\"psk_role\",\n\"radius_attr\",\n\"radius_class\",\n\"radius_group\",\n\"radius_username\",\n\"sdkclient_uuid\",\n\"wlan_id\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name"
						}
					},
					{
						"name": "op",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "in"
							},
							"description": "required if `type`==`match`, type of tag (inclusive/exclusive). enum: `in`, `not_in`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"in\",\n\"not_in\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "specs",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "0"
											},
											"description": "matched destination port, \"0\" means any"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "any"
											},
											"description": "tcp / udp / icmp / gre / any / \":protocol_number\", `protocol_number` is between 1-254"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "matched destination subnets and/or IP Addresses"
										}
									}
								]
							},
							"description": "if `type`==`spec`"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"description": "enum: `client`, `match`, `resource`, `spec`, `subnet`, `vlan`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"client\",\n\"match\",\n\"resource\",\n\"spec\",\n\"subnet\",\n\"vlan\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "values",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "required if `type`==`match` and\n  * `match`==`ap_id`: list of AP IDs\n  * `match`==`app`: list of Application Names\n  * `match`==`asset_mac`: list of Asset MAC Addresses\n  * `match`==`client_mac`: list of Client MAC Addresses\n  * `match`==`hostname`: list of Resources Hostnames\n  * `match`==`ip_range_subnet`: list of IP Addresses and/or CIDRs\n  * `match`==`psk_name`: list of PSK Names\n  * `match`==`psk_role`: list of PSK Roles\n  * `match`==`port`: list of Ports or Port Ranges\n  * `match`==`radius_attr`: list of RADIUS Attributes. The values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n  * `match`==`radius_class`: list of RADIUS Classes. This matches the ATTR-Class(25)\n  * `match`==`radius_group`: list of RADIUS Groups. This is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n  * `match`==`radius_username`: list of RADIUS Usernames. This matches the ATTR-User-Name(1)\n  * `match`==`sdkclient_uuid`: list of SDK UUIDs\n  * `match`==`wlan_id`: list of WLAN IDs\n\n**Notes**:\nVariables are not allowed"
						}
					},
					{
						"name": "vlan_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}