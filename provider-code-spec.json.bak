{
	"provider": {
		"name": "mistapi"
	},
	"resources": [
		{
			"name": "gatewaytemplate",
			"schema": {
				"attributes": [
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "bgp_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auth_key",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "bfd_minimum_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 350
											},
											"description": "when bfd_multiplier is configured alone\ndefault:\n* 1000 if `type`==`external``\n* 350 `type`==`internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255000)"
													}
												}
											]
										}
									},
									{
										"name": "bfd_multiplier",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3
											},
											"description": "when bfd_minimum_interval_is_configured alone",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "communities",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "id",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "local_preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "vpn_name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "disable_bfd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "BFD provides faster path failure detection and is enabled by default"
										}
									},
									{
										"name": "export",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "export_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default export policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "extended_v4_nexthop",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "by default, either inet/net6 unicast depending on neighbor IP family (v4 or v6)\nfor v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this"
										}
									},
									{
										"name": "graceful_restart_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "`0` means disable",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4095)"
													}
												}
											]
										}
									},
									{
										"name": "hold_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 90
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "import",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "import_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default import policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "local_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbor_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbors",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "If true, the BGP session to this neighbor will be administratively disabled/shutdown"
														}
													},
													{
														"name": "export_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "hold_time",
														"int64": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": 90
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 65535)"
																	}
																}
															]
														}
													},
													{
														"name": "import_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "multihop_ttl",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "assuming BGP neighbor is directly connected",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 255)"
																	}
																}
															]
														}
													},
													{
														"name": "neighbor_as",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "if per-neighbor as is desired. Property key is the neighbor address"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "by default, we'll re-advertise all learned BGP routers toward overlay"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"internal\",\n\"external\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "lan"
											},
											"description": "network name",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"vpn\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vpn_name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "wan_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `via`==`wan`"
										}
									}
								]
							}
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the MAC Address"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"string\",\n\"boolean\",\n\"ip\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "DHCP Server (local) or DHCP Relay (relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"relay\",\n\"none\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "DHCP Server (local) or DHCP Relay (relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"relay\",\n\"none\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"string\",\n\"boolean\",\n\"ip\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n* enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n* sub option code: 1-255, sub-option code"
													}
												}
											]
										}
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if set to `true`, disable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "dns_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "idp_profiles",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"strict\",\n\"standard\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "alert"
															},
															"description": "- alert (default) \n- drop: siliently dropping packets\n- close: notify client/server to close connection",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"drop\",\n\"close\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													}
												]
											}
										}
									}
								]
							},
							"description": "Property key is the profile name"
						}
					},
					{
						"name": "ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "secondary_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "optional list of secondary IPs in CIDR format"
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networks",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disallow_mist_services",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disallow Mist Devices in the network"
										}
									},
									{
										"name": "gateway",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "gateway6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "internal_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									},
									{
										"name": "internet_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "create_simple_service_policy",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "destination_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "port",
																	"int64": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "restricted",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
													}
												},
												{
													"name": "static_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
																	}
																}
															]
														},
														"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
													}
												}
											],
											"description": "whether this network has direct internet access"
										}
									},
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow clients in the network to talk to each other"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "routed_for_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "tenants",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "addresses",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															}
														}
													}
												]
											}
										}
									},
									{
										"name": "vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_access",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "advertised_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
														}
													},
													{
														"name": "allow_ping",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether to allow ping from vpn into this routed network"
														}
													},
													{
														"name": "destination_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "port",
																		"int64": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
														}
													},
													{
														"name": "nat_pool",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
														}
													},
													{
														"name": "no_readvertise_to_lan_bgp",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "no_readvertise_to_lan_ospf",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side OSPF peers"
														}
													},
													{
														"name": "no_readvertise_to_overlay",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "other_vrfs",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
														}
													},
													{
														"name": "routed",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether this network is routable"
														}
													},
													{
														"name": "source_nat",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "exteral_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															],
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
														}
													},
													{
														"name": "static_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "wan_name",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
																		}
																	}
																]
															},
															"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
														}
													},
													{
														"name": "summarized_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "summarized_subnet_to_lan_bgp",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "summarized_subnet_to_lan_ospf",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side OSPF peers"
														}
													}
												]
											},
											"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
										}
									}
								]
							}
						}
					},
					{
						"name": "ntp_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preferences",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "paths",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "cost",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "For SSR Only. `true`` if this specific path is undesired"
														}
													},
													{
														"name": "gateway_ip",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `type`==`local`, if a different gateway is desired"
														}
													},
													{
														"name": "internet_access",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "when `type`==`vpn`, if this vpn path can be used for internet"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "networks",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`"
														}
													},
													{
														"name": "target_ips",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`, if destination IP is to be replaced"
														}
													},
													{
														"name": "type",
														"string": {
															"computed_optional_required": "computed_optional",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"wan\",\n\"vpn\",\n\"tunnel\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Spoke's outgoing wan"
														}
													}
												]
											}
										}
									},
									{
										"name": "strategy",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "ordered"
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ordered\",\n\"weighted\",\n\"ecmp\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the path name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "port admin up (true) / down (false)"
										}
									},
									{
										"name": "dsl_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "vdsl"
											},
											"description": "if `wan_type`==`lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"vdsl\",\n\"adsl\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dsl_vci",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 35
											},
											"description": "if `wan_type`==`dsl`\n16 bit int"
										}
									},
									{
										"name": "dsl_vpi",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "if `wan_type`==`dsl`\n8 bit int"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"half\",\n\"full\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip_config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "dns",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "netmask",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "used only if `subnet` is not specified in `networks`"
													}
												},
												{
													"name": "network",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "optional, the network to be used for mgmt"
													}
												},
												{
													"name": "poser_password",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "pppoe_auth",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "if `type`==`pppoe`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"none\",\n\"chap\",\n\"pap\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "pppoe_username",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "dhcp"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n\"pppoe\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Junos IP Config"
										}
									},
									{
										"name": "lte_apn",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "if `wan_type`==`lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"none\",\n\"chap\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "lte_backup",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "lte_password",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_username",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "name that we'll use to derive config"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `usage`==`lan`"
										}
									},
									{
										"name": "outer_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "for Q-in-Q"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `usage`==`lan`"
										}
									},
									{
										"name": "preserve_dscp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "whether to preserve dscp when sending traffic over VPN (SSR-only)"
										}
									},
									{
										"name": "redundant",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_node",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_nodes",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "SSR only - supporting vlan-based redundancy (matching the size of `networks`)"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											}
										}
									},
									{
										"name": "ssr_no_virtual_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when SSR is running as VM, this is required on certain hosting platforms"
										}
									},
									{
										"name": "svr_port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "for SSR only"
										}
									},
									{
										"name": "traffic_shaping",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "class_percentages",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"wan\",\n\"ha_data\",\n\"ha_control\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if WAN interface is on a VLAN"
										}
									},
									{
										"name": "vpn_paths",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "broadband"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lte\",\n\"broadband\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "bfd_use_tunnel_mode",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "whether to use tunnel mode. SSR only"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "for a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)"
														}
													},
													{
														"name": "role",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "spoke"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"spoke\",\n\"hub\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "traffic_shaping",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "class_percentages",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"int64": {}
																		},
																		"description": "percentages for differet class of traffic: high / medium / low / best-effort\nsum must be equal to 100"
																	}
																},
																{
																	"name": "enabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "wan_arp_policer",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "recommended"
											},
											"description": "when `wan_type`==`broadband`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"recommended\",\n\"default\",\n\"max\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "wan_ext_ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional, if spoke should reach this port by a different IP"
										}
									},
									{
										"name": "wan_source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "or to disable the source-nat"
													}
												},
												{
													"name": "nat_pool",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if alternative nat_pool is desired"
													}
												}
											],
											"description": "optional, by default, source-NAT is performed on all WAN Ports using the interface-ip"
										}
									},
									{
										"name": "wan_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "if `usage`==`wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"dsl\",\n\"lte\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the port(s) name or range (e.g. \"ge-0/0/0-10\")"
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "auto assigned if not set"
						}
					},
					{
						"name": "routing_policies",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "terms",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "accept",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "add_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "add_target_vrfs",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "for SSR, hub decides how VRF routes are leaked on spoke"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "exclude_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. To exclude certain AS"
																	}
																},
																{
																	"name": "exclude_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "export_communitites",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "local_preference",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "optional, for an import policy, local_preference can be changed"
																	}
																},
																{
																	"name": "prepend_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. By default, the local AS will be prepended, to change it"
																	}
																}
															],
															"description": "when used as import policy"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "takes regular expression"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "network",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																						}
																					],
																					"schema_definition": "listvalidator.UniqueValues()"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "prefix",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
																	}
																},
																{
																	"name": "protocol",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "`direct`, `bgp`, `osp`, ..."
																	}
																},
																{
																	"name": "route_exists",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "route",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "vrf_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"default": {
																						"static": "default"
																					},
																					"description": "name of the vrf instance\nit can also be the name of the VPN or wan if they"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "vpn_neighbor_mac",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)"
																	}
																},
																{
																	"name": "vpn_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)\nordered-"
																	}
																},
																{
																	"name": "vpn_path_sla",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "max_jitter",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_latency",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_loss",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															],
															"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
														}
													}
												]
											},
											"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the routing policy name"
						}
					},
					{
						"name": "service_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "allow"
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															}
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "strict"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"strict\",\n\"standard\",\n)"
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "strict"
														},
														"description": "`strict` (default) / `standard` / or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "access within the same VRF"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "path_preferences",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "servicepolicy_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "used to link servicepolicy defined at org level and overwrite some attributes"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "tunnel_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auto_provision",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enable",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "latlng",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "lat",
																"float64": {
																	"computed_optional_required": "required"
																}
															},
															{
																"name": "lng",
																"float64": {
																	"computed_optional_required": "required"
																}
															}
														]
													}
												},
												{
													"name": "primary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "num_hosts",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												},
												{
													"name": "region",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "auto"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"EMEA\",\n\"Americas\",\n\"APAC\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "secondary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "num_hosts",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"name": "ike_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n* `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ike_mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "main"
											},
											"description": "Only if:\n* `provider`== `custom-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"main\",\n\"aggressive\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ike_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"sha1\",\n\"sha2\",\n\"md5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "* 1 \n* 2 (1024-bit) \n* 5\n* 14 (default, 2048-bit)\n* 15 (3072-bit) \n* 16 (4096-bit)\n* 19 (256-bit ECP)\n* 20 (384-bit ECP)\n* 21 (521-bit ECP) \n* 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n\"5\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"20\",\n\"21\",\n\"24\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aes256\",\n\"3des\",\n\"aes128\",\n\"aes_gcm256\",\n\"aes_gcm128\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ipsec_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "ipsec_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"sha1\",\n\"sha2\",\n\"md5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "Only if:\n* `provider`== `custom-ipsec`\nValues:\n* 1 \n* 2 (1024-bit) \n* 5\n* 14 (default, 2048-bit) \n* 15 (3072-bit) \n* 16 (4096-bit)\n* 19 (256-bit ECP)\n* 20 (384-bit ECP)\n* 21 (521-bit ECP) \n* 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n\"5\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"20\",\n\"21\",\n\"24\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aes256\",\n\"3des\",\n\"aes128\",\n\"aes_gcm256\",\n\"aes_gcm128\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Only if:\n* `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "local_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n* `provider`== `zscaler-ipsec`\n* `provider`==`jse-ipsec`\n* `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "active-standby"
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"active-standby\",\n\"active-active\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "primary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n* `provider`== `zscaler-gre` \n* `provider`== `custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n* `provider`== `custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "probe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "interval",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "how often to trigger the probe"
													}
												},
												{
													"name": "threshold",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "number of consecutive misses before declaring the tunnel down"
													}
												},
												{
													"name": "timeout",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "time within which to complete the connectivity check"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "icmp"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"icmp\",\n\"http\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if:\n* `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n* `provider`== `custom-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ipsec\",\n\"gre\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "provider",
										"string": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"zscaler-ipsec\",\n\"zscaler-gre\",\n\"customer-gre\",\n\"jse-ipsec\",\n\"custom-ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "psk",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if:\n* `provider`== `zscaler-ipsec`\n* `provider`==`jse-ipsec`\n* `provider`== `custom-ipsec`"
										}
									},
									{
										"name": "secondary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n* `provider`== `zscaler-gre` \n* `provider`== `custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if:\n* `provider`== `custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									},
									{
										"name": "version",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "2"
											},
											"description": "Only if:\n* `provider`== `custom-gre` \n* `provider`== `custom-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the tunnel name"
						}
					},
					{
						"name": "tunnel_provider_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "jse",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "num_users",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for jse-ipsec, this allow provisioning of adequate resource on JSE. Make sure adequate licenses are added"
									}
								},
								{
									"name": "zscaler",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "aup_acceptance_required",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": true
													}
												}
											},
											{
												"name": "aup_expire",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 1
													},
													"description": "days before AUP is requested again"
												}
											},
											{
												"name": "aup_ssl_proxy",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
												}
											},
											{
												"name": "download_mbps",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps"
												}
											},
											{
												"name": "enable_aup",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if `use_xff`==`true`, display Acceptable Use Policy (AUP)"
												}
											},
											{
												"name": "enable_caution",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when `enforce_authentication`==`false`, display caution notification for non-authenticated users"
												}
											},
											{
												"name": "enforce_authentication",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "name",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "sub_locations",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "aup_acceptance_required",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": true
																	}
																}
															},
															{
																"name": "aup_expire",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 1
																	},
																	"description": "days before AUP is requested again"
																}
															},
															{
																"name": "aup_ssl_proxy",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
																}
															},
															{
																"name": "download_mbps",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps"
																}
															},
															{
																"name": "enable_aup",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"description": "if `use_xff`==`true`, display Acceptable Use Policy (AUP)"
																}
															},
															{
																"name": "enable_caution",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "when `enforce_authentication`==`false`, display caution notification for non-authenticated users"
																}
															},
															{
																"name": "enforce_authentication",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	}
																}
															},
															{
																"name": "subnets",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															},
															{
																"name": "upload_mbps",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps"
																}
															}
														]
													},
													"description": "if `use_xff`==`true`"
												}
											},
											{
												"name": "upload_mbps",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps"
												}
											},
											{
												"name": "use_xff",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "location uses proxy chaining to forward traffic"
												}
											}
										],
										"description": "for zscaler-ipsec and zscaler-gre"
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "standalone"
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"standalone\",\n\"spoke\",\n)"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"name": "nacrule",
			"schema": {
				"attributes": [
					{
						"name": "action",
						"string": {
							"computed_optional_required": "required",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"block\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "apply_tags",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "all optional, this goes into Access-Accept"
						}
					},
					{
						"name": "enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							},
							"description": "enabled or not"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auth_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "eap-tls"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert\",\n\"idp\",\n\"mab\",\n\"psk\",\n\"device-auth\",\n\"eap-tls\",\n\"eap-ttls\",\n\"eap-teap\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "nactags",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "port_types",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids to match"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids to match"
									}
								},
								{
									"name": "vendor",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of vendors to match"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "not_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auth_type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "eap-tls"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert\",\n\"idp\",\n\"mab\",\n\"psk\",\n\"device-auth\",\n\"eap-tls\",\n\"eap-ttls\",\n\"eap-teap\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "nactags",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "port_types",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										}
									}
								},
								{
									"name": "site_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of site ids to match"
									}
								},
								{
									"name": "sitegroup_ids",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of sitegroup ids to match"
									}
								},
								{
									"name": "vendor",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "list of vendors to match"
									}
								}
							]
						}
					},
					{
						"name": "order",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "the order of the rule, lower value implies higher priority",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
											}
										],
										"schema_definition": "int64validator.AtLeast(0)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "nactag",
			"schema": {
				"attributes": [
					{
						"name": "allow_usermac_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "can be set to true to allow the override by usermac result"
						}
					},
					{
						"name": "egress_vlan_names",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`egress_vlan_names`, list of egress vlans to return"
						}
					},
					{
						"name": "gbp_tag",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`gbp_tag`"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "match",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`match`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"cert_cn\",\n\"cert_issuer\",\n\"cert_san\",\n\"cert_serial\",\n\"cert_sub\",\n\"client_mac\",\n\"idp_role\",\n\"mdm_status\",\n\"radius_group\",\n\"realm\",\n\"ssid\",\n\"user_name\",\n\"usermac_label\",\n)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "match_all",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "This field is applicable only when `type`==`match`\n* `false`: means it is sufficient to match any of the values (i.e., match-any behavior)\n* `true`: means all values should be matched (i.e., match-all behavior)\n\n\nCurrently it makes sense to set this field to `true` only if the `match`==`idp_role` or `match`==`usermac_label`"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "radius_attrs",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`radius_attrs`, user can specify a list of one or more standard attributes in the field \"radius_attrs\". \nIt is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.\nNote that it is allowed to have more than one radius_attrs in the result of a given rule."
						}
					},
					{
						"name": "radius_group",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`radius_group`"
						}
					},
					{
						"name": "radius_vendor_attrs",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`radius_vendor_attrs`, user can specify a list of one or more vendor-specific attributes in the field \"radius_vendor_attrs\". \nIt is the responsibility of the user to provide a syntactically correct string, otherwise it may not work as expected.\nNote that it is allowed to have more than one radius_vendor_attrs in the result of a given rule."
						}
					},
					{
						"name": "session_timeout",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`session_timeout, in seconds"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"egress_vlan_names\",\n\"match\",\n\"vlan\",\n\"gbp_tag\",\n\"radius_attrs\",\n\"radius_group\",\n\"radius_vendor_attrs\",\n\"session_timeout\",\n)"
									}
								},
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.LengthAtLeast(1)"
									}
								}
							]
						}
					},
					{
						"name": "values",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`match`"
						}
					},
					{
						"name": "vlan",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "if `type`==`vlan`"
						}
					}
				]
			}
		},
		{
			"name": "network",
			"schema": {
				"attributes": [
					{
						"name": "disallow_mist_services",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to disallow Mist Devices in the network"
						}
					},
					{
						"name": "gateway",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "gateway6",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "internal_access",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								}
							]
						}
					},
					{
						"name": "internet_access",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "create_simple_service_policy",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "destination_nat",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "internal_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										},
										"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "restricted",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
									}
								},
								{
									"name": "static_nat",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "internal_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "wan_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
													}
												}
											]
										},
										"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
									}
								}
							],
							"description": "whether this network has direct internet access"
						}
					},
					{
						"name": "isolation",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "whether to allow clients in the network to talk to each other"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "routed_for_networks",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
						}
					},
					{
						"name": "subnet",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "subnet6",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "tenants",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "addresses",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							}
						}
					},
					{
						"name": "vlan_id",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "vpn_access",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "advertised_subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
										}
									},
									{
										"name": "allow_ping",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow ping from vpn into this routed network"
										}
									},
									{
										"name": "destination_nat",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "internal_ip",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "port",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "Property key may be an IP/Port (i.e. \"63.16.0.3:443\"), or a port (i.e. \":2222\")"
										}
									},
									{
										"name": "nat_pool",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
										}
									},
									{
										"name": "no_readvertise_to_lan_bgp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "toward LAN-side BGP peers"
										}
									},
									{
										"name": "no_readvertise_to_lan_ospf",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "toward LAN-side OSPF peers"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
										}
									},
									{
										"name": "other_vrfs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
										}
									},
									{
										"name": "routed",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether this network is routable"
										}
									},
									{
										"name": "source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "exteral_ip",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											],
											"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
										}
									},
									{
										"name": "static_nat",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "internal_ip",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "If not set, we configure the nat policies against all WAN ports for simplicity"
														}
													}
												]
											},
											"description": "Property key may be an IP Address (i.e. \"172.16.0.1\"), and IP Address and Port (i.e. \"172.16.0.1:8443\") or a CIDR (i.e. \"172.16.0.12/20\")"
										}
									},
									{
										"name": "summarized_subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
										}
									},
									{
										"name": "summarized_subnet_to_lan_bgp",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward LAN-side BGP peers"
										}
									},
									{
										"name": "summarized_subnet_to_lan_ospf",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "toward LAN-side OSPF peers"
										}
									}
								]
							},
							"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
						}
					}
				]
			}
		},
		{
			"name": "networktemplate",
			"schema": {
				"attributes": [
					{
						"name": "acl_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "actions",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "allow"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dst_tag",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "src_tags",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									}
								]
							}
						}
					},
					{
						"name": "acl_tags",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "gbp_tag",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "required if\n- `type`==`dynamic_gbp` (gbp_tag received from RADIUS)\n- `type`==`static_gbp` (applying gbp tag against matching conditions)"
										}
									},
									{
										"name": "macs",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "required if \n- `type`==`mac`\n- `type`==`static_gbp` if from matching mac"
										}
									},
									{
										"name": "network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if:\n- `type`==`mac` (optional. default is `any`)\n- `type`==`subnet` (optional. default is `any`)\n- `type`==`network`\n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching network (vlan)"
										}
									},
									{
										"name": "radius_group",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "required if \n- `type`==`radius_group` \n- `type`==`static_gbp` if from matching radius_group"
										}
									},
									{
										"name": "specs",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "port_range",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "80"
															},
															"description": "matched dst port, \"0\" means any"
														}
													},
													{
														"name": "protocol",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "any"
															},
															"description": "`tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`. `protocol_number` is between 1-254"
														}
													}
												]
											},
											"description": "if `type`==`resource`\nempty means unrestricted, i.e. any"
										}
									},
									{
										"name": "subnets",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if \n- `type`==`subnet` \n- `type`==`resource` (optional. default is `any`)\n- `type`==`static_gbp` if from matching subnet"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "required",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"mac\",\n\"subnet\",\n\"network\",\n\"radius_group\",\n\"any\",\n\"resource\",\n\"dynamic_gbp\",\n\"static_gbp\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "ACL Tags to identify traffic source or destination. Key name is the tag name"
						}
					},
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "dhcp_snooping",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "all_networks",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for dynamic ARP inspection check"
									}
								},
								{
									"name": "enable_ip_source_guard",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for check for forging source IP address"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "networks",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "if `all_networks`==`false`, list of network with DHCP snooping enabled"
									}
								}
							]
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "discard",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "this takes precedence"
										}
									},
									{
										"name": "metric",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4294967295)"
													}
												}
											]
										}
									},
									{
										"name": "next_qualified",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "metric",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									},
									{
										"name": "no_resolve",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "preference",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4294967295)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "next-hop IP Address"
										}
									}
								]
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "enable mist_nac to use radsec"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "networks",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)\nNOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set"
										}
									},
									{
										"name": "isolation_vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional for pure switching, required when L3 / routing features are used"
										}
									},
									{
										"name": "vlan_id",
										"int64": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "Property key is network name"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "port_mirrorings",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "input_networks_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "input_port_ids_egress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "input_port_ids_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "output_network",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "output_port_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty on of the `output_port_id` or `output_network` should be provided"
										}
									}
								]
							},
							"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
						}
					},
					{
						"name": "port_usages",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "all_networks",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`==`trunk` whether to trunk all network/vlans"
										}
									},
									{
										"name": "allow_dhcpd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri_state.\n\nWhen it is not defined, it means using the system’s default setting which depends on whether the port is a access or trunk port."
										}
									},
									{
										"name": "allow_multiple_supplicants",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "bypass_auth_when_server_down",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` bypass auth for known clients if set to true when RADIUS server is down"
										}
									},
									{
										"name": "bypass_auth_when_server_down_for_unkonwn_client",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` bypass auth for all (including unknown clients) if set to true when RADIUS server is down"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic`"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` if speed and duplex are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether the port is disabled"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "Only if `mode`!=`dynamic` link connection mode",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"half\",\n\"full\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_vlan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`!=`dynamic` if dynamic vlan is used, specify the possible networks/vlans RADIUS can return"
										}
									},
									{
										"name": "enable_mac_auth",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` whether to enable MAC Auth"
										}
									},
									{
										"name": "enable_qos",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "guest_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)"
										}
									},
									{
										"name": "inter_switch_link",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` inter_switch_link is used together with \"isolation\" under networks\nNOTE: inter_switch_link works only between Juniper device. This has to be applied to both ports connected together"
										}
									},
									{
										"name": "mac_auth_only",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `enable_mac_auth`==`true`"
										}
									},
									{
										"name": "mac_auth_protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "eap-md5"
											},
											"description": "if `enable_mac_auth` ==`true`. This type is ignored if mist_nac is enabled.",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"pap\",\n\"eap-peap\",\n\"eap-md5\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mac_limit",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "Only if `mode`!=`dynamic` max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(0)"
													}
												}
											]
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "`mode`==`dynamic` must only be used with the port usage with the name `dynamic`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"trunk\",\n\"inet\",\n\"dynamic\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514."
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `mode`==`trunk`, the list of network/vlans"
										}
									},
									{
										"name": "persist_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` and `mode`==`access` and `port_auth`!=`dot1x` whether the port should retain dynamically learned MAC addresses"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` whether PoE capabilities are disabled for a port"
										}
									},
									{
										"name": "port_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` if dot1x is desired, set to dot1x"
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` native network/vlan for untagged traffic"
										}
									},
									{
										"name": "reauth_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3600
											},
											"description": "Only if `mode`!=`dynamic` and `port_auth`=`dot1x` reauthentication interval range",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(10, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "rejected_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` and `port_auth`==`dot1x` when radius server reject / fails"
										}
									},
									{
										"name": "reset_default_when",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "link_down"
											},
											"description": "Only if `mode`==`dynamic` Control when the DPC port should be changed to the default port usage\nConfiguring to none will let the DPC port keep at the current port usage.",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"none\",\n\"link_down\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "rules",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "equals",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "equals_any",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "use `equals_any` to match any item in a list"
														}
													},
													{
														"name": "expression",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "\"[0:3]\":\"abcdef\" -\u003e \"abc\"\n\"split(.)[1]\": \"a.b.c\" -\u003e \"b\"\n\"split(-)[1][0:3]: \"a1234-b5678-c90\" -\u003e \"b56\""
														}
													},
													{
														"name": "src",
														"string": {
															"computed_optional_required": "required",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lldp_chassis_id\",\n\"lldp_system_name\",\n\"lldp_serial_number\",\n\"lldp_hardware_revision\",\n\"lldp_manufacturer_name\",\n\"lldp_oui\",\n\"radius_username\",\n\"radius_usermac\",\n\"radius_dynamicfilter\",\n\"link_peermac\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "usage",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "`port_usage` name"
														}
													}
												]
											},
											"description": "Only if `mode`==`dynamic`"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` speed, default is auto to automatically negotiate speed"
										}
									},
									{
										"name": "storm_control",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "no_broadcast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on broadcast traffic"
													}
												},
												{
													"name": "no_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on multicast traffic"
													}
												},
												{
													"name": "no_registered_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on registered multicast traffic"
													}
												},
												{
													"name": "no_unknown_unicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on unknown unicast traffic"
													}
												},
												{
													"name": "percentage",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 100)"
																}
															}
														]
													}
												}
											],
											"description": "Switch storm control\nOnly if `mode`!=`dynamic`"
										}
									},
									{
										"name": "stp_edge",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "Only if `mode`!=`dynamic` when enabled, the port is not expected to receive BPDU frames"
										}
									},
									{
										"name": "voip_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `mode`!=`dynamic` network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth"
										}
									}
								]
							}
						}
					},
					{
						"name": "radius_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "acct_interim_interval",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "acct_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hex\",\n\"ascii\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1813
														},
														"description": "Acct port of RADIUS server"
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hex\",\n\"ascii\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1812
														},
														"description": "Auth port of RADIUS server"
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers_retries",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3
										},
										"description": "radius auth session retries"
									}
								},
								{
									"name": "auth_servers_timeout",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "radius auth session timeout"
									}
								},
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "coa_port",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3799
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip"
									}
								},
								{
									"name": "source_ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`"
									}
								}
							],
							"description": "Junos Radius config"
						}
					},
					{
						"name": "remote_syslog",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "archive",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "files",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "size",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "console",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "contents",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "facility",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "severity",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "files",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "archive",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "files",
																"int64": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "size",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												},
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "file",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
									}
								},
								{
									"name": "send_to_all_servers",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "facility",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 514
														}
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "udp"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"udp\",\n\"tcp\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "routing_instance",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "severity",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "any"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "source_address",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "tag",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "time_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"millisecond\",\n\"year\",\n\"year millisecond\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "users",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "any"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "snmp_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "client_list",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "clients",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												}
											]
										}
									}
								},
								{
									"name": "contact",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "description",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										}
									}
								},
								{
									"name": "engine_id",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"engine-id-suffix\",\n\"use-default-ip-address\",\n\"use_mac-address\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "location",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "name",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										}
									}
								},
								{
									"name": "trap_groups",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "categories",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "group_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Categories list can refer to https://www.juniper.net/documentation/software/topics/task/configuration/snmp_trap-groups-configuring-junos-nm.html"
													}
												},
												{
													"name": "targets",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "version",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "v2"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v1\",\n\"v2\",\n\"all\",\n)"
																}
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"name": "v2c_config",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "authorization",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "client_list_name",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "client_list_name here should refer to client_list above"
													}
												},
												{
													"name": "community_name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "view",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "view name here should be defined in views above"
													}
												}
											]
										}
									}
								},
								{
									"name": "v3_config",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "notify",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "tag",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "type",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"trap\",\n\"inform\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											},
											{
												"name": "notify_filter",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "contents",
																"list_nested": {
																	"computed_optional_required": "computed_optional",
																	"nested_object": {
																		"attributes": [
																			{
																				"name": "include",
																				"bool": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "oid",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															},
															{
																"name": "profile_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_address",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "address",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "address_mask",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 161
																	}
																}
															},
															{
																"name": "tag_list",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "\u003crefer to notify tag, can be multiple with blank"
																}
															},
															{
																"name": "target_address_name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "target_parameters",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to notify target parameters name"
																}
															}
														]
													}
												}
											},
											{
												"name": "target_parameters",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "message_processing_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"v1\",\n\"v2c\",\n\"v3\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "notify_filter",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to profile-name in notify_filter"
																}
															},
															{
																"name": "security_level",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication\",\n\"none\",\n\"privacy\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_model",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "security_name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "refer to security_name in usm"
																}
															}
														]
													}
												}
											},
											{
												"name": "usm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "engineid",
															"string": {
																"computed_optional_required": "computed_optional",
																"description": "required only if `engine_type`==`remote_engine`"
															}
														},
														{
															"name": "engine_type",
															"string": {
																"computed_optional_required": "computed_optional",
																"validators": [
																	{
																		"custom": {
																			"imports": [
																				{
																					"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																				}
																			],
																			"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"remote_engine\",\n\"local_engine\",\n)"
																		}
																	}
																]
															}
														},
														{
															"name": "users",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "authentication_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `authentication_type`==`authentication_none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters.",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(7)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "authentication_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "sha224, sha256, sha384, sha512 are supported in 21.1 and newer release",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"authentication_md5\",\n\"authentication_sha\",\n\"authentication_sha224\",\n\"authentication_sha256\",\n\"authentication_sha384\",\n\"authentication_sha512\",\n\"authentication_none\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_password",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"description": "Not required if `encryption_type`==`privacy-none`\ninclude alphabetic, numeric, and special characters, but it cannot include control characters",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.LengthAtLeast(8)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "encryption_type",
																			"string": {
																				"computed_optional_required": "computed_optional",
																				"validators": [
																					{
																						"custom": {
																							"imports": [
																								{
																									"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																								}
																							],
																							"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"privacy-aes128\",\n\"privacy-des\",\n\"privacy-3des\",\n\"privacy-none\",\n)"
																						}
																					}
																				]
																			}
																		},
																		{
																			"name": "name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		}
																	]
																}
															}
														}
													]
												}
											},
											{
												"name": "vacm",
												"single_nested": {
													"computed_optional_required": "computed_optional",
													"attributes": [
														{
															"name": "access",
															"list_nested": {
																"computed_optional_required": "computed_optional",
																"nested_object": {
																	"attributes": [
																		{
																			"name": "group_name",
																			"string": {
																				"computed_optional_required": "computed_optional"
																			}
																		},
																		{
																			"name": "prefix_list",
																			"list_nested": {
																				"computed_optional_required": "computed_optional",
																				"nested_object": {
																					"attributes": [
																						{
																							"name": "context_prefix",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "only required if `type`==`context_prefix`"
																							}
																						},
																						{
																							"name": "notify_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "read_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						},
																						{
																							"name": "security_level",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"privacy\",\n\"authentication\",\n\"none\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "security_model",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"any\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "type",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"validators": [
																									{
																										"custom": {
																											"imports": [
																												{
																													"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																												}
																											],
																											"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default_context_prefix\",\n)"
																										}
																									}
																								]
																							}
																						},
																						{
																							"name": "write_view",
																							"string": {
																								"computed_optional_required": "computed_optional",
																								"description": "refer to view name"
																							}
																						}
																					]
																				}
																			}
																		}
																	]
																}
															}
														},
														{
															"name": "security_to_group",
															"single_nested": {
																"computed_optional_required": "computed_optional",
																"attributes": [
																	{
																		"name": "content",
																		"list_nested": {
																			"computed_optional_required": "computed_optional",
																			"nested_object": {
																				"attributes": [
																					{
																						"name": "group",
																						"string": {
																							"computed_optional_required": "computed_optional",
																							"description": "refer to group_name under access"
																						}
																					},
																					{
																						"name": "security_name",
																						"string": {
																							"computed_optional_required": "computed_optional"
																						}
																					}
																				]
																			}
																		}
																	},
																	{
																		"name": "security_model",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"validators": [
																				{
																					"custom": {
																						"imports": [
																							{
																								"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																							}
																						],
																						"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"usm\",\n\"v1\",\n\"v2c\",\n)"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "views",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "include",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "if the root oid configured is included"
												}
											},
											{
												"name": "oid",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "view_name",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "switch_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enable",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "rules",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "additional_config_cmds",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
													}
												},
												{
													"name": "match_role",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "role to match"
													}
												},
												{
													"name": "match_type",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "string to match. e.g: `match_name[0:3]`, `match_name[2:6]`, `match_model`,  `match_model[0-6]`"
													}
												},
												{
													"name": "match_value",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "value to match"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"10m\",\n\"100m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Propery key is the interface name or interface range"
													}
												},
												{
													"name": "port_mirroring",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "input_networks_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_egress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "output_network",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "output_port_id",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty on of the `output_port_id` or `output_network` should be provided"
																	}
																}
															]
														},
														"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "Switch template"
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config_revert",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										}
									}
								},
								{
									"name": "protect_re",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "allowed_services",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "optionally, services we'll allow"
												}
											},
											{
												"name": "custom",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "port_range",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "0"
																	},
																	"description": "matched dst port, \"0\" means any"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"tcp\",\n\"udp\",\n\"icmp\",\n\"any\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "subnet",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when enabled, all traffic that is not essential to our operation will be dropped\ne.g. ntp / dns / traffic to mist will be allowed by default\n     if dhcpd is enabled, we'll make sure it works"
												}
											},
											{
												"name": "trusted_hosts",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "host/subnets we'll allow traffic to/from"
												}
											}
										],
										"description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works"
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tacacs",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "acct_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "default_role",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "none"
													},
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"admin\",\n\"none\",\n\"read\",\n\"helpdesk\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "network",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "which network the TACACS server resides"
												}
											},
											{
												"name": "tacplus_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Next-hop address"
														}
													}
												]
											},
											"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		},
		{
			"name": "org",
			"schema": {
				"attributes": [
					{
						"name": "alarmtemplate_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "allow_mist",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": true
							}
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "msp_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "msp_logo_url",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "logo uploaded by the MSP with advanced tier, only present if provided"
						}
					},
					{
						"name": "msp_name",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "name of the msp the org belongs to"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "orggroup_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							}
						}
					},
					{
						"name": "session_expiry",
						"number": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "rftemplate",
			"schema": {
				"attributes": [
					{
						"name": "ant_gain_24",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ant_gain_5",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ant_gain_6",
						"int64": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "band_24",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 20
										},
										"description": "channel width for the 2.4GHz band",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channel",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "For Device. (primary) channel for the band, 0 means using the Site Setting",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(1, 13)"
												}
											}
										]
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 17
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 18)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(3, 18)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "band_24_usage",
						"string": {
							"computed_optional_required": "computed_optional",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"24\",\n\"5\",\n\"6\",\n\"auto\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "band_5",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"description": "channel width for the 5GHz band",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channel",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "For Device. (primary) channel for the band, 0 means using the Site Setting"
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 17
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 17)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
												}
											}
										]
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "band_6",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "allow_rrm_disable",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "ant_gain",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 10)"
												}
											}
										]
									}
								},
								{
									"name": "antenna_mode",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "default"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "bandwidth",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 80
										},
										"description": "channel width for the 6GHz band",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n160,\n)"
												}
											}
										]
									}
								},
								{
									"name": "channel",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "For Device. (primary) channel for the band, 0 means using the Site Setting"
									}
								},
								{
									"name": "channels",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"int64": {}
										},
										"description": "For RFTemplates. List of channels, null or empty array means auto"
									}
								},
								{
									"name": "disabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "whether to disable the radio"
									}
								},
								{
									"name": "power",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 25)"
												}
											}
										]
									}
								},
								{
									"name": "power_max",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 18
										},
										"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 18)"
												}
											}
										]
									}
								},
								{
									"name": "power_min",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 8
										},
										"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(5, 18)"
												}
											}
										]
									}
								},
								{
									"name": "preamble",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "short"
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "standard_power",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed and we'll fallback to Low Power Indoor if AFC failed"
									}
								}
							],
							"description": "Radio Band AP settings"
						}
					},
					{
						"name": "country_code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, country code to use. If specified, this gets applied to all sites using the RF Template"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "model_specific",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ant_gain_24",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "ant_gain_5",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "ant_gain_6",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "band_24",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 20
														},
														"description": "channel width for the 2.4GHz band",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channel",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "For Device. (primary) channel for the band, 0 means using the Site Setting",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(1, 13)"
																}
															}
														]
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 18)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3, 18)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_24_usage",
										"string": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"24\",\n\"5\",\n\"6\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "band_5",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "channel width for the 5GHz band",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channel",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "For Device. (primary) channel for the band, 0 means using the Site Setting"
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_5_on_24_radio",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "channel width for the 5GHz band",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channel",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "For Device. (primary) channel for the band, 0 means using the Site Setting"
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 17
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 17)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									},
									{
										"name": "band_6",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "allow_rrm_disable",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "ant_gain",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 10)"
																}
															}
														]
													}
												},
												{
													"name": "antenna_mode",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "default"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"1x1\",\n\"2x2\",\n\"3x3\",\n\"4x4\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "bandwidth",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "channel width for the 6GHz band",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.OneOf(\n20,\n40,\n80,\n160,\n)"
																}
															}
														]
													}
												},
												{
													"name": "channel",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "For Device. (primary) channel for the band, 0 means using the Site Setting"
													}
												},
												{
													"name": "channels",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "For RFTemplates. List of channels, null or empty array means auto"
													}
												},
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable the radio"
													}
												},
												{
													"name": "power",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 0
														},
														"description": "TX power of the radio. For Devices, 0 means auto. -1 / -2 / -3 / …: treated as 0 / -1 / -2 / …",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 25)"
																}
															}
														]
													}
												},
												{
													"name": "power_max",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 18
														},
														"description": "when power=0, max tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 18)"
																}
															}
														]
													}
												},
												{
													"name": "power_min",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 8
														},
														"description": "when power=0, min tx power to use, HW-specific values will be used if not set",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(5, 18)"
																}
															}
														]
													}
												},
												{
													"name": "preamble",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "short"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"short\",\n\"long\",\n\"auto\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "standard_power",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "for 6GHz Only, standard-power operation, AFC (Automatic Frequency Coordination) will be performed and we'll fallback to Low Power Indoor if AFC failed"
													}
												}
											],
											"description": "Radio Band AP settings"
										}
									}
								]
							},
							"description": "overwrites for a specific model. If a band is specified, it will shadow the default. Property key is the model name (e.g. \"AP63\")"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required",
							"description": "The name of the RF template"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "scanning_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"description": "whether scanning radio is enabled"
						}
					}
				]
			}
		},
		{
			"name": "service",
			"schema": {
				"attributes": [
					{
						"name": "addresses",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`custom`, ip subnets"
						}
					},
					{
						"name": "app_categories",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`app_categories`\nlist of application categories are available through /api/v1/const/app_categories"
						}
					},
					{
						"name": "app_subcategories",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`app_categories`\nlist of application categories are available through /api/v1/const/app_subcategories"
						}
					},
					{
						"name": "apps",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`apps`\nlist of applications are available through:\n  - /api/v1/const/applications,\n  - /api/v1/const/gateway_applications\n  - /insight/top_app_by-bytes?wired=true"
						}
					},
					{
						"name": "description",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "dscp",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "when `traffic_type`==`custom`"
						}
					},
					{
						"name": "failover_policy",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "revertable"
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"revertable\",\n\"non_revertable\",\n\"none\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "hostnames",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "if `type`==`custom`, web filtering"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "max_jitter",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "when `traffic_type`==`custom`, for uplink selection"
						}
					},
					{
						"name": "max_latency",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "when `traffic_type`==`custom`, for uplink selection"
						}
					},
					{
						"name": "max_loss",
						"int64": {
							"computed_optional_required": "computed_optional",
							"description": "when `traffic_type`==`custom`, for uplink selection"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "sle_enabled",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							},
							"description": "whether to enable measure SLE"
						}
					},
					{
						"name": "specs",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "port_range",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "any"
											},
											"description": "`https`/ `tcp` / `udp` / `icmp` / `gre` / `any` / `:protocol_number`.\n`protocol_number` is between 1-254"
										}
									}
								]
							}
						}
					},
					{
						"name": "ssr_relaxed_tcp_state_enforcement",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "traffic_class",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "best_effort"
							},
							"description": "when `traffic_type`==`custom`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"best_effort\",\n\"high\",\n\"medium\",\n\"low\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "traffic_type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "data_best_effort"
							},
							"description": "values from `/api/v1/consts/traffic_types`\n* when `type`==`apps`, we'll choose traffic_type automatically\n* when `type`==`addresses` or `type`==`hostnames`, you can provide your own settings (optional)"
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "custom"
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"apps\",\n\"app_categories\",\n\"custom\",\n\"urls\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "urls",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "when `type`==`urls\nno need for spec as URL can encode the ports being used`"
						}
					}
				]
			}
		},
		{
			"name": "site",
			"schema": {
				"attributes": [
					{
						"name": "address",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "full address of the site"
						}
					},
					{
						"name": "alarmtemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Alarm Template ID, this takes precedence over the Org-level alarmtemplate_id"
						}
					},
					{
						"name": "aptemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "AP Template ID, used by APs"
						}
					},
					{
						"name": "country_code",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "country code for the site (for AP config generation), in two-character"
						}
					},
					{
						"name": "gatewaytemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Gateway Template ID, used by gateways"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "latlng",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "lat",
									"float64": {
										"computed_optional_required": "required"
									}
								},
								{
									"name": "lng",
									"float64": {
										"computed_optional_required": "required"
									}
								}
							]
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networktemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Network Template ID, this takes precedence over Site Settings"
						}
					},
					{
						"name": "notes",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "optional, any notes about the site"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "rftemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "RF Template ID, this takes precedence over Site Settings"
						}
					},
					{
						"name": "secpolicy_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "SecPolicy ID"
						}
					},
					{
						"name": "sitegroup_ids",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "sitegroups this site belongs to"
						}
					},
					{
						"name": "sitetemplate_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Site Template ID"
						}
					},
					{
						"name": "timezone",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Timezone the site is at"
						}
					}
				]
			}
		},
		{
			"name": "sitegroup",
			"schema": {
				"attributes": [
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}