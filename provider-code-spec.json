{
	"provider": {
		"name": "mistapi"
	},
	"resources": [
		{
			"name": "networktemplate",
			"schema": {
				"attributes": [
					{
						"name": "acl_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "actions",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "allow"
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"allow\",\n\"deny\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dst_tag",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "src_tags",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "- for GBP-based policy, all src_tags and dst_tags have to be gbp-based\n- for ACL-based policy, `network` is required in either the source or destination so that we know where to attach the policy to"
										}
									}
								]
							}
						}
					},
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
						}
					},
					{
						"name": "dhcp_snooping",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "all_networks",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "enable_arp_spoof_check",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for dynamic ARP inspection check"
									}
								},
								{
									"name": "enable_ip_source_guard",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "Enable for check for forging source IP address"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "networks",
									"list": {
										"computed_optional_required": "computed_optional",
										"element_type": {
											"string": {}
										},
										"description": "if `all_networks`==`false`, list of network with DHCP snooping enabled"
									}
								}
							]
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "mist_nac",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "enable mist_nac to use radsec"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "networks",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to stop clients to talk to each other, default is false (when enabled, a unique isolation_vlan_id is required)\nNOTE: this features requires uplink device to also a be Juniper device and `inter_switch_link` to be set"
										}
									},
									{
										"name": "isolation_vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "optional for pure switching, required when L3 / routing features are used"
										}
									},
									{
										"name": "vlan_id",
										"int64": {
											"computed_optional_required": "required"
										}
									}
								]
							},
							"description": "Property key is network name"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "port_mirrorings",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "input_networks_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "input_port_ids_egress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "input_port_ids_ingress",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
										}
									},
									{
										"name": "output_network",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "output_port_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "exaclty on of the `output_port_id` or `output_network` should be provided"
										}
									}
								]
							},
							"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
						}
					},
					{
						"name": "port_usages",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "all_networks",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `mode`==`trunk`, whether to trunk all network/vlans"
										}
									},
									{
										"name": "allow_dhcpd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if DHCP snooping is enabled, whether DHCP server is allowed on the interfaces with. All the interfaces from port configs using this port usage are effected. Please notice that allow_dhcpd is a tri_state.\n\nWhen it is not defined, it means using the systemâ€™s default setting which depends on whether the port is a access or trunk port."
										}
									},
									{
										"name": "allow_multiple_supplicants",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "bypass_auth_when_server_down",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `port_auth`==`dot1x`, bypass auth for known clients if set to true when RADIUS server is down"
										}
									},
									{
										"name": "bypass_auth_when_server_down_for_unkonwn_client",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `port_auth`=`dot1x`, bypass auth for all (including unknown clients) if set to true when RADIUS server is down"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "description"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if speed and duplex are specified, whether to disable autonegotiation"
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether the port is disabled"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "link connection mode, choices are auto (default), full, and half",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"half\",\n\"full\",\n\"auto\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dynamic_vlan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if dynamic vlan is used, specify the possible networks/vlans RADIUS can return"
										}
									},
									{
										"name": "enable_mac_auth",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `port_auth`==`dot1x`, whether to enable MAC Auth"
										}
									},
									{
										"name": "enable_qos",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "guest_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `port_auth`==`dot1x`, which network to put the device into if the device cannot do dot1x. default is null (i.e. not allowed)"
										}
									},
									{
										"name": "inter_switch_link",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "inter_switch_link is used together with \"isolation\" under networks\nNOTE: inter_switch_link works only between Juniper device. This has to be applied to both ports connected together"
										}
									},
									{
										"name": "mac_auth_only",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "only effect once `enable_mac_auth`==`true`"
										}
									},
									{
										"name": "mac_auth_protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "eap-md5"
											},
											"description": "if `enable_mac_auth` ==`true`. This type is ignored if mist_nac is enabled.",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"pap\",\n\"eap-peap\",\n\"eap-md5\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mac_limit",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "max number of mac addresses, default is 0 for unlimited, otherwise range is 1 or higher, with upper bound constrained by platform",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(0)"
													}
												}
											]
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "access (default) / trunk",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"access\",\n\"trunk\",\n\"inet\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation. The default value is 1514."
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `mode`==`trunk`, the list of network/vlans"
										}
									},
									{
										"name": "persist_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `mode`==`access` and `port_auth`!=`dot1x`, whether the port should retain dynamically learned MAC addresses"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether PoE capabilities are disabled for a port"
										}
									},
									{
										"name": "port_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if dot1x is desired, set to dot1x"
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "native network/vlan for untagged traffic"
										}
									},
									{
										"name": "reauth_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3600
											},
											"description": "if `port_auth`=`dot1x`, reauthentication interval range",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(10, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "rejected_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `port_auth`==`dot1x`, when radius server reject / fails"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "speed, default is auto to automatically negotiate speed"
										}
									},
									{
										"name": "storm_control",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "no_broadcast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on broadcast traffic"
													}
												},
												{
													"name": "no_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on multicast traffic"
													}
												},
												{
													"name": "no_registered_multicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on registered multicast traffic"
													}
												},
												{
													"name": "no_unknown_unicast",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "whether to disable storm control on unknown unicast traffic"
													}
												},
												{
													"name": "percentage",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 80
														},
														"description": "bandwidth-percentage, configures the storm control level as a percentage of the available bandwidth",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(0, 100)"
																}
															}
														]
													}
												}
											],
											"description": "Switch storm control"
										}
									},
									{
										"name": "stp_edge",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when enabled, the port is not expected to receive BPDU frames"
										}
									},
									{
										"name": "voip_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "network/vlan for voip traffic, must also set port_network. to authenticate device, set port_auth"
										}
									}
								]
							},
							"description": "Property key is the port profile name"
						}
					},
					{
						"name": "radius_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "acct_interim_interval",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 0
										},
										"description": "how frequently should interim accounting be reported, 60-65535. default is 0 (use one specified in Access-Accept request from RADIUS Server). Very frequent messages can affect the performance of the radius server, 600 and up is recommended when enabled",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
														}
													],
													"schema_definition": "int64validator.Between(0, 65535)"
												}
											}
										]
									}
								},
								{
									"name": "acct_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"hex\",\n\"ascii\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1813
														},
														"description": "Acct port of RADIUS server"
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "host",
													"string": {
														"computed_optional_required": "required",
														"description": "ip / hostname of RADIUS server"
													}
												},
												{
													"name": "keywrap_enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_format",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"hex\",\n\"ascii\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "keywrap_kek",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "keywrap_mack",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 1812
														},
														"description": "Auth port of RADIUS server"
													}
												},
												{
													"name": "secret",
													"string": {
														"computed_optional_required": "required",
														"description": "secret of RADIUS server"
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.SizeAtLeast(1)"
												}
											},
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								},
								{
									"name": "auth_servers_retries",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3
										},
										"description": "radius auth session retries"
									}
								},
								{
									"name": "auth_servers_timeout",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 5
										},
										"description": "radius auth session timeout"
									}
								},
								{
									"name": "coa_enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "coa_port",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 3799
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`\nwhich network the RADIUS server resides, if there's static IP for this network, we'd use it as source-ip"
									}
								},
								{
									"name": "source_ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "use `network`or `source_ip`"
									}
								}
							],
							"description": "Junos Radius config"
						}
					},
					{
						"name": "remote_syslog",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "archive",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "files",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "size",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										]
									}
								},
								{
									"name": "console",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "contents",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "facility",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "severity",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																			}
																		}
																	]
																}
															}
														]
													}
												}
											}
										]
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "files",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "archive",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "files",
																"int64": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "size",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															}
														]
													}
												},
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "file",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "network",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
									}
								},
								{
									"name": "send_to_all_servers",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										}
									}
								},
								{
									"name": "servers",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "explicit_priority",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "facility",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "host",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 514
														}
													}
												},
												{
													"name": "protocol",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "udp"
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"udp\",\n\"tcp\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "routing_instance",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "severity",
													"string": {
														"computed_optional_required": "computed_optional",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "source_address",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if source_address is configured, will use the vlan firstly otherwise use source_ip"
													}
												},
												{
													"name": "structured_data",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "tag",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								},
								{
									"name": "time_format",
									"string": {
										"computed_optional_required": "computed_optional",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"millisecond\",\n\"year\",\n\"year millisecond\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "users",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "contents",
													"list_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "facility",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"authorization\",\n\"conflict-log\",\n\"change-log\",\n\"config\",\n\"daemon\",\n\"dfc\",\n\"kernel\",\n\"interactive-commands\",\n\"ftp\",\n\"firewall\",\n\"external\",\n\"pfe\",\n\"ntp\",\n\"security\",\n\"user\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "severity",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"any\",\n\"alert\",\n\"emergency\",\n\"critical\",\n\"warning\",\n\"info\",\n\"notice\",\n\"error\",\n)"
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												},
												{
													"name": "match",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "user",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									}
								}
							]
						}
					},
					{
						"name": "switch_matching",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enable",
									"bool": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "rules",
									"list_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "additional_config_cmds",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "additional CLI commands to append to the generated Junos config\n\n**Note**: no check is done"
													}
												},
												{
													"name": "match_role",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "role to match"
													}
												},
												{
													"name": "name",
													"string": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"auto\",\n\"10m\",\n\"100m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Propery key is the interface name or interface range"
													}
												},
												{
													"name": "port_mirroring",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "input_networks_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_egress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "input_port_ids_ingress",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "at least one of the `ingress_port_ids`, `egress_port_ids` or `ingress_networks ` should be specified"
																	}
																},
																{
																	"name": "output_network",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "output_port_id",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "exaclty on of the `output_port_id` or `output_network` should be provided"
																	}
																}
															]
														},
														"description": "Property key is the port mirroring instance name\nport_mirroring can be added under device/site settings. It takes interface and ports as input for ingress, interface as input for egress and can take interface and port as output."
													}
												}
											]
										},
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
														}
													],
													"schema_definition": "listvalidator.UniqueValues()"
												}
											}
										]
									}
								}
							],
							"description": "Switch template"
						}
					},
					{
						"name": "switch_mgmt",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config_revert",
									"int64": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": 10
										}
									}
								},
								{
									"name": "protect_re",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "allowed_services",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "optionally, services we'll allow"
												}
											},
											{
												"name": "custom",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "port_range",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "0"
																	},
																	"description": "matched dst port, \"0\" means any"
																}
															},
															{
																"name": "protocol",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": "any"
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																					}
																				],
																				"schema_definition": "stringvalidator.OneOf(\n\"tcp\",\n\"udp\",\n\"icmp\",\n\"any\",\n)"
																			}
																		}
																	]
																}
															},
															{
																"name": "subnet",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "when enabled, all traffic that is not essential to our operation will be dropped\ne.g. ntp / dns / traffic to mist will be allowed by default\n     if dhcpd is enabled, we'll make sure it works"
												}
											},
											{
												"name": "trusted_hosts",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													},
													"description": "host/subnets we'll allow traffic to/from"
												}
											}
										],
										"description": "restrict inbound-traffic to host\nwhen enabled, all traffic that is not essential to our operation will be dropped \ne.g. ntp / dns / traffic to mist will be allowed by default, if dhcpd is enabled, we'll make sure it works"
									}
								},
								{
									"name": "root_password",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								},
								{
									"name": "tacacs",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "acct_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											},
											{
												"name": "default_role",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "none"
													},
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"admin\",\n\"none\",\n\"read\",\n\"helpdesk\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "enabled",
												"bool": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "network",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "which network the TACACS server resides"
												}
											},
											{
												"name": "tacplus_servers",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "host",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "port",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "secret",
																"string": {
																	"computed_optional_required": "computed_optional"
																}
															},
															{
																"name": "timeout",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": 10
																	}
																}
															}
														]
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Next-hop address"
														}
													}
												]
											},
											"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}