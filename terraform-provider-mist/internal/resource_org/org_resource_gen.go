// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_org

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func OrgResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"alarmtemplate_id": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"allow_mist": schema.BoolAttribute{
				Optional: true,
			},
			"id": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"msp_id": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"msp_logo_url": schema.StringAttribute{
				Optional:            true,
				Description:         "logo uploaded by the MSP with advanced tier, only present if provided",
				MarkdownDescription: "logo uploaded by the MSP with advanced tier, only present if provided",
			},
			"msp_name": schema.StringAttribute{
				Optional:            true,
				Description:         "name of the msp the org belongs to",
				MarkdownDescription: "name of the msp the org belongs to",
			},
			"name": schema.StringAttribute{
				Required: true,
			},
			"orggroup_ids": schema.ListAttribute{
				ElementType: types.StringType,
				Optional:    true,
			},
			"session_expiry": schema.Int64Attribute{
				Optional: true,
			},
		},
	}
}

type OrgModel struct {
	AlarmtemplateId types.String `tfsdk:"alarmtemplate_id"`
	AllowMist       types.Bool   `tfsdk:"allow_mist"`
	Id              types.String `tfsdk:"id"`
	MspId           types.String `tfsdk:"msp_id"`
	MspLogoUrl      types.String `tfsdk:"msp_logo_url"`
	MspName         types.String `tfsdk:"msp_name"`
	Name            types.String `tfsdk:"name"`
	OrggroupIds     types.List   `tfsdk:"orggroup_ids"`
	SessionExpiry   types.Int64  `tfsdk:"session_expiry"`
}
