/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayRoutingPolicyItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayRoutingPolicyItem{}

// GatewayRoutingPolicyItem struct for GatewayRoutingPolicyItem
type GatewayRoutingPolicyItem struct {
	Action *GatewayRoutingPolicyItemAction `json:"action,omitempty"`
	Matching *GatewayRoutingPolicyItemMatching `json:"matching,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayRoutingPolicyItem GatewayRoutingPolicyItem

// NewGatewayRoutingPolicyItem instantiates a new GatewayRoutingPolicyItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayRoutingPolicyItem() *GatewayRoutingPolicyItem {
	this := GatewayRoutingPolicyItem{}
	return &this
}

// NewGatewayRoutingPolicyItemWithDefaults instantiates a new GatewayRoutingPolicyItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayRoutingPolicyItemWithDefaults() *GatewayRoutingPolicyItem {
	this := GatewayRoutingPolicyItem{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItem) GetAction() GatewayRoutingPolicyItemAction {
	if o == nil || IsNil(o.Action) {
		var ret GatewayRoutingPolicyItemAction
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItem) GetActionOk() (*GatewayRoutingPolicyItemAction, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItem) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given GatewayRoutingPolicyItemAction and assigns it to the Action field.
func (o *GatewayRoutingPolicyItem) SetAction(v GatewayRoutingPolicyItemAction) {
	o.Action = &v
}

// GetMatching returns the Matching field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItem) GetMatching() GatewayRoutingPolicyItemMatching {
	if o == nil || IsNil(o.Matching) {
		var ret GatewayRoutingPolicyItemMatching
		return ret
	}
	return *o.Matching
}

// GetMatchingOk returns a tuple with the Matching field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItem) GetMatchingOk() (*GatewayRoutingPolicyItemMatching, bool) {
	if o == nil || IsNil(o.Matching) {
		return nil, false
	}
	return o.Matching, true
}

// HasMatching returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItem) HasMatching() bool {
	if o != nil && !IsNil(o.Matching) {
		return true
	}

	return false
}

// SetMatching gets a reference to the given GatewayRoutingPolicyItemMatching and assigns it to the Matching field.
func (o *GatewayRoutingPolicyItem) SetMatching(v GatewayRoutingPolicyItemMatching) {
	o.Matching = &v
}

func (o GatewayRoutingPolicyItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayRoutingPolicyItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.Matching) {
		toSerialize["matching"] = o.Matching
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayRoutingPolicyItem) UnmarshalJSON(data []byte) (err error) {
	varGatewayRoutingPolicyItem := _GatewayRoutingPolicyItem{}

	err = json.Unmarshal(data, &varGatewayRoutingPolicyItem)

	if err != nil {
		return err
	}

	*o = GatewayRoutingPolicyItem(varGatewayRoutingPolicyItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "action")
		delete(additionalProperties, "matching")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayRoutingPolicyItem struct {
	value *GatewayRoutingPolicyItem
	isSet bool
}

func (v NullableGatewayRoutingPolicyItem) Get() *GatewayRoutingPolicyItem {
	return v.value
}

func (v *NullableGatewayRoutingPolicyItem) Set(val *GatewayRoutingPolicyItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayRoutingPolicyItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayRoutingPolicyItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayRoutingPolicyItem(val *GatewayRoutingPolicyItem) *NullableGatewayRoutingPolicyItem {
	return &NullableGatewayRoutingPolicyItem{value: val, isSet: true}
}

func (v NullableGatewayRoutingPolicyItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayRoutingPolicyItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


