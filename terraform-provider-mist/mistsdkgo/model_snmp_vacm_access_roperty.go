/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SnmpVacmAccessRoperty type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpVacmAccessRoperty{}

// SnmpVacmAccessRoperty struct for SnmpVacmAccessRoperty
type SnmpVacmAccessRoperty struct {
	GroupName *string `json:"group_name,omitempty"`
	PrefixList []SnmpVacmAccessRopertyPrefixListInner `json:"prefix_list,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnmpVacmAccessRoperty SnmpVacmAccessRoperty

// NewSnmpVacmAccessRoperty instantiates a new SnmpVacmAccessRoperty object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpVacmAccessRoperty() *SnmpVacmAccessRoperty {
	this := SnmpVacmAccessRoperty{}
	return &this
}

// NewSnmpVacmAccessRopertyWithDefaults instantiates a new SnmpVacmAccessRoperty object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpVacmAccessRopertyWithDefaults() *SnmpVacmAccessRoperty {
	this := SnmpVacmAccessRoperty{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *SnmpVacmAccessRoperty) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpVacmAccessRoperty) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *SnmpVacmAccessRoperty) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *SnmpVacmAccessRoperty) SetGroupName(v string) {
	o.GroupName = &v
}

// GetPrefixList returns the PrefixList field value if set, zero value otherwise.
func (o *SnmpVacmAccessRoperty) GetPrefixList() []SnmpVacmAccessRopertyPrefixListInner {
	if o == nil || IsNil(o.PrefixList) {
		var ret []SnmpVacmAccessRopertyPrefixListInner
		return ret
	}
	return o.PrefixList
}

// GetPrefixListOk returns a tuple with the PrefixList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpVacmAccessRoperty) GetPrefixListOk() ([]SnmpVacmAccessRopertyPrefixListInner, bool) {
	if o == nil || IsNil(o.PrefixList) {
		return nil, false
	}
	return o.PrefixList, true
}

// HasPrefixList returns a boolean if a field has been set.
func (o *SnmpVacmAccessRoperty) HasPrefixList() bool {
	if o != nil && !IsNil(o.PrefixList) {
		return true
	}

	return false
}

// SetPrefixList gets a reference to the given []SnmpVacmAccessRopertyPrefixListInner and assigns it to the PrefixList field.
func (o *SnmpVacmAccessRoperty) SetPrefixList(v []SnmpVacmAccessRopertyPrefixListInner) {
	o.PrefixList = v
}

func (o SnmpVacmAccessRoperty) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpVacmAccessRoperty) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GroupName) {
		toSerialize["group_name"] = o.GroupName
	}
	if !IsNil(o.PrefixList) {
		toSerialize["prefix_list"] = o.PrefixList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnmpVacmAccessRoperty) UnmarshalJSON(data []byte) (err error) {
	varSnmpVacmAccessRoperty := _SnmpVacmAccessRoperty{}

	err = json.Unmarshal(data, &varSnmpVacmAccessRoperty)

	if err != nil {
		return err
	}

	*o = SnmpVacmAccessRoperty(varSnmpVacmAccessRoperty)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group_name")
		delete(additionalProperties, "prefix_list")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnmpVacmAccessRoperty struct {
	value *SnmpVacmAccessRoperty
	isSet bool
}

func (v NullableSnmpVacmAccessRoperty) Get() *SnmpVacmAccessRoperty {
	return v.value
}

func (v *NullableSnmpVacmAccessRoperty) Set(val *SnmpVacmAccessRoperty) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpVacmAccessRoperty) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpVacmAccessRoperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpVacmAccessRoperty(val *SnmpVacmAccessRoperty) *NullableSnmpVacmAccessRoperty {
	return &NullableSnmpVacmAccessRoperty{value: val, isSet: true}
}

func (v NullableSnmpVacmAccessRoperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpVacmAccessRoperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


