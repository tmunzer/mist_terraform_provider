/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SnmpVacmSecurityToGroupContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnmpVacmSecurityToGroupContent{}

// SnmpVacmSecurityToGroupContent struct for SnmpVacmSecurityToGroupContent
type SnmpVacmSecurityToGroupContent struct {
	// refer to group_name under access
	Group *string `json:"group,omitempty"`
	SecurityName *string `json:"security_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SnmpVacmSecurityToGroupContent SnmpVacmSecurityToGroupContent

// NewSnmpVacmSecurityToGroupContent instantiates a new SnmpVacmSecurityToGroupContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnmpVacmSecurityToGroupContent() *SnmpVacmSecurityToGroupContent {
	this := SnmpVacmSecurityToGroupContent{}
	return &this
}

// NewSnmpVacmSecurityToGroupContentWithDefaults instantiates a new SnmpVacmSecurityToGroupContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnmpVacmSecurityToGroupContentWithDefaults() *SnmpVacmSecurityToGroupContent {
	this := SnmpVacmSecurityToGroupContent{}
	return &this
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *SnmpVacmSecurityToGroupContent) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpVacmSecurityToGroupContent) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *SnmpVacmSecurityToGroupContent) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *SnmpVacmSecurityToGroupContent) SetGroup(v string) {
	o.Group = &v
}

// GetSecurityName returns the SecurityName field value if set, zero value otherwise.
func (o *SnmpVacmSecurityToGroupContent) GetSecurityName() string {
	if o == nil || IsNil(o.SecurityName) {
		var ret string
		return ret
	}
	return *o.SecurityName
}

// GetSecurityNameOk returns a tuple with the SecurityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnmpVacmSecurityToGroupContent) GetSecurityNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityName) {
		return nil, false
	}
	return o.SecurityName, true
}

// HasSecurityName returns a boolean if a field has been set.
func (o *SnmpVacmSecurityToGroupContent) HasSecurityName() bool {
	if o != nil && !IsNil(o.SecurityName) {
		return true
	}

	return false
}

// SetSecurityName gets a reference to the given string and assigns it to the SecurityName field.
func (o *SnmpVacmSecurityToGroupContent) SetSecurityName(v string) {
	o.SecurityName = &v
}

func (o SnmpVacmSecurityToGroupContent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnmpVacmSecurityToGroupContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.SecurityName) {
		toSerialize["security_name"] = o.SecurityName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SnmpVacmSecurityToGroupContent) UnmarshalJSON(data []byte) (err error) {
	varSnmpVacmSecurityToGroupContent := _SnmpVacmSecurityToGroupContent{}

	err = json.Unmarshal(data, &varSnmpVacmSecurityToGroupContent)

	if err != nil {
		return err
	}

	*o = SnmpVacmSecurityToGroupContent(varSnmpVacmSecurityToGroupContent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "group")
		delete(additionalProperties, "security_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSnmpVacmSecurityToGroupContent struct {
	value *SnmpVacmSecurityToGroupContent
	isSet bool
}

func (v NullableSnmpVacmSecurityToGroupContent) Get() *SnmpVacmSecurityToGroupContent {
	return v.value
}

func (v *NullableSnmpVacmSecurityToGroupContent) Set(val *SnmpVacmSecurityToGroupContent) {
	v.value = val
	v.isSet = true
}

func (v NullableSnmpVacmSecurityToGroupContent) IsSet() bool {
	return v.isSet
}

func (v *NullableSnmpVacmSecurityToGroupContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnmpVacmSecurityToGroupContent(val *SnmpVacmSecurityToGroupContent) *NullableSnmpVacmSecurityToGroupContent {
	return &NullableSnmpVacmSecurityToGroupContent{value: val, isSet: true}
}

func (v NullableSnmpVacmSecurityToGroupContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnmpVacmSecurityToGroupContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


