/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayTemplateTunnelProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayTemplateTunnelProvider{}

// GatewayTemplateTunnelProvider struct for GatewayTemplateTunnelProvider
type GatewayTemplateTunnelProvider struct {
	Jse *GatewayTemplateTunnelProviderJse `json:"jse,omitempty"`
	Zscaler *GatewayTemplateTunnelProviderZscaler `json:"zscaler,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayTemplateTunnelProvider GatewayTemplateTunnelProvider

// NewGatewayTemplateTunnelProvider instantiates a new GatewayTemplateTunnelProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayTemplateTunnelProvider() *GatewayTemplateTunnelProvider {
	this := GatewayTemplateTunnelProvider{}
	return &this
}

// NewGatewayTemplateTunnelProviderWithDefaults instantiates a new GatewayTemplateTunnelProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayTemplateTunnelProviderWithDefaults() *GatewayTemplateTunnelProvider {
	this := GatewayTemplateTunnelProvider{}
	return &this
}

// GetJse returns the Jse field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProvider) GetJse() GatewayTemplateTunnelProviderJse {
	if o == nil || IsNil(o.Jse) {
		var ret GatewayTemplateTunnelProviderJse
		return ret
	}
	return *o.Jse
}

// GetJseOk returns a tuple with the Jse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProvider) GetJseOk() (*GatewayTemplateTunnelProviderJse, bool) {
	if o == nil || IsNil(o.Jse) {
		return nil, false
	}
	return o.Jse, true
}

// HasJse returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProvider) HasJse() bool {
	if o != nil && !IsNil(o.Jse) {
		return true
	}

	return false
}

// SetJse gets a reference to the given GatewayTemplateTunnelProviderJse and assigns it to the Jse field.
func (o *GatewayTemplateTunnelProvider) SetJse(v GatewayTemplateTunnelProviderJse) {
	o.Jse = &v
}

// GetZscaler returns the Zscaler field value if set, zero value otherwise.
func (o *GatewayTemplateTunnelProvider) GetZscaler() GatewayTemplateTunnelProviderZscaler {
	if o == nil || IsNil(o.Zscaler) {
		var ret GatewayTemplateTunnelProviderZscaler
		return ret
	}
	return *o.Zscaler
}

// GetZscalerOk returns a tuple with the Zscaler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayTemplateTunnelProvider) GetZscalerOk() (*GatewayTemplateTunnelProviderZscaler, bool) {
	if o == nil || IsNil(o.Zscaler) {
		return nil, false
	}
	return o.Zscaler, true
}

// HasZscaler returns a boolean if a field has been set.
func (o *GatewayTemplateTunnelProvider) HasZscaler() bool {
	if o != nil && !IsNil(o.Zscaler) {
		return true
	}

	return false
}

// SetZscaler gets a reference to the given GatewayTemplateTunnelProviderZscaler and assigns it to the Zscaler field.
func (o *GatewayTemplateTunnelProvider) SetZscaler(v GatewayTemplateTunnelProviderZscaler) {
	o.Zscaler = &v
}

func (o GatewayTemplateTunnelProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayTemplateTunnelProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Jse) {
		toSerialize["jse"] = o.Jse
	}
	if !IsNil(o.Zscaler) {
		toSerialize["zscaler"] = o.Zscaler
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayTemplateTunnelProvider) UnmarshalJSON(data []byte) (err error) {
	varGatewayTemplateTunnelProvider := _GatewayTemplateTunnelProvider{}

	err = json.Unmarshal(data, &varGatewayTemplateTunnelProvider)

	if err != nil {
		return err
	}

	*o = GatewayTemplateTunnelProvider(varGatewayTemplateTunnelProvider)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "jse")
		delete(additionalProperties, "zscaler")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayTemplateTunnelProvider struct {
	value *GatewayTemplateTunnelProvider
	isSet bool
}

func (v NullableGatewayTemplateTunnelProvider) Get() *GatewayTemplateTunnelProvider {
	return v.value
}

func (v *NullableGatewayTemplateTunnelProvider) Set(val *GatewayTemplateTunnelProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplateTunnelProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplateTunnelProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplateTunnelProvider(val *GatewayTemplateTunnelProvider) *NullableGatewayTemplateTunnelProvider {
	return &NullableGatewayTemplateTunnelProvider{value: val, isSet: true}
}

func (v NullableGatewayTemplateTunnelProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplateTunnelProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


