/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// GatewayTemplateTunnelDhGroup Only if: * `provider`== `custom-ipsec` Values: * 1  * 2 (1024-bit)  * 5 * 14 (default, 2048-bit)  * 15 (3072-bit)  * 16 (4096-bit) * 19 (256-bit ECP) * 20 (384-bit ECP) * 21 (521-bit ECP)  * 24 (2048-bit ECP)
type GatewayTemplateTunnelDhGroup string

// List of gateway_template_tunnel_dh_group
const (
	GATEWAYTEMPLATETUNNELDHGROUP__1 GatewayTemplateTunnelDhGroup = "1"
	GATEWAYTEMPLATETUNNELDHGROUP__2 GatewayTemplateTunnelDhGroup = "2"
	GATEWAYTEMPLATETUNNELDHGROUP__5 GatewayTemplateTunnelDhGroup = "5"
	GATEWAYTEMPLATETUNNELDHGROUP__14 GatewayTemplateTunnelDhGroup = "14"
	GATEWAYTEMPLATETUNNELDHGROUP__15 GatewayTemplateTunnelDhGroup = "15"
	GATEWAYTEMPLATETUNNELDHGROUP__16 GatewayTemplateTunnelDhGroup = "16"
	GATEWAYTEMPLATETUNNELDHGROUP__19 GatewayTemplateTunnelDhGroup = "19"
	GATEWAYTEMPLATETUNNELDHGROUP__20 GatewayTemplateTunnelDhGroup = "20"
	GATEWAYTEMPLATETUNNELDHGROUP__21 GatewayTemplateTunnelDhGroup = "21"
	GATEWAYTEMPLATETUNNELDHGROUP__24 GatewayTemplateTunnelDhGroup = "24"
)

// All allowed values of GatewayTemplateTunnelDhGroup enum
var AllowedGatewayTemplateTunnelDhGroupEnumValues = []GatewayTemplateTunnelDhGroup{
	"1",
	"2",
	"5",
	"14",
	"15",
	"16",
	"19",
	"20",
	"21",
	"24",
}

func (v *GatewayTemplateTunnelDhGroup) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GatewayTemplateTunnelDhGroup(value)
	for _, existing := range AllowedGatewayTemplateTunnelDhGroupEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GatewayTemplateTunnelDhGroup", value)
}

// NewGatewayTemplateTunnelDhGroupFromValue returns a pointer to a valid GatewayTemplateTunnelDhGroup
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGatewayTemplateTunnelDhGroupFromValue(v string) (*GatewayTemplateTunnelDhGroup, error) {
	ev := GatewayTemplateTunnelDhGroup(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GatewayTemplateTunnelDhGroup: valid values are %v", v, AllowedGatewayTemplateTunnelDhGroupEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GatewayTemplateTunnelDhGroup) IsValid() bool {
	for _, existing := range AllowedGatewayTemplateTunnelDhGroupEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to gateway_template_tunnel_dh_group value
func (v GatewayTemplateTunnelDhGroup) Ptr() *GatewayTemplateTunnelDhGroup {
	return &v
}

type NullableGatewayTemplateTunnelDhGroup struct {
	value *GatewayTemplateTunnelDhGroup
	isSet bool
}

func (v NullableGatewayTemplateTunnelDhGroup) Get() *GatewayTemplateTunnelDhGroup {
	return v.value
}

func (v *NullableGatewayTemplateTunnelDhGroup) Set(val *GatewayTemplateTunnelDhGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayTemplateTunnelDhGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayTemplateTunnelDhGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayTemplateTunnelDhGroup(val *GatewayTemplateTunnelDhGroup) *NullableGatewayTemplateTunnelDhGroup {
	return &NullableGatewayTemplateTunnelDhGroup{value: val, isSet: true}
}

func (v NullableGatewayTemplateTunnelDhGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayTemplateTunnelDhGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

