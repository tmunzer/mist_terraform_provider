/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayPortConfigWanSourceNat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayPortConfigWanSourceNat{}

// GatewayPortConfigWanSourceNat optional, by default, source-NAT is performed on all WAN Ports using the interface-ip
type GatewayPortConfigWanSourceNat struct {
	// or to disable the source-nat
	Disabled *bool `json:"disabled,omitempty"`
	// if alternative nat_pool is desired
	NatPool *string `json:"nat_pool,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayPortConfigWanSourceNat GatewayPortConfigWanSourceNat

// NewGatewayPortConfigWanSourceNat instantiates a new GatewayPortConfigWanSourceNat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayPortConfigWanSourceNat() *GatewayPortConfigWanSourceNat {
	this := GatewayPortConfigWanSourceNat{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// NewGatewayPortConfigWanSourceNatWithDefaults instantiates a new GatewayPortConfigWanSourceNat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayPortConfigWanSourceNatWithDefaults() *GatewayPortConfigWanSourceNat {
	this := GatewayPortConfigWanSourceNat{}
	var disabled bool = false
	this.Disabled = &disabled
	return &this
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GatewayPortConfigWanSourceNat) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfigWanSourceNat) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GatewayPortConfigWanSourceNat) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GatewayPortConfigWanSourceNat) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetNatPool returns the NatPool field value if set, zero value otherwise.
func (o *GatewayPortConfigWanSourceNat) GetNatPool() string {
	if o == nil || IsNil(o.NatPool) {
		var ret string
		return ret
	}
	return *o.NatPool
}

// GetNatPoolOk returns a tuple with the NatPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortConfigWanSourceNat) GetNatPoolOk() (*string, bool) {
	if o == nil || IsNil(o.NatPool) {
		return nil, false
	}
	return o.NatPool, true
}

// HasNatPool returns a boolean if a field has been set.
func (o *GatewayPortConfigWanSourceNat) HasNatPool() bool {
	if o != nil && !IsNil(o.NatPool) {
		return true
	}

	return false
}

// SetNatPool gets a reference to the given string and assigns it to the NatPool field.
func (o *GatewayPortConfigWanSourceNat) SetNatPool(v string) {
	o.NatPool = &v
}

func (o GatewayPortConfigWanSourceNat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayPortConfigWanSourceNat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.NatPool) {
		toSerialize["nat_pool"] = o.NatPool
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayPortConfigWanSourceNat) UnmarshalJSON(data []byte) (err error) {
	varGatewayPortConfigWanSourceNat := _GatewayPortConfigWanSourceNat{}

	err = json.Unmarshal(data, &varGatewayPortConfigWanSourceNat)

	if err != nil {
		return err
	}

	*o = GatewayPortConfigWanSourceNat(varGatewayPortConfigWanSourceNat)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "disabled")
		delete(additionalProperties, "nat_pool")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayPortConfigWanSourceNat struct {
	value *GatewayPortConfigWanSourceNat
	isSet bool
}

func (v NullableGatewayPortConfigWanSourceNat) Get() *GatewayPortConfigWanSourceNat {
	return v.value
}

func (v *NullableGatewayPortConfigWanSourceNat) Set(val *GatewayPortConfigWanSourceNat) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayPortConfigWanSourceNat) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayPortConfigWanSourceNat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayPortConfigWanSourceNat(val *GatewayPortConfigWanSourceNat) *NullableGatewayPortConfigWanSourceNat {
	return &NullableGatewayPortConfigWanSourceNat{value: val, isSet: true}
}

func (v NullableGatewayPortConfigWanSourceNat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayPortConfigWanSourceNat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


