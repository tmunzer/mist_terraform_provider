{
	"provider": {
		"name": "mistapi"
	},
	"resources": [
		{
			"name": "org_evpn_topology",
			"schema": {
				"attributes": [
					{
						"name": "evpn_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auto_loopback_subnet",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "172.16.192.0/24"
										},
										"description": "optional, for dhcp_relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server_id-overrides"
									}
								},
								{
									"name": "auto_loopback_subnet6",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "fd33:ab00:2::/64"
										},
										"description": "optional, for dhcp_relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server_id-overrides"
									}
								},
								{
									"name": "auto_router_id_subnet",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "172.16.254.0/23"
										},
										"description": "optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored"
									}
								},
								{
									"name": "auto_router_id_subnet6",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored"
									}
								},
								{
									"name": "core_as_border",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "optional, for ERB or CLOS, you can either use esilag to upstream routers or to also be the virtual-gateway\nwhen `routed_at` != `core`, whether to do virtual-gateway at core as well"
									}
								},
								{
									"name": "overlay",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "as",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 65000
													},
													"description": "Overlay BGP Local AS Number",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 65535)"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "per_vlan_vga_v4_mac",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, JUNOS uses 00-00-5e-00-01-01 as the virtual-gateway-address's v4_mac\nif enabled, 00-00-5e-00-XX-YY will be used (where XX=vlan_id/256, YY=vlan_id%256)"
									}
								},
								{
									"name": "routed_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "edge"
										},
										"description": "optional, where virtual-gateway should reside. enum: `core`, `distribution`, `edge`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"core\",\n\"distribution\",\n\"edge\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "underlay",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "as_base",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 65001
													},
													"description": "Underlay BGP Base AS Number",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 65535)"
															}
														}
													]
												}
											},
											{
												"name": "routed_id_prefix",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "subnet",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "underlay subnet, by default, `10.255.240.0/20`, or `fd31:5700::/64` for ipv6"
												}
											},
											{
												"name": "use_ipv6",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if v6 is desired for underlay"
												}
											}
										]
									}
								},
								{
									"name": "vs_instances",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "networks",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												}
											]
										},
										"description": "optional, for EX9200 only to seggregate virtual-switches"
									}
								}
							],
							"description": "EVPN Options"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique ID of the object instance in the Mist Organnization"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "pod_names",
						"map": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Property key is the pod number"
						}
					},
					{
						"name": "switches",
						"list_nested": {
							"computed_optional_required": "required",
							"nested_object": {
								"attributes": [
									{
										"name": "config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `auto`, `full`, `half`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"10m\",\n\"100m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n\"10g\",\n\"25g\",\n\"40g\",\n\"100g\",\n\"auto\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Property key is the port name or range (e.g. \"ge-0/0/0-10\")"
													}
												}
											]
										}
									},
									{
										"name": "deviceprofile_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "downlink_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "downlinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "esilaglinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "evpn_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "mac",
										"string": {
											"computed_optional_required": "required",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "model",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "pod",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1
											},
											"description": "optionally, for distribution / access / esilag-access, they can be placed into different pods. e.g. \n  * for CLOS, to group dist / access switches into pods\n  * for ERB/CRB, to group dist / esilag-access into pods",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "pods",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"int64": {}
											},
											"description": "by default, core switches are assumed to be connecting all pods. \nif you want to limit the pods, you can specify pods."
										}
									},
									{
										"name": "role",
										"string": {
											"computed_optional_required": "required",
											"description": "use `role`==`none` to remove a switch from the topology. enum: `access`, `collapsed-core`, `core`, `distribution`, `esilag-access`, `none`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"collapsed-core\",\n\"core\",\n\"distribution\",\n\"esilag-access\",\n\"none\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "router_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "site_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "suggested_downlinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "suggested_esilaglinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "suggested_uplinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "uplinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "site_evpn_topology",
			"schema": {
				"attributes": [
					{
						"name": "evpn_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "auto_loopback_subnet",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "172.16.192.0/24"
										},
										"description": "optional, for dhcp_relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server_id-overrides"
									}
								},
								{
									"name": "auto_loopback_subnet6",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "fd33:ab00:2::/64"
										},
										"description": "optional, for dhcp_relay, unique loopback IPs are required for ERB or IPClos where we can set option-82 server_id-overrides"
									}
								},
								{
									"name": "auto_router_id_subnet",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "172.16.254.0/23"
										},
										"description": "optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored"
									}
								},
								{
									"name": "auto_router_id_subnet6",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "optional, this generates router_id automatically, if specified, `router_id_prefix` is ignored"
									}
								},
								{
									"name": "core_as_border",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "optional, for ERB or CLOS, you can either use esilag to upstream routers or to also be the virtual-gateway\nwhen `routed_at` != `core`, whether to do virtual-gateway at core as well"
									}
								},
								{
									"name": "overlay",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "as",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 65000
													},
													"description": "Overlay BGP Local AS Number",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 65535)"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"name": "per_vlan_vga_v4_mac",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "by default, JUNOS uses 00-00-5e-00-01-01 as the virtual-gateway-address's v4_mac\nif enabled, 00-00-5e-00-XX-YY will be used (where XX=vlan_id/256, YY=vlan_id%256)"
									}
								},
								{
									"name": "routed_at",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "edge"
										},
										"description": "optional, where virtual-gateway should reside. enum: `core`, `distribution`, `edge`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"core\",\n\"distribution\",\n\"edge\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "underlay",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "as_base",
												"int64": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": 65001
													},
													"description": "Underlay BGP Base AS Number",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 65535)"
															}
														}
													]
												}
											},
											{
												"name": "routed_id_prefix",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "subnet",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "underlay subnet, by default, `10.255.240.0/20`, or `fd31:5700::/64` for ipv6"
												}
											},
											{
												"name": "use_ipv6",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if v6 is desired for underlay"
												}
											}
										]
									}
								},
								{
									"name": "vs_instances",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "networks",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												}
											]
										},
										"description": "optional, for EX9200 only to seggregate virtual-switches"
									}
								}
							],
							"description": "EVPN Options"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique ID of the object instance in the Mist Organnization"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "pod_names",
						"map": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Property key is the pod number"
						}
					},
					{
						"name": "switches",
						"list_nested": {
							"computed_optional_required": "required",
							"nested_object": {
								"attributes": [
									{
										"name": "config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "port_config",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ae_disable_lacp",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "To disable LACP support for the AE interface"
																	}
																},
																{
																	"name": "ae_idx",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Users could force to use the designated AE name"
																	}
																},
																{
																	"name": "ae_lacp_slow",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": true
																		},
																		"description": "to use fast timeout"
																	}
																},
																{
																	"name": "aggregated",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "critical",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "if want to generate port up/down alarm"
																	}
																},
																{
																	"name": "description",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "disable_autoneg",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		},
																		"description": "if `speed` and `duplex` are specified, whether to disable autonegotiation"
																	}
																},
																{
																	"name": "duplex",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `auto`, `full`, `half`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "dynamic_usage",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "Enable dynamic usage for this port. Set to `dynamic` to enable."
																	}
																},
																{
																	"name": "esilag",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "mtu",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": 1514
																		},
																		"description": "media maximum transmission unit (MTU) is the largest data unit that can be forwarded without fragmentation"
																	}
																},
																{
																	"name": "no_local_overwrite",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"description": "prevent helpdesk to override the port config"
																	}
																},
																{
																	"name": "poe_disabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "speed",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": "auto"
																		},
																		"description": "enum: `100m`, `10m`, `1g`, `2.5g`, `5g`, `10g`, `25g`, `40g`, `100g`,`auto`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"10m\",\n\"100m\",\n\"1g\",\n\"2.5g\",\n\"5g\",\n\"10g\",\n\"25g\",\n\"40g\",\n\"100g\",\n\"auto\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "usage",
																	"string": {
																		"computed_optional_required": "required",
																		"description": "port usage name. \n\nIf EVPN is used, use `evpn_uplink`or `evpn_downlink`"
																	}
																}
															]
														},
														"description": "Property key is the port name or range (e.g. \"ge-0/0/0-10\")"
													}
												}
											]
										}
									},
									{
										"name": "deviceprofile_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "downlink_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "downlinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "esilaglinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "evpn_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.AtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "mac",
										"string": {
											"computed_optional_required": "required",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "model",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "pod",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 1
											},
											"description": "optionally, for distribution / access / esilag-access, they can be placed into different pods. e.g. \n  * for CLOS, to group dist / access switches into pods\n  * for ERB/CRB, to group dist / esilag-access into pods",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "pods",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"int64": {}
											},
											"description": "by default, core switches are assumed to be connecting all pods. \nif you want to limit the pods, you can specify pods."
										}
									},
									{
										"name": "role",
										"string": {
											"computed_optional_required": "required",
											"description": "use `role`==`none` to remove a switch from the topology. enum: `access`, `collapsed-core`, `core`, `distribution`, `esilag-access`, `none`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"access\",\n\"collapsed-core\",\n\"core\",\n\"distribution\",\n\"esilag-access\",\n\"none\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "router_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "site_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "suggested_downlinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "suggested_esilaglinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "suggested_uplinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									},
									{
										"name": "uplinks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											}
										}
									}
								]
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}