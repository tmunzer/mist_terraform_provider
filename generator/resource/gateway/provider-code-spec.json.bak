{
	"provider": {
		"name": "mistapi"
	},
	"resources": [
		{
			"name": "device_gateway",
			"schema": {
				"attributes": [
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config. **Note**: no check is done"
						}
					},
					{
						"name": "bgp_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auth_key",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "bfd_minimum_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 350
											},
											"description": "when bfd_multiplier is configured alone. Default:\n  * 1000 if `type`==`external`\n  * 350 `type`==`internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255000)"
													}
												}
											]
										}
									},
									{
										"name": "bfd_multiplier",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3
											},
											"description": "when bfd_minimum_interval_is_configured alone",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "disable_bfd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "BFD provides faster path failure detection and is enabled by default"
										}
									},
									{
										"name": "export",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "export_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default export policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "extended_v4_nexthop",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "by default, either inet/net6 unicast depending on neighbor IP family (v4 or v6)\nfor v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this"
										}
									},
									{
										"name": "graceful_restart_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "`0` means disable",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4095)"
													}
												}
											]
										}
									},
									{
										"name": "hold_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 90
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "import",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "import_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default import policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "local_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbor_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbors",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "If true, the BGP session to this neighbor will be administratively disabled/shutdown"
														}
													},
													{
														"name": "export_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "hold_time",
														"int64": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": 90
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 65535)"
																	}
																}
															]
														}
													},
													{
														"name": "import_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "multihop_ttl",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "assuming BGP neighbor is directly connected",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 255)"
																	}
																}
															]
														}
													},
													{
														"name": "neighbor_as",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "if per-neighbor as is desired. Property key is the neighbor address"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "by default, we'll re-advertise all learned BGP routers toward overlay"
										}
									},
									{
										"name": "tunnel_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `type`==`tunnel`"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `external`, `internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"internal\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "lan"
											},
											"description": "network name. enum: `lan`, `tunnel`, `vpn`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vpn_name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "wan_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `via`==`wan`"
										}
									}
								]
							}
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g \"5684dae9ac8b\")"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapsulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n  * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n  * sub option code: 1-255, sub-option code'"
													}
												}
											]
										},
										"description": "Property key is the network name"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "if set to `false`, disable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "idp_profiles",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `critical`, `standard`, `strict`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Unique ID of the object instance in the Mist Organnization"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "alert"
															},
															"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"close\",\n\"drop\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									}
								]
							},
							"description": "Property key is the profile name"
						}
					},
					{
						"name": "image1_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "image2_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "image3_url",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "secondary_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "optional list of secondary IPs in CIDR format"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "dhcp"
											},
											"description": "enum: `dhcp`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "mac",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device MAC address"
						}
					},
					{
						"name": "managed",
						"bool": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "map_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "map where the device belongs to"
						}
					},
					{
						"name": "model",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device Model"
						}
					},
					{
						"name": "msp_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "networks",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disallow_mist_services",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disallow Mist Devices in the network"
										}
									},
									{
										"name": "gateway",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "gateway6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "internal_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									},
									{
										"name": "internet_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "create_simple_service_policy",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "destination_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "port",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be a Port (i.e. \"443\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity"
																	}
																}
															]
														},
														"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "restricted",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
													}
												},
												{
													"name": "static_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. \"{{myvar}}\")"
																	}
																}
															]
														},
														"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
													}
												}
											],
											"description": "whether this network has direct internet access"
										}
									},
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow clients in the network to talk to each other"
										}
									},
									{
										"name": "multicast",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disable_igmp",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "if the network will only be the soruce of the multicast traffic, IGMP can be disabled"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "groups",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "rp_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "RP (rendezvous point) IP Address"
																	}
																}
															]
														},
														"description": "Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example \"225.1.0.3/32\")"
													}
												}
											],
											"description": "whether to enable multicast support (only PIM-sparse mode is supported)"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "routed_for_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "tenants",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "addresses",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															}
														}
													}
												]
											},
											"description": "Property key must be the user/tenant name (i.e. \"printer-1\") or a Variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_access",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "advertised_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
														}
													},
													{
														"name": "allow_ping",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether to allow ping from vpn into this routed network"
														}
													},
													{
														"name": "destination_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "port",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
														}
													},
													{
														"name": "nat_pool",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
														}
													},
													{
														"name": "no_readvertise_to_lan_bgp",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "no_readvertise_to_lan_ospf",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side OSPF peers"
														}
													},
													{
														"name": "no_readvertise_to_overlay",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "other_vrfs",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
														}
													},
													{
														"name": "routed",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether this network is routable"
														}
													},
													{
														"name": "source_nat",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "external_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															],
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
														}
													},
													{
														"name": "static_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
														}
													},
													{
														"name": "summarized_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "summarized_subnet_to_lan_bgp",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "summarized_subnet_to_lan_ospf",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side OSPF peers"
														}
													}
												]
											},
											"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
										}
									}
								]
							}
						}
					},
					{
						"name": "notes",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
											}
										],
										"schema_definition": "listvalidator.UniqueValues()"
									}
								}
							]
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "node1",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "gateway",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "if `type`==`static`"
												}
											},
											{
												"name": "ip",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "netmask",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "used only if `subnet` is not specified in `networks`"
												}
											},
											{
												"name": "type",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "dhcp"
													},
													"description": "enum: `dhcp`, `static`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "use_mgmt_vrf",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
												}
											},
											{
												"name": "use_mgmt_vrf_for_host_out",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
												}
											},
											{
												"name": "vlan_id",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for HA Cluster, node1 can have different IP Config"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_mgmt_vrf",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
									}
								},
								{
									"name": "use_mgmt_vrf_for_host_out",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
									}
								},
								{
									"name": "vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "out-of-band (vme/em0/fxp0) IP config"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preferences",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "paths",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "cost",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "For SSR Only. `true`, if this specific path is undesired"
														}
													},
													{
														"name": "gateway_ip",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`local`, if a different gateway is desired"
														}
													},
													{
														"name": "internet_access",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`vpn`, if this vpn path can be used for internet"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "required when \n  * `type`==`vpn`: the name of the VPN Path to use \n  * `type`==`wan`: the name of the WAN interface to use'"
														}
													},
													{
														"name": "networks",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "required when `type`==`local`"
														}
													},
													{
														"name": "target_ips",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`, if destination IP is to be replaced"
														}
													},
													{
														"name": "type",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `local`, `tunnel`, `vpn`, `wan`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "optional if `type`==`vpn`"
														}
													}
												]
											}
										}
									},
									{
										"name": "strategy",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "ordered"
											},
											"description": "enum: `ecmp`, `ordered`, `weighted`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ecmp\",\n\"ordered\",\n\"weighted\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the path name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ae_disable_lacp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `aggregated`==`true`. To disable LCP support for the AE interface"
										}
									},
									{
										"name": "ae_idx",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)"
										}
									},
									{
										"name": "ae_lacp_force_up",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only"
										}
									},
									{
										"name": "aggregated",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "critical",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if want to generate port up/down alarm, set it to true"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Interface Description. Can be a variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "port admin up (true) / down (false)"
										}
									},
									{
										"name": "dsl_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "vdsl"
											},
											"description": "if `wan_type`==`dsl`. enum: `adsl`, `vdsl`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"adsl\",\n\"vdsl\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dsl_vci",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 35
											},
											"description": "if `wan_type`==`dsl`\n16 bit int"
										}
									},
									{
										"name": "dsl_vpi",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "if `wan_type`==`dsl`\n8 bit int"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip_config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "dns",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. \"192.168.1.1\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "ip",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Interface IP Address (i.e. \"192.168.1.8\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "netmask",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. \"/24\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "network",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "optional, the network to be used for mgmt"
													}
												},
												{
													"name": "poser_password",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "pppoe_auth",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "if `type`==`pppoe`. enum: `chap`, `none`, `pap`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "pppoe_username",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "dhcp"
														},
														"description": "enum: `dhcp`, `pppoe`, `static`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"pppoe\",\n\"static\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Junos IP Config"
										}
									},
									{
										"name": "lte_apn",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "if `wan_type`==`lte`. enum: `chap`, `none`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "lte_backup",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "lte_password",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_username",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "name that we'll use to derive config"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `usage`==`lan`, name of the [networks]($h/Orgs%20Networks/_overview) to attach to the interface"
										}
									},
									{
										"name": "outer_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "for Q-in-Q"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only for SRX and if `usage`==`lan`, the Untagged VLAN Network"
										}
									},
									{
										"name": "preserve_dscp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "whether to preserve dscp when sending traffic over VPN (SSR-only)"
										}
									},
									{
										"name": "redundant",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_node",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_nodes",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "SSR only - supporting vlan-based redundancy (matching the size of `networks`)"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											}
										}
									},
									{
										"name": "ssr_no_virtual_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when SSR is running as VM, this is required on certain hosting platforms"
										}
									},
									{
										"name": "svr_port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "for SSR only"
										}
									},
									{
										"name": "traffic_shaping",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "class_percentages",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "max_tx_kbps",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "Interface Transmit Cap in kbps"
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name. enum: `ha_control`, `ha_data`, `lan`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ha_control\",\n\"ha_data\",\n\"lan\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_paths",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "broadband"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `broadband`, `lte`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "bfd_use_tunnel_mode",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "Only if the VPN `type`==`hub_spoke`. Whether to use tunnel mode. SSR only"
														}
													},
													{
														"name": "link_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`mesh`"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`hub_spoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)"
														}
													},
													{
														"name": "role",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "spoke"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `hub`, `spoke`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hub\",\n\"spoke\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "traffic_shaping",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "class_percentages",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"int64": {}
																		},
																		"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
																	}
																},
																{
																	"name": "enabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "max_tx_kbps",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Interface Transmit Cap in kbps"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Property key is the VPN name"
										}
									},
									{
										"name": "wan_arp_policer",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "default"
											},
											"description": "Only when `wan_type`==`broadband`. enum: `default`, `max`, `recommended`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"max\",\n\"recommended\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "wan_ext_ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP"
										}
									},
									{
										"name": "wan_extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "Only if `usage`==`wan`. Property Key is the destianation CIDR (e.g \"100.100.100.0/24\")"
										}
									},
									{
										"name": "wan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined"
										}
									},
									{
										"name": "wan_probe_override",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "probe_profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "broadband"
														},
														"description": "enum: `broadband`, `lte`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `usage`==`wan`"
										}
									},
									{
										"name": "wan_source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "or to disable the source-nat"
													}
												},
												{
													"name": "nat_pool",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if alternative nat_pool is desired"
													}
												}
											],
											"description": "Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip"
										}
									},
									{
										"name": "wan_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"dsl\",\n\"lte\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the port name or range (e.g. \"ge-0/0/0-10\")"
						}
					},
					{
						"name": "port_mirroring",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "port_mirror",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "family_type",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "ingress_port_ids",
												"list": {
													"computed_optional_required": "computed_optional",
													"element_type": {
														"string": {}
													}
												}
											},
											{
												"name": "output_port_id",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "rate",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "run_length",
												"int64": {
													"computed_optional_required": "computed_optional",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.AtLeast(0)"
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "auto assigned if not set"
						}
					},
					{
						"name": "routing_policies",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "terms",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "accept",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "add_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "add_target_vrfs",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "for SSR, hub decides how VRF routes are leaked on spoke"
																	}
																},
																{
																	"name": "aggregate",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "route aggregation"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "exclude_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. To exclude certain AS"
																	}
																},
																{
																	"name": "exclude_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "export_communitites",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "local_preference",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "optional, for an import policy, local_preference can be changed"
																	}
																},
																{
																	"name": "prepend_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. By default, the local AS will be prepended, to change it"
																	}
																}
															],
															"description": "when used as import policy"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "takes regular expression"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "network",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																						}
																					],
																					"schema_definition": "listvalidator.UniqueValues()"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "prefix",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
																	}
																},
																{
																	"name": "protocol",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "`direct`, `bgp`, `osp`, ..."
																	}
																},
																{
																	"name": "route_exists",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "route",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "vrf_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"default": {
																						"static": "default"
																					},
																					"description": "name of the vrf instance\nit can also be the name of the VPN or wan if they"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "vpn_neighbor_mac",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)"
																	}
																},
																{
																	"name": "vpn_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)\nordered-"
																	}
																},
																{
																	"name": "vpn_path_sla",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "max_jitter",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_latency",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_loss",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															],
															"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
														}
													}
												]
											},
											"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the routing policy name"
						}
					},
					{
						"name": "serial",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "device Serial"
						}
					},
					{
						"name": "service_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `allow`, `deny`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															}
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "strict"
															},
															"description": "enum: `critical`, `standard`, `strict`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "strict"
														},
														"description": "enum: `Custom`, `strict` (default), `standard` or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "access within the same VRF"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "path_preference",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "servicepolicy_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "used to link servicepolicy defined at org level and overwrite some attributes"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "site_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "tunnel_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auto_provision",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enable",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "latlng",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "lat",
																"float64": {
																	"computed_optional_required": "required"
																}
															},
															{
																"name": "lng",
																"float64": {
																	"computed_optional_required": "required"
																}
															}
														],
														"description": "API override for POP selection"
													}
												},
												{
													"name": "primary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												},
												{
													"name": "provider",
													"string": {
														"computed_optional_required": "required",
														"description": "enum: `jse-ipsec`, `zscaler-ipsec`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"jse-ipsec\",\n\"zscaler-ipsec\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "region",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "API override for POP selection"
													}
												},
												{
													"name": "secondary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"name": "ike_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ike_mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "main"
											},
											"description": "Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aggressive\",\n\"main\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ike_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "Only if `provider`==`custom-ipsec`. enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Only if  `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "local_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "active-standby"
											},
											"description": "Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"active-active\",\n\"active-standby\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `provider`==`custom-ipsec`, networks reachable via this tunnel"
										}
									},
									{
										"name": "primary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "probe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "interval",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "how often to trigger the probe"
													}
												},
												{
													"name": "threshold",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "number of consecutive misses before declaring the tunnel down"
													}
												},
												{
													"name": "timeout",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "time within which to complete the connectivity check"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "icmp"
														},
														"description": "enum: `http`, `icmp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"http\",\n\"icmp\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gre\",\n\"ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "provider",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `customer-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom-ipsec\",\n\"customer-gre\",\n\"jse-ipsec\",\n\"zscaler-gre\",\n\"zscaler-ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "psk",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "secondary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "version",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "2"
											},
											"description": "Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the tunnel name"
						}
					},
					{
						"name": "tunnel_provider_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "jse",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "num_users",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "org_name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "JSE Organization name. The list of available organizations can be retrieved with the [Get Org JSE Info]($e/Orgs%20JSE/getOrgJseInfo) API Call"
												}
											}
										],
										"description": "for jse-ipsec, this allow provisioning of adequate resource on JSE. Make sure adequate licenses are added"
									}
								},
								{
									"name": "zscaler",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "aup_block_internet_until_accepted",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "aup_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
												}
											},
											{
												"name": "aup_force_ssl_inspection",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
												}
											},
											{
												"name": "aup_timeout_in_days",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 180)"
															}
														}
													]
												}
											},
											{
												"name": "auth_required",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Enable this option to enforce user authentication"
												}
											},
											{
												"name": "caution_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
												}
											},
											{
												"name": "dn_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "idle_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(0, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "ofw_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if `true`, enable the firewall control option"
												}
											},
											{
												"name": "sub_locations",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "aup_block_internet_until_accepted",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	}
																}
															},
															{
																"name": "aup_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
																}
															},
															{
																"name": "aup_force_ssl_inspection",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
																}
															},
															{
																"name": "aup_timeout_in_days",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 180)"
																			}
																		}
																	]
																}
															},
															{
																"name": "auth_required",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Enable this option to authenticate users"
																}
															},
															{
																"name": "caution_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
																}
															},
															{
																"name": "dn_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															},
															{
																"name": "idle_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(0, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "[network]($h/Orgs%20Networks/_overview) name"
																}
															},
															{
																"name": "ofw_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "if `true`, enable the firewall control option"
																}
															},
															{
																"name": "surrogate_ip",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
																}
															},
															{
																"name": "surrogate_ip_enforced_for_known_browsers",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
																}
															},
															{
																"name": "surrogate_refresh_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "up_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															}
														]
													},
													"description": "`sub-locations` can be used for specific uses cases to define different configuration based on the user network"
												}
											},
											{
												"name": "surrogate_ip",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
												}
											},
											{
												"name": "surrogate_ip_enforced_for_known_browsers",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
												}
											},
											{
												"name": "surrogate_refresh_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "up_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "xff_forward_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "location uses proxy chaining to forward traffic"
												}
											}
										],
										"description": "for zscaler-ipsec and zscaler-gre"
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"description": "Device Type. enum: `gateway`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gateway\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "vars",
						"map": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "a dictionary of name-\u003evalue, the vars can then be used in Wlans. This can overwrite those from Site Vars"
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "x",
						"float64": {
							"computed_optional_required": "computed_optional",
							"description": "x in pixel"
						}
					},
					{
						"name": "y",
						"float64": {
							"computed_optional_required": "computed_optional",
							"description": "y in pixel"
						}
					},
					{
						"name": "device_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					}
				]
			}
		},
		{
			"name": "org_deviceprofile_gateway",
			"schema": {
				"attributes": [
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config. **Note**: no check is done"
						}
					},
					{
						"name": "bgp_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auth_key",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "bfd_minimum_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 350
											},
											"description": "when bfd_multiplier is configured alone. Default:\n  * 1000 if `type`==`external`\n  * 350 `type`==`internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255000)"
													}
												}
											]
										}
									},
									{
										"name": "bfd_multiplier",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3
											},
											"description": "when bfd_minimum_interval_is_configured alone",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "disable_bfd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "BFD provides faster path failure detection and is enabled by default"
										}
									},
									{
										"name": "export",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "export_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default export policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "extended_v4_nexthop",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "by default, either inet/net6 unicast depending on neighbor IP family (v4 or v6)\nfor v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this"
										}
									},
									{
										"name": "graceful_restart_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "`0` means disable",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4095)"
													}
												}
											]
										}
									},
									{
										"name": "hold_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 90
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "import",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "import_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default import policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "local_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbor_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbors",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "If true, the BGP session to this neighbor will be administratively disabled/shutdown"
														}
													},
													{
														"name": "export_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "hold_time",
														"int64": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": 90
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 65535)"
																	}
																}
															]
														}
													},
													{
														"name": "import_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "multihop_ttl",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "assuming BGP neighbor is directly connected",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 255)"
																	}
																}
															]
														}
													},
													{
														"name": "neighbor_as",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "if per-neighbor as is desired. Property key is the neighbor address"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "by default, we'll re-advertise all learned BGP routers toward overlay"
										}
									},
									{
										"name": "tunnel_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `type`==`tunnel`"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `external`, `internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"internal\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "lan"
											},
											"description": "network name. enum: `lan`, `tunnel`, `vpn`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vpn_name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "wan_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `via`==`wan`"
										}
									}
								]
							}
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g \"5684dae9ac8b\")"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapsulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n  * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n  * sub option code: 1-255, sub-option code'"
													}
												}
											]
										},
										"description": "Property key is the network name"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "if set to `false`, disable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "dns_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique ID of the object instance in the Mist Organnization"
						}
					},
					{
						"name": "idp_profiles",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `critical`, `standard`, `strict`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "alert"
															},
															"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"close\",\n\"drop\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									}
								]
							},
							"description": "Property key is the profile name"
						}
					},
					{
						"name": "ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "secondary_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "optional list of secondary IPs in CIDR format"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "dhcp"
											},
											"description": "enum: `dhcp`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networks",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disallow_mist_services",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disallow Mist Devices in the network"
										}
									},
									{
										"name": "gateway",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "gateway6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "internal_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									},
									{
										"name": "internet_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "create_simple_service_policy",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "destination_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "port",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be a Port (i.e. \"443\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity"
																	}
																}
															]
														},
														"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "restricted",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
													}
												},
												{
													"name": "static_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. \"{{myvar}}\")"
																	}
																}
															]
														},
														"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
													}
												}
											],
											"description": "whether this network has direct internet access"
										}
									},
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow clients in the network to talk to each other"
										}
									},
									{
										"name": "multicast",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disable_igmp",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "if the network will only be the soruce of the multicast traffic, IGMP can be disabled"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "groups",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "rp_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "RP (rendezvous point) IP Address"
																	}
																}
															]
														},
														"description": "Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example \"225.1.0.3/32\")"
													}
												}
											],
											"description": "whether to enable multicast support (only PIM-sparse mode is supported)"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "routed_for_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "tenants",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "addresses",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															}
														}
													}
												]
											},
											"description": "Property key must be the user/tenant name (i.e. \"printer-1\") or a Variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_access",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "advertised_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
														}
													},
													{
														"name": "allow_ping",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether to allow ping from vpn into this routed network"
														}
													},
													{
														"name": "destination_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "port",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
														}
													},
													{
														"name": "nat_pool",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
														}
													},
													{
														"name": "no_readvertise_to_lan_bgp",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "no_readvertise_to_lan_ospf",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side OSPF peers"
														}
													},
													{
														"name": "no_readvertise_to_overlay",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "other_vrfs",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
														}
													},
													{
														"name": "routed",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether this network is routable"
														}
													},
													{
														"name": "source_nat",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "external_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															],
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
														}
													},
													{
														"name": "static_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
														}
													},
													{
														"name": "summarized_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "summarized_subnet_to_lan_bgp",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "summarized_subnet_to_lan_ospf",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side OSPF peers"
														}
													}
												]
											},
											"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
										}
									}
								]
							}
						}
					},
					{
						"name": "ntp_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "node1",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "gateway",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "if `type`==`static`"
												}
											},
											{
												"name": "ip",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "netmask",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "used only if `subnet` is not specified in `networks`"
												}
											},
											{
												"name": "type",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "dhcp"
													},
													"description": "enum: `dhcp`, `static`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "use_mgmt_vrf",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
												}
											},
											{
												"name": "use_mgmt_vrf_for_host_out",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
												}
											},
											{
												"name": "vlan_id",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for HA Cluster, node1 can have different IP Config"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_mgmt_vrf",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
									}
								},
								{
									"name": "use_mgmt_vrf_for_host_out",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
									}
								},
								{
									"name": "vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "out-of-band (vme/em0/fxp0) IP config"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preferences",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "paths",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "cost",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "For SSR Only. `true`, if this specific path is undesired"
														}
													},
													{
														"name": "gateway_ip",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`local`, if a different gateway is desired"
														}
													},
													{
														"name": "internet_access",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`vpn`, if this vpn path can be used for internet"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "required when \n  * `type`==`vpn`: the name of the VPN Path to use \n  * `type`==`wan`: the name of the WAN interface to use'"
														}
													},
													{
														"name": "networks",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "required when `type`==`local`"
														}
													},
													{
														"name": "target_ips",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`, if destination IP is to be replaced"
														}
													},
													{
														"name": "type",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `local`, `tunnel`, `vpn`, `wan`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "optional if `type`==`vpn`"
														}
													}
												]
											}
										}
									},
									{
										"name": "strategy",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "ordered"
											},
											"description": "enum: `ecmp`, `ordered`, `weighted`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ecmp\",\n\"ordered\",\n\"weighted\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the path name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ae_disable_lacp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `aggregated`==`true`. To disable LCP support for the AE interface"
										}
									},
									{
										"name": "ae_idx",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)"
										}
									},
									{
										"name": "ae_lacp_force_up",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only"
										}
									},
									{
										"name": "aggregated",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "critical",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if want to generate port up/down alarm, set it to true"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Interface Description. Can be a variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "port admin up (true) / down (false)"
										}
									},
									{
										"name": "dsl_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "vdsl"
											},
											"description": "if `wan_type`==`dsl`. enum: `adsl`, `vdsl`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"adsl\",\n\"vdsl\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dsl_vci",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 35
											},
											"description": "if `wan_type`==`dsl`\n16 bit int"
										}
									},
									{
										"name": "dsl_vpi",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "if `wan_type`==`dsl`\n8 bit int"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip_config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "dns",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. \"192.168.1.1\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "ip",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Interface IP Address (i.e. \"192.168.1.8\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "netmask",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. \"/24\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "network",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "optional, the network to be used for mgmt"
													}
												},
												{
													"name": "poser_password",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "pppoe_auth",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "if `type`==`pppoe`. enum: `chap`, `none`, `pap`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "pppoe_username",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "dhcp"
														},
														"description": "enum: `dhcp`, `pppoe`, `static`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"pppoe\",\n\"static\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Junos IP Config"
										}
									},
									{
										"name": "lte_apn",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "if `wan_type`==`lte`. enum: `chap`, `none`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "lte_backup",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "lte_password",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_username",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "name that we'll use to derive config"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `usage`==`lan`, name of the [networks]($h/Orgs%20Networks/_overview) to attach to the interface"
										}
									},
									{
										"name": "outer_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "for Q-in-Q"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only for SRX and if `usage`==`lan`, the Untagged VLAN Network"
										}
									},
									{
										"name": "preserve_dscp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "whether to preserve dscp when sending traffic over VPN (SSR-only)"
										}
									},
									{
										"name": "redundant",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_node",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_nodes",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "SSR only - supporting vlan-based redundancy (matching the size of `networks`)"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											}
										}
									},
									{
										"name": "ssr_no_virtual_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when SSR is running as VM, this is required on certain hosting platforms"
										}
									},
									{
										"name": "svr_port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "for SSR only"
										}
									},
									{
										"name": "traffic_shaping",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "class_percentages",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "max_tx_kbps",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "Interface Transmit Cap in kbps"
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name. enum: `ha_control`, `ha_data`, `lan`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ha_control\",\n\"ha_data\",\n\"lan\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_paths",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "broadband"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `broadband`, `lte`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "bfd_use_tunnel_mode",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "Only if the VPN `type`==`hub_spoke`. Whether to use tunnel mode. SSR only"
														}
													},
													{
														"name": "link_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`mesh`"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`hub_spoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)"
														}
													},
													{
														"name": "role",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "spoke"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `hub`, `spoke`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hub\",\n\"spoke\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "traffic_shaping",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "class_percentages",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"int64": {}
																		},
																		"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
																	}
																},
																{
																	"name": "enabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "max_tx_kbps",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Interface Transmit Cap in kbps"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Property key is the VPN name"
										}
									},
									{
										"name": "wan_arp_policer",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "default"
											},
											"description": "Only when `wan_type`==`broadband`. enum: `default`, `max`, `recommended`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"max\",\n\"recommended\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "wan_ext_ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP"
										}
									},
									{
										"name": "wan_extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "Only if `usage`==`wan`. Property Key is the destianation CIDR (e.g \"100.100.100.0/24\")"
										}
									},
									{
										"name": "wan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined"
										}
									},
									{
										"name": "wan_probe_override",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "probe_profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "broadband"
														},
														"description": "enum: `broadband`, `lte`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `usage`==`wan`"
										}
									},
									{
										"name": "wan_source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "or to disable the source-nat"
													}
												},
												{
													"name": "nat_pool",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if alternative nat_pool is desired"
													}
												}
											],
											"description": "Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip"
										}
									},
									{
										"name": "wan_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"dsl\",\n\"lte\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the port(s) name or range (e.g. \"ge-0/0/0-10\")"
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "auto assigned if not set"
						}
					},
					{
						"name": "routing_policies",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "terms",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "accept",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "add_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "add_target_vrfs",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "for SSR, hub decides how VRF routes are leaked on spoke"
																	}
																},
																{
																	"name": "aggregate",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "route aggregation"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "exclude_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. To exclude certain AS"
																	}
																},
																{
																	"name": "exclude_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "export_communitites",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "local_preference",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "optional, for an import policy, local_preference can be changed"
																	}
																},
																{
																	"name": "prepend_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. By default, the local AS will be prepended, to change it"
																	}
																}
															],
															"description": "when used as import policy"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "takes regular expression"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "network",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																						}
																					],
																					"schema_definition": "listvalidator.UniqueValues()"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "prefix",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
																	}
																},
																{
																	"name": "protocol",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "`direct`, `bgp`, `osp`, ..."
																	}
																},
																{
																	"name": "route_exists",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "route",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "vrf_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"default": {
																						"static": "default"
																					},
																					"description": "name of the vrf instance\nit can also be the name of the VPN or wan if they"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "vpn_neighbor_mac",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)"
																	}
																},
																{
																	"name": "vpn_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)\nordered-"
																	}
																},
																{
																	"name": "vpn_path_sla",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "max_jitter",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_latency",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_loss",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															],
															"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
														}
													}
												]
											},
											"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the routing policy name"
						}
					},
					{
						"name": "service_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `allow`, `deny`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															}
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "strict"
															},
															"description": "enum: `critical`, `standard`, `strict`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "strict"
														},
														"description": "enum: `Custom`, `strict` (default), `standard` or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "access within the same VRF"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "path_preference",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "servicepolicy_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "used to link servicepolicy defined at org level and overwrite some attributes"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "tunnel_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auto_provision",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enable",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "latlng",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "lat",
																"float64": {
																	"computed_optional_required": "required"
																}
															},
															{
																"name": "lng",
																"float64": {
																	"computed_optional_required": "required"
																}
															}
														],
														"description": "API override for POP selection"
													}
												},
												{
													"name": "primary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												},
												{
													"name": "provider",
													"string": {
														"computed_optional_required": "required",
														"description": "enum: `jse-ipsec`, `zscaler-ipsec`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"jse-ipsec\",\n\"zscaler-ipsec\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "region",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "API override for POP selection"
													}
												},
												{
													"name": "secondary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"name": "ike_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ike_mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "main"
											},
											"description": "Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aggressive\",\n\"main\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ike_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "Only if `provider`==`custom-ipsec`. enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Only if  `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "local_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "active-standby"
											},
											"description": "Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"active-active\",\n\"active-standby\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `provider`==`custom-ipsec`, networks reachable via this tunnel"
										}
									},
									{
										"name": "primary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "probe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "interval",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "how often to trigger the probe"
													}
												},
												{
													"name": "threshold",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "number of consecutive misses before declaring the tunnel down"
													}
												},
												{
													"name": "timeout",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "time within which to complete the connectivity check"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "icmp"
														},
														"description": "enum: `http`, `icmp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"http\",\n\"icmp\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gre\",\n\"ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "provider",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `customer-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom-ipsec\",\n\"customer-gre\",\n\"jse-ipsec\",\n\"zscaler-gre\",\n\"zscaler-ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "psk",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "secondary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "version",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "2"
											},
											"description": "Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the tunnel name"
						}
					},
					{
						"name": "tunnel_provider_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "jse",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "num_users",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "org_name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "JSE Organization name. The list of available organizations can be retrieved with the [Get Org JSE Info]($e/Orgs%20JSE/getOrgJseInfo) API Call"
												}
											}
										],
										"description": "for jse-ipsec, this allow provisioning of adequate resource on JSE. Make sure adequate licenses are added"
									}
								},
								{
									"name": "zscaler",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "aup_block_internet_until_accepted",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "aup_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
												}
											},
											{
												"name": "aup_force_ssl_inspection",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
												}
											},
											{
												"name": "aup_timeout_in_days",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 180)"
															}
														}
													]
												}
											},
											{
												"name": "auth_required",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Enable this option to enforce user authentication"
												}
											},
											{
												"name": "caution_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
												}
											},
											{
												"name": "dn_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "idle_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(0, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "ofw_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if `true`, enable the firewall control option"
												}
											},
											{
												"name": "sub_locations",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "aup_block_internet_until_accepted",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	}
																}
															},
															{
																"name": "aup_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
																}
															},
															{
																"name": "aup_force_ssl_inspection",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
																}
															},
															{
																"name": "aup_timeout_in_days",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 180)"
																			}
																		}
																	]
																}
															},
															{
																"name": "auth_required",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Enable this option to authenticate users"
																}
															},
															{
																"name": "caution_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
																}
															},
															{
																"name": "dn_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															},
															{
																"name": "idle_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(0, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "[network]($h/Orgs%20Networks/_overview) name"
																}
															},
															{
																"name": "ofw_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "if `true`, enable the firewall control option"
																}
															},
															{
																"name": "surrogate_ip",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
																}
															},
															{
																"name": "surrogate_ip_enforced_for_known_browsers",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
																}
															},
															{
																"name": "surrogate_refresh_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "up_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															}
														]
													},
													"description": "`sub-locations` can be used for specific uses cases to define different configuration based on the user network"
												}
											},
											{
												"name": "surrogate_ip",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
												}
											},
											{
												"name": "surrogate_ip_enforced_for_known_browsers",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
												}
											},
											{
												"name": "surrogate_refresh_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "up_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "xff_forward_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "location uses proxy chaining to forward traffic"
												}
											}
										],
										"description": "for zscaler-ipsec and zscaler-gre"
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "required",
							"description": "Device Type. enum: `gateway`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gateway\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		},
		{
			"name": "org_gatewaytemplate",
			"schema": {
				"attributes": [
					{
						"name": "additional_config_cmds",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "additional CLI commands to append to the generated Junos config. **Note**: no check is done"
						}
					},
					{
						"name": "bgp_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auth_key",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "bfd_minimum_interval",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 350
											},
											"description": "when bfd_multiplier is configured alone. Default:\n  * 1000 if `type`==`external`\n  * 350 `type`==`internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255000)"
													}
												}
											]
										}
									},
									{
										"name": "bfd_multiplier",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 3
											},
											"description": "when bfd_minimum_interval_is_configured alone",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(1, 255)"
													}
												}
											]
										}
									},
									{
										"name": "disable_bfd",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "BFD provides faster path failure detection and is enabled by default"
										}
									},
									{
										"name": "export",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "export_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default export policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "extended_v4_nexthop",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "by default, either inet/net6 unicast depending on neighbor IP family (v4 or v6)\nfor v6 neighbors, to exchange v4 nexthop, which allows dual-stack support, enable this"
										}
									},
									{
										"name": "graceful_restart_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "`0` means disable",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 4095)"
													}
												}
											]
										}
									},
									{
										"name": "hold_time",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 90
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
															}
														],
														"schema_definition": "int64validator.Between(0, 65535)"
													}
												}
											]
										}
									},
									{
										"name": "import",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "import_policy",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "default import policies if no per-neighbor policies defined"
										}
									},
									{
										"name": "local_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbor_as",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "neighbors",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "If true, the BGP session to this neighbor will be administratively disabled/shutdown"
														}
													},
													{
														"name": "export_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "hold_time",
														"int64": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": 90
															},
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 65535)"
																	}
																}
															]
														}
													},
													{
														"name": "import_policy",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "multihop_ttl",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "assuming BGP neighbor is directly connected",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																			}
																		],
																		"schema_definition": "int64validator.Between(0, 255)"
																	}
																}
															]
														}
													},
													{
														"name": "neighbor_as",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "if per-neighbor as is desired. Property key is the neighbor address"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `type`!=`external`or `via`==`wan`networks where we expect BGP neighbor to connect to/from"
										}
									},
									{
										"name": "no_readvertise_to_overlay",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "by default, we'll re-advertise all learned BGP routers toward overlay"
										}
									},
									{
										"name": "tunnel_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `type`==`tunnel`"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `external`, `internal`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"external\",\n\"internal\",\n)"
													}
												},
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.LengthAtLeast(1)"
													}
												}
											]
										}
									},
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "lan"
											},
											"description": "network name. enum: `lan`, `tunnel`, `vpn`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"lan\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vpn_name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "wan_name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `via`==`wan`"
										}
									}
								]
							}
						}
					},
					{
						"name": "dhcpd_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "config",
									"map_nested": {
										"computed_optional_required": "computed_optional",
										"nested_object": {
											"attributes": [
												{
													"name": "dns_servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`local` or `type6`==`local` - optional, if not defined, system one will be used"
													}
												},
												{
													"name": "fixed_bindings",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the MAC Address. Format is `[0-9a-f]{12}` (e.g \"5684dae9ac8b\")"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local` - optional, `ip` will be used if not provided"
													}
												},
												{
													"name": "ip_end",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_end6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "ip_start",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`local`"
													}
												},
												{
													"name": "ip_start6",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type6`==`local`"
													}
												},
												{
													"name": "lease_time",
													"int64": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": 86400
														},
														"description": "in seconds, lease time has to be between 3600 [1hr] - 604800 [1 week], default is 86400 [1 day]",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																		}
																	],
																	"schema_definition": "int64validator.Between(3600, 604800)"
																}
															}
														]
													}
												},
												{
													"name": "options",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is the DHCP option number"
													}
												},
												{
													"name": "server_id_override",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "`server_id_override`==`true` means the device, when acts as DHCP relay and forwards DHCP responses from DHCP server to clients, \nshould overwrite the Sever Identifier option (i.e. DHCP option 54) in DHCP responses with its own IP address."
													}
												},
												{
													"name": "servers",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type`==`relay`"
													}
												},
												{
													"name": "servers6",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "if `type6`==`relay`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "local"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "type6",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "enum: `local` (DHCP Server), `none`, `relay` (DHCP Relay)",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"none\",\n\"relay\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "vendor_encapsulated",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "type",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "enum: `boolean`, `hex`, `int16`, `int32`, `ip`, `string`, `uint16`, `uint32`",
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																						}
																					],
																					"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"boolean\",\n\"hex\",\n\"int16\",\n\"int32\",\n\"ip\",\n\"string\",\n\"uint16\",\n\"uint32\",\n)"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "value",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															]
														},
														"description": "if `type`==`local` or `type6`==`local`. Property key is \u003centerprise number\u003e:\u003csub option code\u003e, with\n  * enterprise number: 1-65535 (https://www.iana.org/assignments/enterprise-numbers/enterprise-numbers)\n  * sub option code: 1-255, sub-option code'"
													}
												}
											]
										},
										"description": "Property key is the network name"
									}
								},
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": true
										},
										"description": "if set to `false`, disable the DHCP server"
									}
								}
							]
						}
					},
					{
						"name": "dns_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "dns_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "dns_suffix",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "Global dns settings. To keep compatibility, dns settings in `ip_config` and `oob_ip_config` will overwrite this setting"
						}
					},
					{
						"name": "extra_routes",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"10.0.0.0/8\")"
						}
					},
					{
						"name": "extra_routes6",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "via",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									}
								]
							},
							"description": "Property key is the destination CIDR (e.g. \"2a02:1234:420a:10c9::/64\")"
						}
					},
					{
						"name": "id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "Unique ID of the object instance in the Mist Organnization"
						}
					},
					{
						"name": "idp_profiles",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "base_profile",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `critical`, `standard`, `strict`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "org_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "overwrites",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "alert"
															},
															"description": "enum:\n  * alert (default)\n  * drop: siliently dropping packets\n  * close: notify client/server to close connection",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"alert\",\n\"close\",\n\"drop\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "attack_name",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "dst_subnet",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "severity",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																}
															]
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											}
										}
									}
								]
							},
							"description": "Property key is the profile name"
						}
					},
					{
						"name": "ip_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ip",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "netmask",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "secondary_ips",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "optional list of secondary IPs in CIDR format"
										}
									},
									{
										"name": "type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "dhcp"
											},
											"description": "enum: `dhcp`, `static`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					},
					{
						"name": "name",
						"string": {
							"computed_optional_required": "required"
						}
					},
					{
						"name": "networks",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "disallow_mist_services",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "whether to disallow Mist Devices in the network"
										}
									},
									{
										"name": "gateway",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "gateway6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "internal_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												}
											]
										}
									},
									{
										"name": "internet_access",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "create_simple_service_policy",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "destination_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "port",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Destination NAT destination IP Address. Must be a Port (i.e. \"443\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity"
																	}
																}
															]
														},
														"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "restricted",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies"
													}
												},
												{
													"name": "static_nat",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "internal_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																	}
																},
																{
																	"name": "name",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "wan_name",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "SRX Only. If not set, we configure the nat policies against all WAN ports for simplicity. Can be a Variable (i.e. \"{{myvar}}\")"
																	}
																}
															]
														},
														"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
													}
												}
											],
											"description": "whether this network has direct internet access"
										}
									},
									{
										"name": "isolation",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "whether to allow clients in the network to talk to each other"
										}
									},
									{
										"name": "multicast",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disable_igmp",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "if the network will only be the soruce of the multicast traffic, IGMP can be disabled"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "groups",
													"map_nested": {
														"computed_optional_required": "computed_optional",
														"nested_object": {
															"attributes": [
																{
																	"name": "rp_ip",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "RP (rendezvous point) IP Address"
																	}
																}
															]
														},
														"description": "Group address to RP (rendezvous point) mapping. Property Key is the CIDR (example \"225.1.0.3/32\")"
													}
												}
											],
											"description": "whether to enable multicast support (only PIM-sparse mode is supported)"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "required"
										}
									},
									{
										"name": "routed_for_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "for a Network (usually LAN), it can be routable to other networks (e.g. OSPF)"
										}
									},
									{
										"name": "subnet",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "subnet6",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "tenants",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "addresses",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															}
														}
													}
												]
											},
											"description": "Property key must be the user/tenant name (i.e. \"printer-1\") or a Variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_access",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "advertised_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`true`, whether to advertise an aggregated subnet toward HUB this is useful when there are multiple networks on SPOKE's side"
														}
													},
													{
														"name": "allow_ping",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether to allow ping from vpn into this routed network"
														}
													},
													{
														"name": "destination_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Destination NAT destination IP Address. Must be an IP (i.e. \"192.168.70.30\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	},
																	{
																		"name": "port",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key can be an External IP (i.e. \"63.16.0.3\"), an External IP:Port (i.e. \"63.16.0.3:443\"), an External Port (i.e. \":443\"), an External CIDR (i.e. \"63.16.0.0/30\"), an External CIDR:Port (i.e. \"63.16.0.0/30:443\") or a Variable (i.e. \"{{myvar}}\"). At least one of the `internal_ip` or `port` must be defined"
														}
													},
													{
														"name": "nat_pool",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub, a subnet is required to create and advertise the route to Hub"
														}
													},
													{
														"name": "no_readvertise_to_lan_bgp",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "no_readvertise_to_lan_ospf",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "toward LAN-side OSPF peers"
														}
													},
													{
														"name": "no_readvertise_to_overlay",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "other_vrfs",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "by default, the routes are only readvertised toward the same vrf on spoke\nto allow it to be leaked to other vrfs"
														}
													},
													{
														"name": "routed",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "whether this network is routable"
														}
													},
													{
														"name": "source_nat",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "external_ip",
																	"string": {
																		"computed_optional_required": "computed_optional"
																	}
																}
															],
															"description": "if `routed`==`false` (usually at Spoke), but some hosts needs to be reachable from Hub"
														}
													},
													{
														"name": "static_nat",
														"map_nested": {
															"computed_optional_required": "computed_optional",
															"nested_object": {
																"attributes": [
																	{
																		"name": "internal_ip",
																		"string": {
																			"computed_optional_required": "computed_optional",
																			"description": "The Static NAT destination IP Address. Must be an IP Address (i.e. \"192.168.70.3\") or a Variable (i.e. \"{{myvar}}\")"
																		}
																	},
																	{
																		"name": "name",
																		"string": {
																			"computed_optional_required": "computed_optional"
																		}
																	}
																]
															},
															"description": "Property key may be an External IP Address (i.e. \"63.16.0.3\"), a CIDR (i.e. \"63.16.0.12/20\") or a Variable (i.e. \"{{myvar}}\")"
														}
													},
													{
														"name": "summarized_subnet",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward overlay\nhow HUB should deal with routes it received from Spokes"
														}
													},
													{
														"name": "summarized_subnet_to_lan_bgp",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side BGP peers"
														}
													},
													{
														"name": "summarized_subnet_to_lan_ospf",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "toward LAN-side OSPF peers"
														}
													}
												]
											},
											"description": "Property key is the VPN name. Whether this network can be accessed from vpn"
										}
									}
								]
							}
						}
					},
					{
						"name": "ntp_override",
						"bool": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": false
							}
						}
					},
					{
						"name": "ntp_servers",
						"list": {
							"computed_optional_required": "computed_optional",
							"element_type": {
								"string": {}
							},
							"description": "list of NTP servers specific to this device. By default, those in Site Settings will be used"
						}
					},
					{
						"name": "oob_ip_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "gateway",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "ip",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "netmask",
									"string": {
										"computed_optional_required": "computed_optional",
										"description": "if `type`==`static`"
									}
								},
								{
									"name": "node1",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "gateway",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "if `type`==`static`"
												}
											},
											{
												"name": "ip",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "netmask",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "used only if `subnet` is not specified in `networks`"
												}
											},
											{
												"name": "type",
												"string": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": "dhcp"
													},
													"description": "enum: `dhcp`, `static`",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																	}
																],
																"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
															}
														}
													]
												}
											},
											{
												"name": "use_mgmt_vrf",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
												}
											},
											{
												"name": "use_mgmt_vrf_for_host_out",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "whether to use `mgmt_junos` for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
												}
											},
											{
												"name": "vlan_id",
												"string": {
													"computed_optional_required": "computed_optional"
												}
											}
										],
										"description": "for HA Cluster, node1 can have different IP Config"
									}
								},
								{
									"name": "type",
									"string": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": "dhcp"
										},
										"description": "enum: `dhcp`, `static`",
										"validators": [
											{
												"custom": {
													"imports": [
														{
															"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
														}
													],
													"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"static\",\n)"
												}
											}
										]
									}
								},
								{
									"name": "use_mgmt_vrf",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "if supported on the platform. If enabled, DNS will be using this routing-instance, too"
									}
								},
								{
									"name": "use_mgmt_vrf_for_host_out",
									"bool": {
										"computed_optional_required": "computed_optional",
										"default": {
											"static": false
										},
										"description": "for host-out traffic (NTP/TACPLUS/RADIUS/SYSLOG/SNMP), if alternative source network/ip is desired"
									}
								},
								{
									"name": "vlan_id",
									"string": {
										"computed_optional_required": "computed_optional"
									}
								}
							],
							"description": "out-of-band (vme/em0/fxp0) IP config"
						}
					},
					{
						"name": "org_id",
						"string": {
							"computed_optional_required": "computed_optional"
						}
					},
					{
						"name": "path_preferences",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "paths",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "cost",
														"int64": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "disabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "For SSR Only. `true`, if this specific path is undesired"
														}
													},
													{
														"name": "gateway_ip",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`local`, if a different gateway is desired"
														}
													},
													{
														"name": "internet_access",
														"bool": {
															"computed_optional_required": "computed_optional",
															"description": "only if `type`==`vpn`, if this vpn path can be used for internet"
														}
													},
													{
														"name": "name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "required when \n  * `type`==`vpn`: the name of the VPN Path to use \n  * `type`==`wan`: the name of the WAN interface to use'"
														}
													},
													{
														"name": "networks",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "required when `type`==`local`"
														}
													},
													{
														"name": "target_ips",
														"list": {
															"computed_optional_required": "computed_optional",
															"element_type": {
																"string": {}
															},
															"description": "if `type`==`local`, if destination IP is to be replaced"
														}
													},
													{
														"name": "type",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `local`, `tunnel`, `vpn`, `wan`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"local\",\n\"tunnel\",\n\"vpn\",\n\"wan\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "wan_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "optional if `type`==`vpn`"
														}
													}
												]
											}
										}
									},
									{
										"name": "strategy",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "ordered"
											},
											"description": "enum: `ecmp`, `ordered`, `weighted`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ecmp\",\n\"ordered\",\n\"weighted\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the path name"
						}
					},
					{
						"name": "port_config",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "ae_disable_lacp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if `aggregated`==`true`. To disable LCP support for the AE interface"
										}
									},
									{
										"name": "ae_idx",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `aggregated`==`true`. Users could force to use the designated AE name (must be an integer between 0 and 127)"
										}
									},
									{
										"name": "ae_lacp_force_up",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "For SRX Only, if `aggregated`==`true`.Sets the state of the interface as UP when the peer has limited LACP capability. Use case: When a device connected to this AE port is ZTPing for the first time, it will not have LACP configured on the other end. **Note:** Turning this on will enable force-up on one of the interfaces in the bundle only"
										}
									},
									{
										"name": "aggregated",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "critical",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "if want to generate port up/down alarm, set it to true"
										}
									},
									{
										"name": "description",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Interface Description. Can be a variable (i.e. \"{{myvar}}\")"
										}
									},
									{
										"name": "disable_autoneg",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "port admin up (true) / down (false)"
										}
									},
									{
										"name": "dsl_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "vdsl"
											},
											"description": "if `wan_type`==`dsl`. enum: `adsl`, `vdsl`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"adsl\",\n\"vdsl\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "dsl_vci",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 35
											},
											"description": "if `wan_type`==`dsl`\n16 bit int"
										}
									},
									{
										"name": "dsl_vpi",
										"int64": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": 0
											},
											"description": "if `wan_type`==`dsl`\n8 bit int"
										}
									},
									{
										"name": "duplex",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											},
											"description": "enum: `auto`, `full`, `half`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"auto\",\n\"full\",\n\"half\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ip_config",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "dns",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "dns_suffix",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "except for out-of_band interface (vme/em0/fxp0)"
													}
												},
												{
													"name": "gateway",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "except for out-of_band interface (vme/em0/fxp0). Interface Default Gateway IP Address (i.e. \"192.168.1.1\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "ip",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "Interface IP Address (i.e. \"192.168.1.8\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "netmask",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "used only if `subnet` is not specified in `networks`. Interface Netmask (i.e. \"/24\") or a Variable (i.e. \"{{myvar}}\")"
													}
												},
												{
													"name": "network",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "optional, the network to be used for mgmt"
													}
												},
												{
													"name": "poser_password",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "pppoe_auth",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "none"
														},
														"description": "if `type`==`pppoe`. enum: `chap`, `none`, `pap`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "pppoe_username",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if `type`==`pppoe`"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "dhcp"
														},
														"description": "enum: `dhcp`, `pppoe`, `static`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"dhcp\",\n\"pppoe\",\n\"static\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Junos IP Config"
										}
									},
									{
										"name": "lte_apn",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_auth",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "if `wan_type`==`lte`. enum: `chap`, `none`, `pap`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"chap\",\n\"none\",\n\"pap\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "lte_backup",
										"bool": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "lte_password",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "lte_username",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if `wan_type`==`lte`"
										}
									},
									{
										"name": "mtu",
										"int64": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "name that we'll use to derive config"
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `usage`==`lan`, name of the [networks]($h/Orgs%20Networks/_overview) to attach to the interface"
										}
									},
									{
										"name": "outer_vlan_id",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "for Q-in-Q"
										}
									},
									{
										"name": "poe_disabled",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											}
										}
									},
									{
										"name": "port_network",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only for SRX and if `usage`==`lan`, the Untagged VLAN Network"
										}
									},
									{
										"name": "preserve_dscp",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": true
											},
											"description": "whether to preserve dscp when sending traffic over VPN (SSR-only)"
										}
									},
									{
										"name": "redundant",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_idx",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_node",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "if HA mode"
										}
									},
									{
										"name": "reth_nodes",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "SSR only - supporting vlan-based redundancy (matching the size of `networks`)"
										}
									},
									{
										"name": "speed",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "auto"
											}
										}
									},
									{
										"name": "ssr_no_virtual_mac",
										"bool": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": false
											},
											"description": "when SSR is running as VM, this is required on certain hosting platforms"
										}
									},
									{
										"name": "svr_port_range",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "none"
											},
											"description": "for SSR only"
										}
									},
									{
										"name": "traffic_shaping",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "class_percentages",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"int64": {}
														},
														"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "max_tx_kbps",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "Interface Transmit Cap in kbps"
													}
												}
											]
										}
									},
									{
										"name": "usage",
										"string": {
											"computed_optional_required": "required",
											"description": "port usage name. enum: `ha_control`, `ha_data`, `lan`, `wan`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"ha_control\",\n\"ha_data\",\n\"lan\",\n\"wan\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "vlan_id",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "vpn_paths",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "bfd_profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "broadband"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `broadband`, `lte`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "bfd_use_tunnel_mode",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															},
															"description": "Only if the VPN `type`==`hub_spoke`. Whether to use tunnel mode. SSR only"
														}
													},
													{
														"name": "link_name",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`mesh`"
														}
													},
													{
														"name": "preference",
														"int64": {
															"computed_optional_required": "computed_optional",
															"description": "Only if the VPN `type`==`hub_spoke`. For a given VPN, when `path_selection.strategy`==`simple`, the preference for a path (lower is preferred)"
														}
													},
													{
														"name": "role",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "spoke"
															},
															"description": "Only if the VPN `type`==`hub_spoke`. enum: `hub`, `spoke`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"hub\",\n\"spoke\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "traffic_shaping",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "class_percentages",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"int64": {}
																		},
																		"description": "percentages for differet class of traffic: high / medium / low / best-effort. Sum must be equal to 100"
																	}
																},
																{
																	"name": "enabled",
																	"bool": {
																		"computed_optional_required": "computed_optional",
																		"default": {
																			"static": false
																		}
																	}
																},
																{
																	"name": "max_tx_kbps",
																	"int64": {
																		"computed_optional_required": "computed_optional",
																		"description": "Interface Transmit Cap in kbps"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Property key is the VPN name"
										}
									},
									{
										"name": "wan_arp_policer",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "default"
											},
											"description": "Only when `wan_type`==`broadband`. enum: `default`, `max`, `recommended`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"default\",\n\"max\",\n\"recommended\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "wan_ext_ip",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `usage`==`wan`, optional. If spoke should reach this port by a different IP"
										}
									},
									{
										"name": "wan_extra_routes",
										"map_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "via",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													}
												]
											},
											"description": "Only if `usage`==`wan`. Property Key is the destianation CIDR (e.g \"100.100.100.0/24\")"
										}
									},
									{
										"name": "wan_networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "Only if `usage`==`wan`. If some networks are connected to this WAN port, it can be added here so policies can be defined"
										}
									},
									{
										"name": "wan_probe_override",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "probe_profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "broadband"
														},
														"description": "enum: `broadband`, `lte`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"lte\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `usage`==`wan`"
										}
									},
									{
										"name": "wan_source_nat",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "disabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														},
														"description": "or to disable the source-nat"
													}
												},
												{
													"name": "nat_pool",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "if alternative nat_pool is desired"
													}
												}
											],
											"description": "Only if `usage`==`wan`, optional. By default, source-NAT is performed on all WAN Ports using the interface-ip"
										}
									},
									{
										"name": "wan_type",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "broadband"
											},
											"description": "Only if `usage`==`wan`. enum: `broadband`, `dsl`, `lte`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"broadband\",\n\"dsl\",\n\"lte\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the Port Name (i.e. \"ge-0/0/0\"), the Ports Range (i.e. \"ge-0/0/0-10\"), the List of Ports (i.e. \"ge-0/0/0,ge-1/0/0\", only allowed for Aggregated or Redundant interfaces) or a Variable (i.e. \"{{myvar}}\")."
						}
					},
					{
						"name": "router_id",
						"string": {
							"computed_optional_required": "computed_optional",
							"description": "auto assigned if not set"
						}
					},
					{
						"name": "routing_policies",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "terms",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "action",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "accept",
																	"bool": {
																		"computed_optional_required": "computed_optional"
																	}
																},
																{
																	"name": "add_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "add_target_vrfs",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "for SSR, hub decides how VRF routes are leaked on spoke"
																	}
																},
																{
																	"name": "aggregate",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "route aggregation"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "exclude_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. To exclude certain AS"
																	}
																},
																{
																	"name": "exclude_community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "export_communitites",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional"
																	}
																},
																{
																	"name": "local_preference",
																	"string": {
																		"computed_optional_required": "computed_optional",
																		"description": "optional, for an import policy, local_preference can be changed"
																	}
																},
																{
																	"name": "prepend_as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "when used as export policy, optional. By default, the local AS will be prepended, to change it"
																	}
																}
															],
															"description": "when used as import policy"
														}
													},
													{
														"name": "matching",
														"single_nested": {
															"computed_optional_required": "computed_optional",
															"attributes": [
																{
																	"name": "as_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "takes regular expression"
																	}
																},
																{
																	"name": "community",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		}
																	}
																},
																{
																	"name": "network",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"validators": [
																			{
																				"custom": {
																					"imports": [
																						{
																							"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																						}
																					],
																					"schema_definition": "listvalidator.UniqueValues()"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "prefix",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
																	}
																},
																{
																	"name": "protocol",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "`direct`, `bgp`, `osp`, ..."
																	}
																},
																{
																	"name": "route_exists",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "route",
																				"string": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "vrf_name",
																				"string": {
																					"computed_optional_required": "computed_optional",
																					"default": {
																						"static": "default"
																					},
																					"description": "name of the vrf instance\nit can also be the name of the VPN or wan if they"
																				}
																			}
																		]
																	}
																},
																{
																	"name": "vpn_neighbor_mac",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)"
																	}
																},
																{
																	"name": "vpn_path",
																	"list": {
																		"computed_optional_required": "computed_optional",
																		"element_type": {
																			"string": {}
																		},
																		"description": "overlay-facing criteria (used for bgp_config where via=vpn)\nordered-"
																	}
																},
																{
																	"name": "vpn_path_sla",
																	"single_nested": {
																		"computed_optional_required": "computed_optional",
																		"attributes": [
																			{
																				"name": "max_jitter",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_latency",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			},
																			{
																				"name": "max_loss",
																				"int64": {
																					"computed_optional_required": "computed_optional"
																				}
																			}
																		]
																	}
																}
															],
															"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met"
														}
													}
												]
											},
											"description": "zero or more criteria/filter can be specified to match the term, all criteria have to be met",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the routing policy name"
						}
					},
					{
						"name": "service_policies",
						"list_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "action",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "enum: `allow`, `deny`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"allow\",\n\"deny\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "appqoe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												}
											],
											"description": "For SRX Only"
										}
									},
									{
										"name": "ewf",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "alert_only",
														"bool": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "block_message",
														"string": {
															"computed_optional_required": "computed_optional"
														}
													},
													{
														"name": "enabled",
														"bool": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": false
															}
														}
													},
													{
														"name": "profile",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "strict"
															},
															"description": "enum: `critical`, `standard`, `strict`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"critical\",\n\"standard\",\n\"strict\",\n)"
																	}
																}
															]
														}
													}
												]
											}
										}
									},
									{
										"name": "idp",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "alert_only",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "enabled",
													"bool": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": false
														}
													}
												},
												{
													"name": "idpprofile_id",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "org_level IDP Profile can be used, this takes precedence over `profile`"
													}
												},
												{
													"name": "profile",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "strict"
														},
														"description": "enum: `Custom`, `strict` (default), `standard` or keys from from idp_profiles"
													}
												}
											]
										}
									},
									{
										"name": "local_routing",
										"bool": {
											"computed_optional_required": "computed_optional",
											"description": "access within the same VRF"
										}
									},
									{
										"name": "name",
										"string": {
											"computed_optional_required": "computed_optional"
										}
									},
									{
										"name": "path_preference",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "by default, we derive all paths available and use them\noptionally, you can customize by using `path_preference`"
										}
									},
									{
										"name": "servicepolicy_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "used to link servicepolicy defined at org level and overwrite some attributes"
										}
									},
									{
										"name": "services",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									},
									{
										"name": "tenants",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"name": "tunnel_configs",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "auto_provision",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "enable",
													"bool": {
														"computed_optional_required": "computed_optional"
													}
												},
												{
													"name": "latlng",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "lat",
																"float64": {
																	"computed_optional_required": "required"
																}
															},
															{
																"name": "lng",
																"float64": {
																	"computed_optional_required": "required"
																}
															}
														],
														"description": "API override for POP selection"
													}
												},
												{
													"name": "primary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												},
												{
													"name": "provider",
													"string": {
														"computed_optional_required": "required",
														"description": "enum: `jse-ipsec`, `zscaler-ipsec`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"jse-ipsec\",\n\"zscaler-ipsec\",\n)"
																}
															}
														]
													}
												},
												{
													"name": "region",
													"string": {
														"computed_optional_required": "computed_optional",
														"description": "API override for POP selection"
													}
												},
												{
													"name": "secondary",
													"single_nested": {
														"computed_optional_required": "computed_optional",
														"attributes": [
															{
																"name": "probe_ips",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																					}
																				],
																				"schema_definition": "listvalidator.UniqueValues()"
																			}
																		}
																	]
																}
															},
															{
																"name": "wan_names",
																"list": {
																	"computed_optional_required": "computed_optional",
																	"element_type": {
																		"string": {}
																	},
																	"description": "optional, only needed if `vars_only`==`false`"
																}
															}
														]
													}
												}
											]
										}
									},
									{
										"name": "ike_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ike_mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "main"
											},
											"description": "Only if `provider`==`custom-ipsec`. enum: `aggressive`, `main`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"aggressive\",\n\"main\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "ike_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_lifetime",
										"int64": {
											"computed_optional_required": "computed_optional",
											"description": "if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "ipsec_proposals",
										"list_nested": {
											"computed_optional_required": "computed_optional",
											"nested_object": {
												"attributes": [
													{
														"name": "auth_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"description": "enum: `md5`, `sha1`, `sha2`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"md5\",\n\"sha1\",\n\"sha2\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "dh_group",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "14"
															},
															"description": "Only if `provider`==`custom-ipsec`. enum:\n  * 1\n  * 2 (1024-bit)\n  * 5\n  * 14 (default, 2048-bit)\n  * 15 (3072-bit)\n  * 16 (4096-bit)\n  * 19 (256-bit ECP)\n  * 20 (384-bit ECP)\n  * 21 (521-bit ECP)\n  * 24 (2048-bit ECP)",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"14\",\n\"15\",\n\"16\",\n\"19\",\n\"2\",\n\"20\",\n\"21\",\n\"24\",\n\"5\",\n)"
																	}
																}
															]
														}
													},
													{
														"name": "enc_algo",
														"string": {
															"computed_optional_required": "computed_optional",
															"default": {
																"static": "aes256"
															},
															"description": "enum: `3des`, `aes128`, `aes256`, `aes_gcm128`, `aes_gcm256`",
															"validators": [
																{
																	"custom": {
																		"imports": [
																			{
																				"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																			}
																		],
																		"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"3des\",\n\"aes128\",\n\"aes256\",\n\"aes_gcm128\",\n\"aes_gcm256\",\n)"
																	}
																}
															]
														}
													}
												]
											},
											"description": "Only if  `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "local_id",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "mode",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "active-standby"
											},
											"description": "Required if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`. enum: `active-active`, `active-standby`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"active-active\",\n\"active-standby\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"description": "if `provider`==`custom-ipsec`, networks reachable via this tunnel"
										}
									},
									{
										"name": "primary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "probe",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "interval",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "how often to trigger the probe"
													}
												},
												{
													"name": "threshold",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "number of consecutive misses before declaring the tunnel down"
													}
												},
												{
													"name": "timeout",
													"int64": {
														"computed_optional_required": "computed_optional",
														"description": "time within which to complete the connectivity check"
													}
												},
												{
													"name": "type",
													"string": {
														"computed_optional_required": "computed_optional",
														"default": {
															"static": "icmp"
														},
														"description": "enum: `http`, `icmp`",
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
																		}
																	],
																	"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"http\",\n\"icmp\",\n)"
																}
															}
														]
													}
												}
											],
											"description": "Only if `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "protocol",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `provider`==`custom-ipsec`. enum: `gre`, `ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"gre\",\n\"ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "provider",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Only if `auto_provision.enabled`==`false`. enum: `custom-ipsec`, `customer-gre`, `jse-ipsec`, `zscaler-gre`, `zscaler-ipsec`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"custom-ipsec\",\n\"customer-gre\",\n\"jse-ipsec\",\n\"zscaler-gre\",\n\"zscaler-ipsec\",\n)"
													}
												}
											]
										}
									},
									{
										"name": "psk",
										"string": {
											"computed_optional_required": "computed_optional",
											"description": "Required if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "secondary",
										"single_nested": {
											"computed_optional_required": "computed_optional",
											"attributes": [
												{
													"name": "hosts",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												},
												{
													"name": "internal_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if `provider`==`zscaler-gre`, `provider`==`jse-ipsec`, `provider`==`custom-ipsec` or `provider`==`custom-gre`"
													}
												},
												{
													"name": "probe_ips",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"validators": [
															{
																"custom": {
																	"imports": [
																		{
																			"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
																		}
																	],
																	"schema_definition": "listvalidator.UniqueValues()"
																}
															}
														]
													}
												},
												{
													"name": "remote_ids",
													"list": {
														"computed_optional_required": "computed_optional",
														"element_type": {
															"string": {}
														},
														"description": "Only if  `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
													}
												},
												{
													"name": "wan_names",
													"list": {
														"computed_optional_required": "required",
														"element_type": {
															"string": {}
														}
													}
												}
											],
											"description": "Only if `provider`==`zscaler-ipsec`, `provider`==`jse-ipsec` or `provider`==`custom-ipsec`"
										}
									},
									{
										"name": "version",
										"string": {
											"computed_optional_required": "computed_optional",
											"default": {
												"static": "2"
											},
											"description": "Only if `provider`==`custom-gre` or `provider`==`custom-ipsec`. enum: `1`, `2`",
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
															}
														],
														"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"1\",\n\"2\",\n)"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the tunnel name"
						}
					},
					{
						"name": "tunnel_provider_options",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "jse",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "num_users",
												"int64": {
													"computed_optional_required": "computed_optional"
												}
											},
											{
												"name": "org_name",
												"string": {
													"computed_optional_required": "computed_optional",
													"description": "JSE Organization name. The list of available organizations can be retrieved with the [Get Org JSE Info]($e/Orgs%20JSE/getOrgJseInfo) API Call"
												}
											}
										],
										"description": "for jse-ipsec, this allow provisioning of adequate resource on JSE. Make sure adequate licenses are added"
									}
								},
								{
									"name": "zscaler",
									"single_nested": {
										"computed_optional_required": "computed_optional",
										"attributes": [
											{
												"name": "aup_block_internet_until_accepted",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													}
												}
											},
											{
												"name": "aup_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
												}
											},
											{
												"name": "aup_force_ssl_inspection",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
												}
											},
											{
												"name": "aup_timeout_in_days",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 180)"
															}
														}
													]
												}
											},
											{
												"name": "auth_required",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Enable this option to enforce user authentication"
												}
											},
											{
												"name": "caution_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
												}
											},
											{
												"name": "dn_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "idle_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(0, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "ofw_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "if `true`, enable the firewall control option"
												}
											},
											{
												"name": "sub_locations",
												"list_nested": {
													"computed_optional_required": "computed_optional",
													"nested_object": {
														"attributes": [
															{
																"name": "aup_block_internet_until_accepted",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	}
																}
															},
															{
																"name": "aup_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display Acceptable Use Policy (AUP)"
																}
															},
															{
																"name": "aup_force_ssl_inspection",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "proxy HTTPs traffic, requiring Zscaler cert to be installed in browser"
																}
															},
															{
																"name": "aup_timeout_in_days",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `aup_enabled`==`true`. Days before AUP is requested again",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 180)"
																			}
																		}
																	]
																}
															},
															{
																"name": "auth_required",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Enable this option to authenticate users"
																}
															},
															{
																"name": "caution_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`false`, display caution notification for non-authenticated users"
																}
															},
															{
																"name": "dn_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															},
															{
																"name": "idle_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP`==`true`, idle Time to Disassociation",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(0, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "name",
																"string": {
																	"computed_optional_required": "computed_optional",
																	"description": "[network]($h/Orgs%20Networks/_overview) name"
																}
															},
															{
																"name": "ofw_enabled",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "if `true`, enable the firewall control option"
																}
															},
															{
																"name": "surrogate_ip",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"default": {
																		"static": false
																	},
																	"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
																}
															},
															{
																"name": "surrogate_ip_enforced_for_known_browsers",
																"bool": {
																	"computed_optional_required": "computed_optional",
																	"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
																}
															},
															{
																"name": "surrogate_refresh_time_in_minutes",
																"int64": {
																	"computed_optional_required": "computed_optional",
																	"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
																	"validators": [
																		{
																			"custom": {
																				"imports": [
																					{
																						"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																					}
																				],
																				"schema_definition": "int64validator.Between(1, 43200)"
																			}
																		}
																	]
																}
															},
															{
																"name": "up_bandwidth",
																"float64": {
																	"computed_optional_required": "computed_optional",
																	"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
																}
															}
														]
													},
													"description": "`sub-locations` can be used for specific uses cases to define different configuration based on the user network"
												}
											},
											{
												"name": "surrogate_ip",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "Can only be `true` when `auth_required`==`true`. Map a user to a private IP address so it applies the user's policies, instead of the location's policies"
												}
											},
											{
												"name": "surrogate_ip_enforced_for_known_browsers",
												"bool": {
													"computed_optional_required": "computed_optional",
													"description": "Can only be `true` when `surrogate_IP`==`true`, enforce surrogate IP for known browsers"
												}
											},
											{
												"name": "surrogate_refresh_time_in_minutes",
												"int64": {
													"computed_optional_required": "computed_optional",
													"description": "Required if `surrogate_IP_enforced_for_known_browsers`==`true`, must be lower or equal than `idle_time_in_minutes`, refresh Time for re-validation of Surrogacy",
													"validators": [
														{
															"custom": {
																"imports": [
																	{
																		"path": "github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
																	}
																],
																"schema_definition": "int64validator.Between(1, 43200)"
															}
														}
													]
												}
											},
											{
												"name": "up_bandwidth",
												"float64": {
													"computed_optional_required": "computed_optional",
													"description": "the download bandwidth cap of the link, in Mbps. Disabled if not set"
												}
											},
											{
												"name": "xff_forward_enabled",
												"bool": {
													"computed_optional_required": "computed_optional",
													"default": {
														"static": false
													},
													"description": "location uses proxy chaining to forward traffic"
												}
											}
										],
										"description": "for zscaler-ipsec and zscaler-gre"
									}
								}
							]
						}
					},
					{
						"name": "type",
						"string": {
							"computed_optional_required": "computed_optional",
							"default": {
								"static": "standalone"
							},
							"description": "enum: `spoke`, `standalone`",
							"validators": [
								{
									"custom": {
										"imports": [
											{
												"path": "github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
											}
										],
										"schema_definition": "stringvalidator.OneOf(\n\"\",\n\"spoke\",\n\"standalone\",\n)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_config",
						"single_nested": {
							"computed_optional_required": "computed_optional",
							"attributes": [
								{
									"name": "enabled",
									"bool": {
										"computed_optional_required": "computed_optional",
										"description": "whether to enable VRF (when supported on the device)"
									}
								}
							]
						}
					},
					{
						"name": "vrf_instances",
						"map_nested": {
							"computed_optional_required": "computed_optional",
							"nested_object": {
								"attributes": [
									{
										"name": "networks",
										"list": {
											"computed_optional_required": "computed_optional",
											"element_type": {
												"string": {}
											},
											"validators": [
												{
													"custom": {
														"imports": [
															{
																"path": "github.com/hashicorp/terraform-plugin-framework-validators/listvalidator"
															}
														],
														"schema_definition": "listvalidator.UniqueValues()"
													}
												}
											]
										}
									}
								]
							},
							"description": "Property key is the network name"
						}
					}
				]
			}
		}
	],
	"version": "0.1"
}