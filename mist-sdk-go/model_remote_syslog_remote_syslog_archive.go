/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the RemoteSyslogRemoteSyslogArchive type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RemoteSyslogRemoteSyslogArchive{}

// RemoteSyslogRemoteSyslogArchive struct for RemoteSyslogRemoteSyslogArchive
type RemoteSyslogRemoteSyslogArchive struct {
	Files *int32 `json:"files,omitempty"`
	Size *string `json:"size,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RemoteSyslogRemoteSyslogArchive RemoteSyslogRemoteSyslogArchive

// NewRemoteSyslogRemoteSyslogArchive instantiates a new RemoteSyslogRemoteSyslogArchive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteSyslogRemoteSyslogArchive() *RemoteSyslogRemoteSyslogArchive {
	this := RemoteSyslogRemoteSyslogArchive{}
	return &this
}

// NewRemoteSyslogRemoteSyslogArchiveWithDefaults instantiates a new RemoteSyslogRemoteSyslogArchive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteSyslogRemoteSyslogArchiveWithDefaults() *RemoteSyslogRemoteSyslogArchive {
	this := RemoteSyslogRemoteSyslogArchive{}
	return &this
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *RemoteSyslogRemoteSyslogArchive) GetFiles() int32 {
	if o == nil || IsNil(o.Files) {
		var ret int32
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteSyslogRemoteSyslogArchive) GetFilesOk() (*int32, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *RemoteSyslogRemoteSyslogArchive) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given int32 and assigns it to the Files field.
func (o *RemoteSyslogRemoteSyslogArchive) SetFiles(v int32) {
	o.Files = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *RemoteSyslogRemoteSyslogArchive) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteSyslogRemoteSyslogArchive) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *RemoteSyslogRemoteSyslogArchive) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *RemoteSyslogRemoteSyslogArchive) SetSize(v string) {
	o.Size = &v
}

func (o RemoteSyslogRemoteSyslogArchive) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RemoteSyslogRemoteSyslogArchive) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RemoteSyslogRemoteSyslogArchive) UnmarshalJSON(data []byte) (err error) {
	varRemoteSyslogRemoteSyslogArchive := _RemoteSyslogRemoteSyslogArchive{}

	err = json.Unmarshal(data, &varRemoteSyslogRemoteSyslogArchive)

	if err != nil {
		return err
	}

	*o = RemoteSyslogRemoteSyslogArchive(varRemoteSyslogRemoteSyslogArchive)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "files")
		delete(additionalProperties, "size")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRemoteSyslogRemoteSyslogArchive struct {
	value *RemoteSyslogRemoteSyslogArchive
	isSet bool
}

func (v NullableRemoteSyslogRemoteSyslogArchive) Get() *RemoteSyslogRemoteSyslogArchive {
	return v.value
}

func (v *NullableRemoteSyslogRemoteSyslogArchive) Set(val *RemoteSyslogRemoteSyslogArchive) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteSyslogRemoteSyslogArchive) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteSyslogRemoteSyslogArchive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteSyslogRemoteSyslogArchive(val *RemoteSyslogRemoteSyslogArchive) *NullableRemoteSyslogRemoteSyslogArchive {
	return &NullableRemoteSyslogRemoteSyslogArchive{value: val, isSet: true}
}

func (v NullableRemoteSyslogRemoteSyslogArchive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteSyslogRemoteSyslogArchive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


