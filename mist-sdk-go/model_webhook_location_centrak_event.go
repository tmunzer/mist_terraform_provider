/*
Mist API

> Version: **2406.1.3** > > Date: **June 26, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.3
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WebhookLocationCentrakEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookLocationCentrakEvent{}

// WebhookLocationCentrakEvent struct for WebhookLocationCentrakEvent
type WebhookLocationCentrakEvent struct {
	// map id
	MapId *string `json:"map_id,omitempty"`
	// optional, BLE manufacturing company ID
	MfgCompanyId *int32 `json:"mfg_company_id,omitempty"`
	// optional, BLE manufacturing data in hex byte-string format (i.e. “112233AABBCC”)
	MfgData *string `json:"mfg_data,omitempty"`
	// timestamp of the event, epoch
	Timestamp *int32 `json:"timestamp,omitempty"`
	// optional, list of extended beacon info packets heard from the client, frame and sequence control included with the payload
	WifiBeaconExtendedInfo []WebhookLocationEventWifiBeaconExtendedInfoItems `json:"wifi_beacon_extended_info,omitempty"`
	// x, in meter
	X *float64 `json:"x,omitempty"`
	// y, in meter
	Y *float64 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookLocationCentrakEvent WebhookLocationCentrakEvent

// NewWebhookLocationCentrakEvent instantiates a new WebhookLocationCentrakEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookLocationCentrakEvent() *WebhookLocationCentrakEvent {
	this := WebhookLocationCentrakEvent{}
	return &this
}

// NewWebhookLocationCentrakEventWithDefaults instantiates a new WebhookLocationCentrakEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookLocationCentrakEventWithDefaults() *WebhookLocationCentrakEvent {
	this := WebhookLocationCentrakEvent{}
	return &this
}

// GetMapId returns the MapId field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetMapId() string {
	if o == nil || IsNil(o.MapId) {
		var ret string
		return ret
	}
	return *o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetMapIdOk() (*string, bool) {
	if o == nil || IsNil(o.MapId) {
		return nil, false
	}
	return o.MapId, true
}

// HasMapId returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasMapId() bool {
	if o != nil && !IsNil(o.MapId) {
		return true
	}

	return false
}

// SetMapId gets a reference to the given string and assigns it to the MapId field.
func (o *WebhookLocationCentrakEvent) SetMapId(v string) {
	o.MapId = &v
}

// GetMfgCompanyId returns the MfgCompanyId field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetMfgCompanyId() int32 {
	if o == nil || IsNil(o.MfgCompanyId) {
		var ret int32
		return ret
	}
	return *o.MfgCompanyId
}

// GetMfgCompanyIdOk returns a tuple with the MfgCompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetMfgCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MfgCompanyId) {
		return nil, false
	}
	return o.MfgCompanyId, true
}

// HasMfgCompanyId returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasMfgCompanyId() bool {
	if o != nil && !IsNil(o.MfgCompanyId) {
		return true
	}

	return false
}

// SetMfgCompanyId gets a reference to the given int32 and assigns it to the MfgCompanyId field.
func (o *WebhookLocationCentrakEvent) SetMfgCompanyId(v int32) {
	o.MfgCompanyId = &v
}

// GetMfgData returns the MfgData field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetMfgData() string {
	if o == nil || IsNil(o.MfgData) {
		var ret string
		return ret
	}
	return *o.MfgData
}

// GetMfgDataOk returns a tuple with the MfgData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetMfgDataOk() (*string, bool) {
	if o == nil || IsNil(o.MfgData) {
		return nil, false
	}
	return o.MfgData, true
}

// HasMfgData returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasMfgData() bool {
	if o != nil && !IsNil(o.MfgData) {
		return true
	}

	return false
}

// SetMfgData gets a reference to the given string and assigns it to the MfgData field.
func (o *WebhookLocationCentrakEvent) SetMfgData(v string) {
	o.MfgData = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *WebhookLocationCentrakEvent) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetWifiBeaconExtendedInfo returns the WifiBeaconExtendedInfo field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetWifiBeaconExtendedInfo() []WebhookLocationEventWifiBeaconExtendedInfoItems {
	if o == nil || IsNil(o.WifiBeaconExtendedInfo) {
		var ret []WebhookLocationEventWifiBeaconExtendedInfoItems
		return ret
	}
	return o.WifiBeaconExtendedInfo
}

// GetWifiBeaconExtendedInfoOk returns a tuple with the WifiBeaconExtendedInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetWifiBeaconExtendedInfoOk() ([]WebhookLocationEventWifiBeaconExtendedInfoItems, bool) {
	if o == nil || IsNil(o.WifiBeaconExtendedInfo) {
		return nil, false
	}
	return o.WifiBeaconExtendedInfo, true
}

// HasWifiBeaconExtendedInfo returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasWifiBeaconExtendedInfo() bool {
	if o != nil && !IsNil(o.WifiBeaconExtendedInfo) {
		return true
	}

	return false
}

// SetWifiBeaconExtendedInfo gets a reference to the given []WebhookLocationEventWifiBeaconExtendedInfoItems and assigns it to the WifiBeaconExtendedInfo field.
func (o *WebhookLocationCentrakEvent) SetWifiBeaconExtendedInfo(v []WebhookLocationEventWifiBeaconExtendedInfoItems) {
	o.WifiBeaconExtendedInfo = v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetX() float64 {
	if o == nil || IsNil(o.X) {
		var ret float64
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetXOk() (*float64, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float64 and assigns it to the X field.
func (o *WebhookLocationCentrakEvent) SetX(v float64) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *WebhookLocationCentrakEvent) GetY() float64 {
	if o == nil || IsNil(o.Y) {
		var ret float64
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationCentrakEvent) GetYOk() (*float64, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *WebhookLocationCentrakEvent) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float64 and assigns it to the Y field.
func (o *WebhookLocationCentrakEvent) SetY(v float64) {
	o.Y = &v
}

func (o WebhookLocationCentrakEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookLocationCentrakEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MapId) {
		toSerialize["map_id"] = o.MapId
	}
	if !IsNil(o.MfgCompanyId) {
		toSerialize["mfg_company_id"] = o.MfgCompanyId
	}
	if !IsNil(o.MfgData) {
		toSerialize["mfg_data"] = o.MfgData
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.WifiBeaconExtendedInfo) {
		toSerialize["wifi_beacon_extended_info"] = o.WifiBeaconExtendedInfo
	}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookLocationCentrakEvent) UnmarshalJSON(data []byte) (err error) {
	varWebhookLocationCentrakEvent := _WebhookLocationCentrakEvent{}

	err = json.Unmarshal(data, &varWebhookLocationCentrakEvent)

	if err != nil {
		return err
	}

	*o = WebhookLocationCentrakEvent(varWebhookLocationCentrakEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "mfg_company_id")
		delete(additionalProperties, "mfg_data")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "wifi_beacon_extended_info")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookLocationCentrakEvent struct {
	value *WebhookLocationCentrakEvent
	isSet bool
}

func (v NullableWebhookLocationCentrakEvent) Get() *WebhookLocationCentrakEvent {
	return v.value
}

func (v *NullableWebhookLocationCentrakEvent) Set(val *WebhookLocationCentrakEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookLocationCentrakEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookLocationCentrakEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookLocationCentrakEvent(val *WebhookLocationCentrakEvent) *NullableWebhookLocationCentrakEvent {
	return &NullableWebhookLocationCentrakEvent{value: val, isSet: true}
}

func (v NullableWebhookLocationCentrakEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookLocationCentrakEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


