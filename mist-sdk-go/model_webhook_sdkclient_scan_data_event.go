/*
Mist API

> Version: **2406.1.10** > > Date: **June 29, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.10
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookSdkclientScanDataEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSdkclientScanDataEvent{}

// WebhookSdkclientScanDataEvent struct for WebhookSdkclientScanDataEvent
type WebhookSdkclientScanDataEvent struct {
	// mac address of the AP the client is connected to
	ConnectionAp string `json:"connection_ap"`
	// 5GHz or 2.4GHz band, of the BSSID the client is connected to
	ConnectionBand string `json:"connection_band"`
	// BSSID of the AP the client is connected to
	ConnectionBssid string `json:"connection_bssid"`
	// channel of the band the client is connected to
	ConnectionChannel int32 `json:"connection_channel"`
	// RSSI of the client’s connection to the AP/BSSID
	ConnectionRssi float32 `json:"connection_rssi"`
	// time client last seen with scan data
	LastSeen float32 `json:"last_seen"`
	// the client’s mac
	Mac string `json:"mac"`
	ScanData []WebhookSdkclientScanDataEventScanDataItem `json:"scan_data,omitempty"`
	SiteId string `json:"site_id"`
	AdditionalProperties map[string]interface{}
}

type _WebhookSdkclientScanDataEvent WebhookSdkclientScanDataEvent

// NewWebhookSdkclientScanDataEvent instantiates a new WebhookSdkclientScanDataEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSdkclientScanDataEvent(connectionAp string, connectionBand string, connectionBssid string, connectionChannel int32, connectionRssi float32, lastSeen float32, mac string, siteId string) *WebhookSdkclientScanDataEvent {
	this := WebhookSdkclientScanDataEvent{}
	this.ConnectionAp = connectionAp
	this.ConnectionBand = connectionBand
	this.ConnectionBssid = connectionBssid
	this.ConnectionChannel = connectionChannel
	this.ConnectionRssi = connectionRssi
	this.LastSeen = lastSeen
	this.Mac = mac
	this.SiteId = siteId
	return &this
}

// NewWebhookSdkclientScanDataEventWithDefaults instantiates a new WebhookSdkclientScanDataEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSdkclientScanDataEventWithDefaults() *WebhookSdkclientScanDataEvent {
	this := WebhookSdkclientScanDataEvent{}
	return &this
}

// GetConnectionAp returns the ConnectionAp field value
func (o *WebhookSdkclientScanDataEvent) GetConnectionAp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionAp
}

// GetConnectionApOk returns a tuple with the ConnectionAp field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetConnectionApOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionAp, true
}

// SetConnectionAp sets field value
func (o *WebhookSdkclientScanDataEvent) SetConnectionAp(v string) {
	o.ConnectionAp = v
}

// GetConnectionBand returns the ConnectionBand field value
func (o *WebhookSdkclientScanDataEvent) GetConnectionBand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionBand
}

// GetConnectionBandOk returns a tuple with the ConnectionBand field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetConnectionBandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionBand, true
}

// SetConnectionBand sets field value
func (o *WebhookSdkclientScanDataEvent) SetConnectionBand(v string) {
	o.ConnectionBand = v
}

// GetConnectionBssid returns the ConnectionBssid field value
func (o *WebhookSdkclientScanDataEvent) GetConnectionBssid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectionBssid
}

// GetConnectionBssidOk returns a tuple with the ConnectionBssid field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetConnectionBssidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionBssid, true
}

// SetConnectionBssid sets field value
func (o *WebhookSdkclientScanDataEvent) SetConnectionBssid(v string) {
	o.ConnectionBssid = v
}

// GetConnectionChannel returns the ConnectionChannel field value
func (o *WebhookSdkclientScanDataEvent) GetConnectionChannel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ConnectionChannel
}

// GetConnectionChannelOk returns a tuple with the ConnectionChannel field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetConnectionChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionChannel, true
}

// SetConnectionChannel sets field value
func (o *WebhookSdkclientScanDataEvent) SetConnectionChannel(v int32) {
	o.ConnectionChannel = v
}

// GetConnectionRssi returns the ConnectionRssi field value
func (o *WebhookSdkclientScanDataEvent) GetConnectionRssi() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ConnectionRssi
}

// GetConnectionRssiOk returns a tuple with the ConnectionRssi field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetConnectionRssiOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionRssi, true
}

// SetConnectionRssi sets field value
func (o *WebhookSdkclientScanDataEvent) SetConnectionRssi(v float32) {
	o.ConnectionRssi = v
}

// GetLastSeen returns the LastSeen field value
func (o *WebhookSdkclientScanDataEvent) GetLastSeen() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LastSeen
}

// GetLastSeenOk returns a tuple with the LastSeen field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetLastSeenOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastSeen, true
}

// SetLastSeen sets field value
func (o *WebhookSdkclientScanDataEvent) SetLastSeen(v float32) {
	o.LastSeen = v
}

// GetMac returns the Mac field value
func (o *WebhookSdkclientScanDataEvent) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *WebhookSdkclientScanDataEvent) SetMac(v string) {
	o.Mac = v
}

// GetScanData returns the ScanData field value if set, zero value otherwise.
func (o *WebhookSdkclientScanDataEvent) GetScanData() []WebhookSdkclientScanDataEventScanDataItem {
	if o == nil || IsNil(o.ScanData) {
		var ret []WebhookSdkclientScanDataEventScanDataItem
		return ret
	}
	return o.ScanData
}

// GetScanDataOk returns a tuple with the ScanData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetScanDataOk() ([]WebhookSdkclientScanDataEventScanDataItem, bool) {
	if o == nil || IsNil(o.ScanData) {
		return nil, false
	}
	return o.ScanData, true
}

// HasScanData returns a boolean if a field has been set.
func (o *WebhookSdkclientScanDataEvent) HasScanData() bool {
	if o != nil && !IsNil(o.ScanData) {
		return true
	}

	return false
}

// SetScanData gets a reference to the given []WebhookSdkclientScanDataEventScanDataItem and assigns it to the ScanData field.
func (o *WebhookSdkclientScanDataEvent) SetScanData(v []WebhookSdkclientScanDataEventScanDataItem) {
	o.ScanData = v
}

// GetSiteId returns the SiteId field value
func (o *WebhookSdkclientScanDataEvent) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEvent) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *WebhookSdkclientScanDataEvent) SetSiteId(v string) {
	o.SiteId = v
}

func (o WebhookSdkclientScanDataEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSdkclientScanDataEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connection_ap"] = o.ConnectionAp
	toSerialize["connection_band"] = o.ConnectionBand
	toSerialize["connection_bssid"] = o.ConnectionBssid
	toSerialize["connection_channel"] = o.ConnectionChannel
	toSerialize["connection_rssi"] = o.ConnectionRssi
	toSerialize["last_seen"] = o.LastSeen
	toSerialize["mac"] = o.Mac
	if !IsNil(o.ScanData) {
		toSerialize["scan_data"] = o.ScanData
	}
	toSerialize["site_id"] = o.SiteId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookSdkclientScanDataEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connection_ap",
		"connection_band",
		"connection_bssid",
		"connection_channel",
		"connection_rssi",
		"last_seen",
		"mac",
		"site_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookSdkclientScanDataEvent := _WebhookSdkclientScanDataEvent{}

	err = json.Unmarshal(data, &varWebhookSdkclientScanDataEvent)

	if err != nil {
		return err
	}

	*o = WebhookSdkclientScanDataEvent(varWebhookSdkclientScanDataEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "connection_ap")
		delete(additionalProperties, "connection_band")
		delete(additionalProperties, "connection_bssid")
		delete(additionalProperties, "connection_channel")
		delete(additionalProperties, "connection_rssi")
		delete(additionalProperties, "last_seen")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "scan_data")
		delete(additionalProperties, "site_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookSdkclientScanDataEvent struct {
	value *WebhookSdkclientScanDataEvent
	isSet bool
}

func (v NullableWebhookSdkclientScanDataEvent) Get() *WebhookSdkclientScanDataEvent {
	return v.value
}

func (v *NullableWebhookSdkclientScanDataEvent) Set(val *WebhookSdkclientScanDataEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSdkclientScanDataEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSdkclientScanDataEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSdkclientScanDataEvent(val *WebhookSdkclientScanDataEvent) *NullableWebhookSdkclientScanDataEvent {
	return &NullableWebhookSdkclientScanDataEvent{value: val, isSet: true}
}

func (v NullableWebhookSdkclientScanDataEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSdkclientScanDataEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


