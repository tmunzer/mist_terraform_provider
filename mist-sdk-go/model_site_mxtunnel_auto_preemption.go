/*
Mist API

> Version: **2406.1.7** > > Date: **June 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.7
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the SiteMxtunnelAutoPreemption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SiteMxtunnelAutoPreemption{}

// SiteMxtunnelAutoPreemption struct for SiteMxtunnelAutoPreemption
type SiteMxtunnelAutoPreemption struct {
	DayOfWeek *DayOfWeek `json:"day_of_week,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	TimeOfDay *string `json:"time_of_day,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SiteMxtunnelAutoPreemption SiteMxtunnelAutoPreemption

// NewSiteMxtunnelAutoPreemption instantiates a new SiteMxtunnelAutoPreemption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteMxtunnelAutoPreemption() *SiteMxtunnelAutoPreemption {
	this := SiteMxtunnelAutoPreemption{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// NewSiteMxtunnelAutoPreemptionWithDefaults instantiates a new SiteMxtunnelAutoPreemption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteMxtunnelAutoPreemptionWithDefaults() *SiteMxtunnelAutoPreemption {
	this := SiteMxtunnelAutoPreemption{}
	var enabled bool = false
	this.Enabled = &enabled
	return &this
}

// GetDayOfWeek returns the DayOfWeek field value if set, zero value otherwise.
func (o *SiteMxtunnelAutoPreemption) GetDayOfWeek() DayOfWeek {
	if o == nil || IsNil(o.DayOfWeek) {
		var ret DayOfWeek
		return ret
	}
	return *o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMxtunnelAutoPreemption) GetDayOfWeekOk() (*DayOfWeek, bool) {
	if o == nil || IsNil(o.DayOfWeek) {
		return nil, false
	}
	return o.DayOfWeek, true
}

// HasDayOfWeek returns a boolean if a field has been set.
func (o *SiteMxtunnelAutoPreemption) HasDayOfWeek() bool {
	if o != nil && !IsNil(o.DayOfWeek) {
		return true
	}

	return false
}

// SetDayOfWeek gets a reference to the given DayOfWeek and assigns it to the DayOfWeek field.
func (o *SiteMxtunnelAutoPreemption) SetDayOfWeek(v DayOfWeek) {
	o.DayOfWeek = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *SiteMxtunnelAutoPreemption) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMxtunnelAutoPreemption) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *SiteMxtunnelAutoPreemption) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *SiteMxtunnelAutoPreemption) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTimeOfDay returns the TimeOfDay field value if set, zero value otherwise.
func (o *SiteMxtunnelAutoPreemption) GetTimeOfDay() string {
	if o == nil || IsNil(o.TimeOfDay) {
		var ret string
		return ret
	}
	return *o.TimeOfDay
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SiteMxtunnelAutoPreemption) GetTimeOfDayOk() (*string, bool) {
	if o == nil || IsNil(o.TimeOfDay) {
		return nil, false
	}
	return o.TimeOfDay, true
}

// HasTimeOfDay returns a boolean if a field has been set.
func (o *SiteMxtunnelAutoPreemption) HasTimeOfDay() bool {
	if o != nil && !IsNil(o.TimeOfDay) {
		return true
	}

	return false
}

// SetTimeOfDay gets a reference to the given string and assigns it to the TimeOfDay field.
func (o *SiteMxtunnelAutoPreemption) SetTimeOfDay(v string) {
	o.TimeOfDay = &v
}

func (o SiteMxtunnelAutoPreemption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SiteMxtunnelAutoPreemption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DayOfWeek) {
		toSerialize["day_of_week"] = o.DayOfWeek
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.TimeOfDay) {
		toSerialize["time_of_day"] = o.TimeOfDay
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SiteMxtunnelAutoPreemption) UnmarshalJSON(data []byte) (err error) {
	varSiteMxtunnelAutoPreemption := _SiteMxtunnelAutoPreemption{}

	err = json.Unmarshal(data, &varSiteMxtunnelAutoPreemption)

	if err != nil {
		return err
	}

	*o = SiteMxtunnelAutoPreemption(varSiteMxtunnelAutoPreemption)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "day_of_week")
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "time_of_day")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSiteMxtunnelAutoPreemption struct {
	value *SiteMxtunnelAutoPreemption
	isSet bool
}

func (v NullableSiteMxtunnelAutoPreemption) Get() *SiteMxtunnelAutoPreemption {
	return v.value
}

func (v *NullableSiteMxtunnelAutoPreemption) Set(val *SiteMxtunnelAutoPreemption) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteMxtunnelAutoPreemption) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteMxtunnelAutoPreemption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteMxtunnelAutoPreemption(val *SiteMxtunnelAutoPreemption) *NullableSiteMxtunnelAutoPreemption {
	return &NullableSiteMxtunnelAutoPreemption{value: val, isSet: true}
}

func (v NullableSiteMxtunnelAutoPreemption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteMxtunnelAutoPreemption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


