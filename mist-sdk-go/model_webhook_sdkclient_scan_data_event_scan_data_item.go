/*
Mist API

> Version: **2406.1.10** > > Date: **June 29, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.10
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookSdkclientScanDataEventScanDataItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSdkclientScanDataEventScanDataItem{}

// WebhookSdkclientScanDataEventScanDataItem struct for WebhookSdkclientScanDataEventScanDataItem
type WebhookSdkclientScanDataEventScanDataItem struct {
	// mac address of the AP associated with the BSSID scanned
	Ap string `json:"ap"`
	Band WebhookSdkclientScanDataEventScanDataItemBand `json:"band"`
	// BSSID found during client’s background scan for wifi
	Bssid string `json:"bssid"`
	// channel of the band found in the scan
	Channel int32 `json:"channel"`
	// client’s RSSI relative to the BSSID scanned
	Rssi float32 `json:"rssi"`
	// ESSID containing the BSSID scanned
	Ssid string `json:"ssid"`
	// time the scan of the particular BSSID occurred
	Timestamp float32 `json:"timestamp"`
	AdditionalProperties map[string]interface{}
}

type _WebhookSdkclientScanDataEventScanDataItem WebhookSdkclientScanDataEventScanDataItem

// NewWebhookSdkclientScanDataEventScanDataItem instantiates a new WebhookSdkclientScanDataEventScanDataItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSdkclientScanDataEventScanDataItem(ap string, band WebhookSdkclientScanDataEventScanDataItemBand, bssid string, channel int32, rssi float32, ssid string, timestamp float32) *WebhookSdkclientScanDataEventScanDataItem {
	this := WebhookSdkclientScanDataEventScanDataItem{}
	this.Ap = ap
	this.Band = band
	this.Bssid = bssid
	this.Channel = channel
	this.Rssi = rssi
	this.Ssid = ssid
	this.Timestamp = timestamp
	return &this
}

// NewWebhookSdkclientScanDataEventScanDataItemWithDefaults instantiates a new WebhookSdkclientScanDataEventScanDataItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSdkclientScanDataEventScanDataItemWithDefaults() *WebhookSdkclientScanDataEventScanDataItem {
	this := WebhookSdkclientScanDataEventScanDataItem{}
	return &this
}

// GetAp returns the Ap field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetAp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ap
}

// GetApOk returns a tuple with the Ap field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetApOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ap, true
}

// SetAp sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetAp(v string) {
	o.Ap = v
}

// GetBand returns the Band field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetBand() WebhookSdkclientScanDataEventScanDataItemBand {
	if o == nil {
		var ret WebhookSdkclientScanDataEventScanDataItemBand
		return ret
	}

	return o.Band
}

// GetBandOk returns a tuple with the Band field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetBandOk() (*WebhookSdkclientScanDataEventScanDataItemBand, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Band, true
}

// SetBand sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetBand(v WebhookSdkclientScanDataEventScanDataItemBand) {
	o.Band = v
}

// GetBssid returns the Bssid field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetBssid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bssid
}

// GetBssidOk returns a tuple with the Bssid field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetBssidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bssid, true
}

// SetBssid sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetBssid(v string) {
	o.Bssid = v
}

// GetChannel returns the Channel field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetChannel() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Channel
}

// GetChannelOk returns a tuple with the Channel field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetChannelOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Channel, true
}

// SetChannel sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetChannel(v int32) {
	o.Channel = v
}

// GetRssi returns the Rssi field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetRssi() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetRssiOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rssi, true
}

// SetRssi sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetRssi(v float32) {
	o.Rssi = v
}

// GetSsid returns the Ssid field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetSsid(v string) {
	o.Ssid = v
}

// GetTimestamp returns the Timestamp field value
func (o *WebhookSdkclientScanDataEventScanDataItem) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookSdkclientScanDataEventScanDataItem) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WebhookSdkclientScanDataEventScanDataItem) SetTimestamp(v float32) {
	o.Timestamp = v
}

func (o WebhookSdkclientScanDataEventScanDataItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSdkclientScanDataEventScanDataItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ap"] = o.Ap
	toSerialize["band"] = o.Band
	toSerialize["bssid"] = o.Bssid
	toSerialize["channel"] = o.Channel
	toSerialize["rssi"] = o.Rssi
	toSerialize["ssid"] = o.Ssid
	toSerialize["timestamp"] = o.Timestamp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookSdkclientScanDataEventScanDataItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ap",
		"band",
		"bssid",
		"channel",
		"rssi",
		"ssid",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookSdkclientScanDataEventScanDataItem := _WebhookSdkclientScanDataEventScanDataItem{}

	err = json.Unmarshal(data, &varWebhookSdkclientScanDataEventScanDataItem)

	if err != nil {
		return err
	}

	*o = WebhookSdkclientScanDataEventScanDataItem(varWebhookSdkclientScanDataEventScanDataItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "band")
		delete(additionalProperties, "bssid")
		delete(additionalProperties, "channel")
		delete(additionalProperties, "rssi")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookSdkclientScanDataEventScanDataItem struct {
	value *WebhookSdkclientScanDataEventScanDataItem
	isSet bool
}

func (v NullableWebhookSdkclientScanDataEventScanDataItem) Get() *WebhookSdkclientScanDataEventScanDataItem {
	return v.value
}

func (v *NullableWebhookSdkclientScanDataEventScanDataItem) Set(val *WebhookSdkclientScanDataEventScanDataItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSdkclientScanDataEventScanDataItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSdkclientScanDataEventScanDataItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSdkclientScanDataEventScanDataItem(val *WebhookSdkclientScanDataEventScanDataItem) *NullableWebhookSdkclientScanDataEventScanDataItem {
	return &NullableWebhookSdkclientScanDataEventScanDataItem{value: val, isSet: true}
}

func (v NullableWebhookSdkclientScanDataEventScanDataItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSdkclientScanDataEventScanDataItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


