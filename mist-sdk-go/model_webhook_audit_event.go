/*
Mist API

> Version: **2406.1.3** > > Date: **June 26, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.3
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookAuditEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookAuditEvent{}

// WebhookAuditEvent struct for WebhookAuditEvent
type WebhookAuditEvent struct {
	AdminName string `json:"admin_name"`
	DeviceId string `json:"device_id"`
	Id string `json:"id"`
	Message string `json:"message"`
	OrgId string `json:"org_id"`
	SiteId string `json:"site_id"`
	SrcIp string `json:"src_ip"`
	Timestamp float32 `json:"timestamp"`
	AdditionalProperties map[string]interface{}
}

type _WebhookAuditEvent WebhookAuditEvent

// NewWebhookAuditEvent instantiates a new WebhookAuditEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookAuditEvent(adminName string, deviceId string, id string, message string, orgId string, siteId string, srcIp string, timestamp float32) *WebhookAuditEvent {
	this := WebhookAuditEvent{}
	this.AdminName = adminName
	this.DeviceId = deviceId
	this.Id = id
	this.Message = message
	this.OrgId = orgId
	this.SiteId = siteId
	this.SrcIp = srcIp
	this.Timestamp = timestamp
	return &this
}

// NewWebhookAuditEventWithDefaults instantiates a new WebhookAuditEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookAuditEventWithDefaults() *WebhookAuditEvent {
	this := WebhookAuditEvent{}
	return &this
}

// GetAdminName returns the AdminName field value
func (o *WebhookAuditEvent) GetAdminName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AdminName
}

// GetAdminNameOk returns a tuple with the AdminName field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetAdminNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminName, true
}

// SetAdminName sets field value
func (o *WebhookAuditEvent) SetAdminName(v string) {
	o.AdminName = v
}

// GetDeviceId returns the DeviceId field value
func (o *WebhookAuditEvent) GetDeviceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeviceId
}

// GetDeviceIdOk returns a tuple with the DeviceId field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetDeviceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeviceId, true
}

// SetDeviceId sets field value
func (o *WebhookAuditEvent) SetDeviceId(v string) {
	o.DeviceId = v
}

// GetId returns the Id field value
func (o *WebhookAuditEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookAuditEvent) SetId(v string) {
	o.Id = v
}

// GetMessage returns the Message field value
func (o *WebhookAuditEvent) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *WebhookAuditEvent) SetMessage(v string) {
	o.Message = v
}

// GetOrgId returns the OrgId field value
func (o *WebhookAuditEvent) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *WebhookAuditEvent) SetOrgId(v string) {
	o.OrgId = v
}

// GetSiteId returns the SiteId field value
func (o *WebhookAuditEvent) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *WebhookAuditEvent) SetSiteId(v string) {
	o.SiteId = v
}

// GetSrcIp returns the SrcIp field value
func (o *WebhookAuditEvent) GetSrcIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SrcIp
}

// GetSrcIpOk returns a tuple with the SrcIp field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetSrcIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SrcIp, true
}

// SetSrcIp sets field value
func (o *WebhookAuditEvent) SetSrcIp(v string) {
	o.SrcIp = v
}

// GetTimestamp returns the Timestamp field value
func (o *WebhookAuditEvent) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookAuditEvent) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WebhookAuditEvent) SetTimestamp(v float32) {
	o.Timestamp = v
}

func (o WebhookAuditEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookAuditEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["admin_name"] = o.AdminName
	toSerialize["device_id"] = o.DeviceId
	toSerialize["id"] = o.Id
	toSerialize["message"] = o.Message
	toSerialize["org_id"] = o.OrgId
	toSerialize["site_id"] = o.SiteId
	toSerialize["src_ip"] = o.SrcIp
	toSerialize["timestamp"] = o.Timestamp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookAuditEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"admin_name",
		"device_id",
		"id",
		"message",
		"org_id",
		"site_id",
		"src_ip",
		"timestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookAuditEvent := _WebhookAuditEvent{}

	err = json.Unmarshal(data, &varWebhookAuditEvent)

	if err != nil {
		return err
	}

	*o = WebhookAuditEvent(varWebhookAuditEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "admin_name")
		delete(additionalProperties, "device_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "message")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "src_ip")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookAuditEvent struct {
	value *WebhookAuditEvent
	isSet bool
}

func (v NullableWebhookAuditEvent) Get() *WebhookAuditEvent {
	return v.value
}

func (v *NullableWebhookAuditEvent) Set(val *WebhookAuditEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookAuditEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookAuditEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookAuditEvent(val *WebhookAuditEvent) *NullableWebhookAuditEvent {
	return &NullableWebhookAuditEvent{value: val, isSet: true}
}

func (v NullableWebhookAuditEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookAuditEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


