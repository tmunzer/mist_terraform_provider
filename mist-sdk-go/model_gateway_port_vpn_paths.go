/*
Mist API

> Version: **2406.1.3** > > Date: **June 26, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.3
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayPortVpnPaths type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayPortVpnPaths{}

// GatewayPortVpnPaths struct for GatewayPortVpnPaths
type GatewayPortVpnPaths struct {
	// for a given VPN, when path_selection.strategy=simple, the preference for a path (lower is preferred)
	Preference *int32 `json:"preference,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayPortVpnPaths GatewayPortVpnPaths

// NewGatewayPortVpnPaths instantiates a new GatewayPortVpnPaths object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayPortVpnPaths() *GatewayPortVpnPaths {
	this := GatewayPortVpnPaths{}
	return &this
}

// NewGatewayPortVpnPathsWithDefaults instantiates a new GatewayPortVpnPaths object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayPortVpnPathsWithDefaults() *GatewayPortVpnPaths {
	this := GatewayPortVpnPaths{}
	return &this
}

// GetPreference returns the Preference field value if set, zero value otherwise.
func (o *GatewayPortVpnPaths) GetPreference() int32 {
	if o == nil || IsNil(o.Preference) {
		var ret int32
		return ret
	}
	return *o.Preference
}

// GetPreferenceOk returns a tuple with the Preference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayPortVpnPaths) GetPreferenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Preference) {
		return nil, false
	}
	return o.Preference, true
}

// HasPreference returns a boolean if a field has been set.
func (o *GatewayPortVpnPaths) HasPreference() bool {
	if o != nil && !IsNil(o.Preference) {
		return true
	}

	return false
}

// SetPreference gets a reference to the given int32 and assigns it to the Preference field.
func (o *GatewayPortVpnPaths) SetPreference(v int32) {
	o.Preference = &v
}

func (o GatewayPortVpnPaths) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayPortVpnPaths) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Preference) {
		toSerialize["preference"] = o.Preference
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayPortVpnPaths) UnmarshalJSON(data []byte) (err error) {
	varGatewayPortVpnPaths := _GatewayPortVpnPaths{}

	err = json.Unmarshal(data, &varGatewayPortVpnPaths)

	if err != nil {
		return err
	}

	*o = GatewayPortVpnPaths(varGatewayPortVpnPaths)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "preference")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayPortVpnPaths struct {
	value *GatewayPortVpnPaths
	isSet bool
}

func (v NullableGatewayPortVpnPaths) Get() *GatewayPortVpnPaths {
	return v.value
}

func (v *NullableGatewayPortVpnPaths) Set(val *GatewayPortVpnPaths) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayPortVpnPaths) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayPortVpnPaths) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayPortVpnPaths(val *GatewayPortVpnPaths) *NullableGatewayPortVpnPaths {
	return &NullableGatewayPortVpnPaths{value: val, isSet: true}
}

func (v NullableGatewayPortVpnPaths) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayPortVpnPaths) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


