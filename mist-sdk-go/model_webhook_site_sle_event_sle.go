/*
Mist API

> Version: **2406.1.10** > > Date: **June 29, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.10
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WebhookSiteSleEventSle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookSiteSleEventSle{}

// WebhookSiteSleEventSle struct for WebhookSiteSleEventSle
type WebhookSiteSleEventSle struct {
	ApAvailability *float32 `json:"ap-availability,omitempty"`
	SuccessfulConnect *float32 `json:"successful-connect,omitempty"`
	TimeToConnect *float32 `json:"time-to-connect,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookSiteSleEventSle WebhookSiteSleEventSle

// NewWebhookSiteSleEventSle instantiates a new WebhookSiteSleEventSle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookSiteSleEventSle() *WebhookSiteSleEventSle {
	this := WebhookSiteSleEventSle{}
	return &this
}

// NewWebhookSiteSleEventSleWithDefaults instantiates a new WebhookSiteSleEventSle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookSiteSleEventSleWithDefaults() *WebhookSiteSleEventSle {
	this := WebhookSiteSleEventSle{}
	return &this
}

// GetApAvailability returns the ApAvailability field value if set, zero value otherwise.
func (o *WebhookSiteSleEventSle) GetApAvailability() float32 {
	if o == nil || IsNil(o.ApAvailability) {
		var ret float32
		return ret
	}
	return *o.ApAvailability
}

// GetApAvailabilityOk returns a tuple with the ApAvailability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSiteSleEventSle) GetApAvailabilityOk() (*float32, bool) {
	if o == nil || IsNil(o.ApAvailability) {
		return nil, false
	}
	return o.ApAvailability, true
}

// HasApAvailability returns a boolean if a field has been set.
func (o *WebhookSiteSleEventSle) HasApAvailability() bool {
	if o != nil && !IsNil(o.ApAvailability) {
		return true
	}

	return false
}

// SetApAvailability gets a reference to the given float32 and assigns it to the ApAvailability field.
func (o *WebhookSiteSleEventSle) SetApAvailability(v float32) {
	o.ApAvailability = &v
}

// GetSuccessfulConnect returns the SuccessfulConnect field value if set, zero value otherwise.
func (o *WebhookSiteSleEventSle) GetSuccessfulConnect() float32 {
	if o == nil || IsNil(o.SuccessfulConnect) {
		var ret float32
		return ret
	}
	return *o.SuccessfulConnect
}

// GetSuccessfulConnectOk returns a tuple with the SuccessfulConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSiteSleEventSle) GetSuccessfulConnectOk() (*float32, bool) {
	if o == nil || IsNil(o.SuccessfulConnect) {
		return nil, false
	}
	return o.SuccessfulConnect, true
}

// HasSuccessfulConnect returns a boolean if a field has been set.
func (o *WebhookSiteSleEventSle) HasSuccessfulConnect() bool {
	if o != nil && !IsNil(o.SuccessfulConnect) {
		return true
	}

	return false
}

// SetSuccessfulConnect gets a reference to the given float32 and assigns it to the SuccessfulConnect field.
func (o *WebhookSiteSleEventSle) SetSuccessfulConnect(v float32) {
	o.SuccessfulConnect = &v
}

// GetTimeToConnect returns the TimeToConnect field value if set, zero value otherwise.
func (o *WebhookSiteSleEventSle) GetTimeToConnect() float32 {
	if o == nil || IsNil(o.TimeToConnect) {
		var ret float32
		return ret
	}
	return *o.TimeToConnect
}

// GetTimeToConnectOk returns a tuple with the TimeToConnect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookSiteSleEventSle) GetTimeToConnectOk() (*float32, bool) {
	if o == nil || IsNil(o.TimeToConnect) {
		return nil, false
	}
	return o.TimeToConnect, true
}

// HasTimeToConnect returns a boolean if a field has been set.
func (o *WebhookSiteSleEventSle) HasTimeToConnect() bool {
	if o != nil && !IsNil(o.TimeToConnect) {
		return true
	}

	return false
}

// SetTimeToConnect gets a reference to the given float32 and assigns it to the TimeToConnect field.
func (o *WebhookSiteSleEventSle) SetTimeToConnect(v float32) {
	o.TimeToConnect = &v
}

func (o WebhookSiteSleEventSle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookSiteSleEventSle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApAvailability) {
		toSerialize["ap-availability"] = o.ApAvailability
	}
	if !IsNil(o.SuccessfulConnect) {
		toSerialize["successful-connect"] = o.SuccessfulConnect
	}
	if !IsNil(o.TimeToConnect) {
		toSerialize["time-to-connect"] = o.TimeToConnect
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookSiteSleEventSle) UnmarshalJSON(data []byte) (err error) {
	varWebhookSiteSleEventSle := _WebhookSiteSleEventSle{}

	err = json.Unmarshal(data, &varWebhookSiteSleEventSle)

	if err != nil {
		return err
	}

	*o = WebhookSiteSleEventSle(varWebhookSiteSleEventSle)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap-availability")
		delete(additionalProperties, "successful-connect")
		delete(additionalProperties, "time-to-connect")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookSiteSleEventSle struct {
	value *WebhookSiteSleEventSle
	isSet bool
}

func (v NullableWebhookSiteSleEventSle) Get() *WebhookSiteSleEventSle {
	return v.value
}

func (v *NullableWebhookSiteSleEventSle) Set(val *WebhookSiteSleEventSle) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookSiteSleEventSle) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookSiteSleEventSle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookSiteSleEventSle(val *WebhookSiteSleEventSle) *NullableWebhookSiteSleEventSle {
	return &NullableWebhookSiteSleEventSle{value: val, isSet: true}
}

func (v NullableWebhookSiteSleEventSle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookSiteSleEventSle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


