/*
Mist API

> Version: **2406.1.7** > > Date: **June 27, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.7
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookOccupancyAlertsEventAlertEventsItems type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookOccupancyAlertsEventAlertEventsItems{}

// WebhookOccupancyAlertsEventAlertEventsItems struct for WebhookOccupancyAlertsEventAlertEventsItems
type WebhookOccupancyAlertsEventAlertEventsItems struct {
	CurrentOccupancy int32 `json:"current_occupancy"`
	MapId string `json:"map_id"`
	OccupancyLimit int32 `json:"occupancy_limit"`
	OrgId string `json:"org_id"`
	Timestamp float32 `json:"timestamp"`
	Type WebhookOccupancyAlertType `json:"type"`
	ZoneId string `json:"zone_id"`
	ZoneName string `json:"zone_name"`
	AdditionalProperties map[string]interface{}
}

type _WebhookOccupancyAlertsEventAlertEventsItems WebhookOccupancyAlertsEventAlertEventsItems

// NewWebhookOccupancyAlertsEventAlertEventsItems instantiates a new WebhookOccupancyAlertsEventAlertEventsItems object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookOccupancyAlertsEventAlertEventsItems(currentOccupancy int32, mapId string, occupancyLimit int32, orgId string, timestamp float32, type_ WebhookOccupancyAlertType, zoneId string, zoneName string) *WebhookOccupancyAlertsEventAlertEventsItems {
	this := WebhookOccupancyAlertsEventAlertEventsItems{}
	this.CurrentOccupancy = currentOccupancy
	this.MapId = mapId
	this.OccupancyLimit = occupancyLimit
	this.OrgId = orgId
	this.Timestamp = timestamp
	this.Type = type_
	this.ZoneId = zoneId
	this.ZoneName = zoneName
	return &this
}

// NewWebhookOccupancyAlertsEventAlertEventsItemsWithDefaults instantiates a new WebhookOccupancyAlertsEventAlertEventsItems object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookOccupancyAlertsEventAlertEventsItemsWithDefaults() *WebhookOccupancyAlertsEventAlertEventsItems {
	this := WebhookOccupancyAlertsEventAlertEventsItems{}
	return &this
}

// GetCurrentOccupancy returns the CurrentOccupancy field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetCurrentOccupancy() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CurrentOccupancy
}

// GetCurrentOccupancyOk returns a tuple with the CurrentOccupancy field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetCurrentOccupancyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrentOccupancy, true
}

// SetCurrentOccupancy sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetCurrentOccupancy(v int32) {
	o.CurrentOccupancy = v
}

// GetMapId returns the MapId field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetMapId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetMapIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapId, true
}

// SetMapId sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetMapId(v string) {
	o.MapId = v
}

// GetOccupancyLimit returns the OccupancyLimit field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetOccupancyLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OccupancyLimit
}

// GetOccupancyLimitOk returns a tuple with the OccupancyLimit field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetOccupancyLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OccupancyLimit, true
}

// SetOccupancyLimit sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetOccupancyLimit(v int32) {
	o.OccupancyLimit = v
}

// GetOrgId returns the OrgId field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetOrgId(v string) {
	o.OrgId = v
}

// GetTimestamp returns the Timestamp field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetTimestamp(v float32) {
	o.Timestamp = v
}

// GetType returns the Type field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetType() WebhookOccupancyAlertType {
	if o == nil {
		var ret WebhookOccupancyAlertType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetTypeOk() (*WebhookOccupancyAlertType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetType(v WebhookOccupancyAlertType) {
	o.Type = v
}

// GetZoneId returns the ZoneId field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetZoneId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneId
}

// GetZoneIdOk returns a tuple with the ZoneId field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetZoneIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneId, true
}

// SetZoneId sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetZoneId(v string) {
	o.ZoneId = v
}

// GetZoneName returns the ZoneName field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetZoneName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ZoneName
}

// GetZoneNameOk returns a tuple with the ZoneName field value
// and a boolean to check if the value has been set.
func (o *WebhookOccupancyAlertsEventAlertEventsItems) GetZoneNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ZoneName, true
}

// SetZoneName sets field value
func (o *WebhookOccupancyAlertsEventAlertEventsItems) SetZoneName(v string) {
	o.ZoneName = v
}

func (o WebhookOccupancyAlertsEventAlertEventsItems) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookOccupancyAlertsEventAlertEventsItems) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["current_occupancy"] = o.CurrentOccupancy
	toSerialize["map_id"] = o.MapId
	toSerialize["occupancy_limit"] = o.OccupancyLimit
	toSerialize["org_id"] = o.OrgId
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["type"] = o.Type
	toSerialize["zone_id"] = o.ZoneId
	toSerialize["zone_name"] = o.ZoneName

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookOccupancyAlertsEventAlertEventsItems) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"current_occupancy",
		"map_id",
		"occupancy_limit",
		"org_id",
		"timestamp",
		"type",
		"zone_id",
		"zone_name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookOccupancyAlertsEventAlertEventsItems := _WebhookOccupancyAlertsEventAlertEventsItems{}

	err = json.Unmarshal(data, &varWebhookOccupancyAlertsEventAlertEventsItems)

	if err != nil {
		return err
	}

	*o = WebhookOccupancyAlertsEventAlertEventsItems(varWebhookOccupancyAlertsEventAlertEventsItems)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "current_occupancy")
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "occupancy_limit")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		delete(additionalProperties, "zone_id")
		delete(additionalProperties, "zone_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookOccupancyAlertsEventAlertEventsItems struct {
	value *WebhookOccupancyAlertsEventAlertEventsItems
	isSet bool
}

func (v NullableWebhookOccupancyAlertsEventAlertEventsItems) Get() *WebhookOccupancyAlertsEventAlertEventsItems {
	return v.value
}

func (v *NullableWebhookOccupancyAlertsEventAlertEventsItems) Set(val *WebhookOccupancyAlertsEventAlertEventsItems) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookOccupancyAlertsEventAlertEventsItems) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookOccupancyAlertsEventAlertEventsItems) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookOccupancyAlertsEventAlertEventsItems(val *WebhookOccupancyAlertsEventAlertEventsItems) *NullableWebhookOccupancyAlertsEventAlertEventsItems {
	return &NullableWebhookOccupancyAlertsEventAlertEventsItems{value: val, isSet: true}
}

func (v NullableWebhookOccupancyAlertsEventAlertEventsItems) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookOccupancyAlertsEventAlertEventsItems) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


