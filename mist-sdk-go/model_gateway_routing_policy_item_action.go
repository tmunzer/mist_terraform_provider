/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the GatewayRoutingPolicyItemAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GatewayRoutingPolicyItemAction{}

// GatewayRoutingPolicyItemAction when used as import policy
type GatewayRoutingPolicyItemAction struct {
	Accept *bool `json:"accept,omitempty"`
	AddCommunity []string `json:"add_community,omitempty"`
	// for SSR, hub decides how VRF routes are leaked on spoke
	AddTargetVrfs []string `json:"add_target_vrfs,omitempty"`
	// when used as export policy, optional
	Community []string `json:"community,omitempty"`
	// when used as export policy, optional. To exclude certain AS
	ExcludeAsPath []string `json:"exclude_as_path,omitempty"`
	ExcludeCommunity []string `json:"exclude_community,omitempty"`
	// when used as export policy, optional
	ExportCommunitites []string `json:"export_communitites,omitempty"`
	// optional, for an import policy, local_preference can be changed
	LocalPreference *string `json:"local_preference,omitempty"`
	// when used as export policy, optional. By default, the local AS will be prepended, to change it
	PrependAsPath []string `json:"prepend_as_path,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GatewayRoutingPolicyItemAction GatewayRoutingPolicyItemAction

// NewGatewayRoutingPolicyItemAction instantiates a new GatewayRoutingPolicyItemAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayRoutingPolicyItemAction() *GatewayRoutingPolicyItemAction {
	this := GatewayRoutingPolicyItemAction{}
	return &this
}

// NewGatewayRoutingPolicyItemActionWithDefaults instantiates a new GatewayRoutingPolicyItemAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayRoutingPolicyItemActionWithDefaults() *GatewayRoutingPolicyItemAction {
	this := GatewayRoutingPolicyItemAction{}
	return &this
}

// GetAccept returns the Accept field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetAccept() bool {
	if o == nil || IsNil(o.Accept) {
		var ret bool
		return ret
	}
	return *o.Accept
}

// GetAcceptOk returns a tuple with the Accept field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetAcceptOk() (*bool, bool) {
	if o == nil || IsNil(o.Accept) {
		return nil, false
	}
	return o.Accept, true
}

// HasAccept returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasAccept() bool {
	if o != nil && !IsNil(o.Accept) {
		return true
	}

	return false
}

// SetAccept gets a reference to the given bool and assigns it to the Accept field.
func (o *GatewayRoutingPolicyItemAction) SetAccept(v bool) {
	o.Accept = &v
}

// GetAddCommunity returns the AddCommunity field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetAddCommunity() []string {
	if o == nil || IsNil(o.AddCommunity) {
		var ret []string
		return ret
	}
	return o.AddCommunity
}

// GetAddCommunityOk returns a tuple with the AddCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetAddCommunityOk() ([]string, bool) {
	if o == nil || IsNil(o.AddCommunity) {
		return nil, false
	}
	return o.AddCommunity, true
}

// HasAddCommunity returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasAddCommunity() bool {
	if o != nil && !IsNil(o.AddCommunity) {
		return true
	}

	return false
}

// SetAddCommunity gets a reference to the given []string and assigns it to the AddCommunity field.
func (o *GatewayRoutingPolicyItemAction) SetAddCommunity(v []string) {
	o.AddCommunity = v
}

// GetAddTargetVrfs returns the AddTargetVrfs field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetAddTargetVrfs() []string {
	if o == nil || IsNil(o.AddTargetVrfs) {
		var ret []string
		return ret
	}
	return o.AddTargetVrfs
}

// GetAddTargetVrfsOk returns a tuple with the AddTargetVrfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetAddTargetVrfsOk() ([]string, bool) {
	if o == nil || IsNil(o.AddTargetVrfs) {
		return nil, false
	}
	return o.AddTargetVrfs, true
}

// HasAddTargetVrfs returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasAddTargetVrfs() bool {
	if o != nil && !IsNil(o.AddTargetVrfs) {
		return true
	}

	return false
}

// SetAddTargetVrfs gets a reference to the given []string and assigns it to the AddTargetVrfs field.
func (o *GatewayRoutingPolicyItemAction) SetAddTargetVrfs(v []string) {
	o.AddTargetVrfs = v
}

// GetCommunity returns the Community field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetCommunity() []string {
	if o == nil || IsNil(o.Community) {
		var ret []string
		return ret
	}
	return o.Community
}

// GetCommunityOk returns a tuple with the Community field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetCommunityOk() ([]string, bool) {
	if o == nil || IsNil(o.Community) {
		return nil, false
	}
	return o.Community, true
}

// HasCommunity returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasCommunity() bool {
	if o != nil && !IsNil(o.Community) {
		return true
	}

	return false
}

// SetCommunity gets a reference to the given []string and assigns it to the Community field.
func (o *GatewayRoutingPolicyItemAction) SetCommunity(v []string) {
	o.Community = v
}

// GetExcludeAsPath returns the ExcludeAsPath field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetExcludeAsPath() []string {
	if o == nil || IsNil(o.ExcludeAsPath) {
		var ret []string
		return ret
	}
	return o.ExcludeAsPath
}

// GetExcludeAsPathOk returns a tuple with the ExcludeAsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetExcludeAsPathOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeAsPath) {
		return nil, false
	}
	return o.ExcludeAsPath, true
}

// HasExcludeAsPath returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasExcludeAsPath() bool {
	if o != nil && !IsNil(o.ExcludeAsPath) {
		return true
	}

	return false
}

// SetExcludeAsPath gets a reference to the given []string and assigns it to the ExcludeAsPath field.
func (o *GatewayRoutingPolicyItemAction) SetExcludeAsPath(v []string) {
	o.ExcludeAsPath = v
}

// GetExcludeCommunity returns the ExcludeCommunity field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetExcludeCommunity() []string {
	if o == nil || IsNil(o.ExcludeCommunity) {
		var ret []string
		return ret
	}
	return o.ExcludeCommunity
}

// GetExcludeCommunityOk returns a tuple with the ExcludeCommunity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetExcludeCommunityOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludeCommunity) {
		return nil, false
	}
	return o.ExcludeCommunity, true
}

// HasExcludeCommunity returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasExcludeCommunity() bool {
	if o != nil && !IsNil(o.ExcludeCommunity) {
		return true
	}

	return false
}

// SetExcludeCommunity gets a reference to the given []string and assigns it to the ExcludeCommunity field.
func (o *GatewayRoutingPolicyItemAction) SetExcludeCommunity(v []string) {
	o.ExcludeCommunity = v
}

// GetExportCommunitites returns the ExportCommunitites field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetExportCommunitites() []string {
	if o == nil || IsNil(o.ExportCommunitites) {
		var ret []string
		return ret
	}
	return o.ExportCommunitites
}

// GetExportCommunititesOk returns a tuple with the ExportCommunitites field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetExportCommunititesOk() ([]string, bool) {
	if o == nil || IsNil(o.ExportCommunitites) {
		return nil, false
	}
	return o.ExportCommunitites, true
}

// HasExportCommunitites returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasExportCommunitites() bool {
	if o != nil && !IsNil(o.ExportCommunitites) {
		return true
	}

	return false
}

// SetExportCommunitites gets a reference to the given []string and assigns it to the ExportCommunitites field.
func (o *GatewayRoutingPolicyItemAction) SetExportCommunitites(v []string) {
	o.ExportCommunitites = v
}

// GetLocalPreference returns the LocalPreference field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetLocalPreference() string {
	if o == nil || IsNil(o.LocalPreference) {
		var ret string
		return ret
	}
	return *o.LocalPreference
}

// GetLocalPreferenceOk returns a tuple with the LocalPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetLocalPreferenceOk() (*string, bool) {
	if o == nil || IsNil(o.LocalPreference) {
		return nil, false
	}
	return o.LocalPreference, true
}

// HasLocalPreference returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasLocalPreference() bool {
	if o != nil && !IsNil(o.LocalPreference) {
		return true
	}

	return false
}

// SetLocalPreference gets a reference to the given string and assigns it to the LocalPreference field.
func (o *GatewayRoutingPolicyItemAction) SetLocalPreference(v string) {
	o.LocalPreference = &v
}

// GetPrependAsPath returns the PrependAsPath field value if set, zero value otherwise.
func (o *GatewayRoutingPolicyItemAction) GetPrependAsPath() []string {
	if o == nil || IsNil(o.PrependAsPath) {
		var ret []string
		return ret
	}
	return o.PrependAsPath
}

// GetPrependAsPathOk returns a tuple with the PrependAsPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoutingPolicyItemAction) GetPrependAsPathOk() ([]string, bool) {
	if o == nil || IsNil(o.PrependAsPath) {
		return nil, false
	}
	return o.PrependAsPath, true
}

// HasPrependAsPath returns a boolean if a field has been set.
func (o *GatewayRoutingPolicyItemAction) HasPrependAsPath() bool {
	if o != nil && !IsNil(o.PrependAsPath) {
		return true
	}

	return false
}

// SetPrependAsPath gets a reference to the given []string and assigns it to the PrependAsPath field.
func (o *GatewayRoutingPolicyItemAction) SetPrependAsPath(v []string) {
	o.PrependAsPath = v
}

func (o GatewayRoutingPolicyItemAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GatewayRoutingPolicyItemAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accept) {
		toSerialize["accept"] = o.Accept
	}
	if !IsNil(o.AddCommunity) {
		toSerialize["add_community"] = o.AddCommunity
	}
	if !IsNil(o.AddTargetVrfs) {
		toSerialize["add_target_vrfs"] = o.AddTargetVrfs
	}
	if !IsNil(o.Community) {
		toSerialize["community"] = o.Community
	}
	if !IsNil(o.ExcludeAsPath) {
		toSerialize["exclude_as_path"] = o.ExcludeAsPath
	}
	if !IsNil(o.ExcludeCommunity) {
		toSerialize["exclude_community"] = o.ExcludeCommunity
	}
	if !IsNil(o.ExportCommunitites) {
		toSerialize["export_communitites"] = o.ExportCommunitites
	}
	if !IsNil(o.LocalPreference) {
		toSerialize["local_preference"] = o.LocalPreference
	}
	if !IsNil(o.PrependAsPath) {
		toSerialize["prepend_as_path"] = o.PrependAsPath
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GatewayRoutingPolicyItemAction) UnmarshalJSON(data []byte) (err error) {
	varGatewayRoutingPolicyItemAction := _GatewayRoutingPolicyItemAction{}

	err = json.Unmarshal(data, &varGatewayRoutingPolicyItemAction)

	if err != nil {
		return err
	}

	*o = GatewayRoutingPolicyItemAction(varGatewayRoutingPolicyItemAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accept")
		delete(additionalProperties, "add_community")
		delete(additionalProperties, "add_target_vrfs")
		delete(additionalProperties, "community")
		delete(additionalProperties, "exclude_as_path")
		delete(additionalProperties, "exclude_community")
		delete(additionalProperties, "export_communitites")
		delete(additionalProperties, "local_preference")
		delete(additionalProperties, "prepend_as_path")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGatewayRoutingPolicyItemAction struct {
	value *GatewayRoutingPolicyItemAction
	isSet bool
}

func (v NullableGatewayRoutingPolicyItemAction) Get() *GatewayRoutingPolicyItemAction {
	return v.value
}

func (v *NullableGatewayRoutingPolicyItemAction) Set(val *GatewayRoutingPolicyItemAction) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayRoutingPolicyItemAction) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayRoutingPolicyItemAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayRoutingPolicyItemAction(val *GatewayRoutingPolicyItemAction) *NullableGatewayRoutingPolicyItemAction {
	return &NullableGatewayRoutingPolicyItemAction{value: val, isSet: true}
}

func (v NullableGatewayRoutingPolicyItemAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayRoutingPolicyItemAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


