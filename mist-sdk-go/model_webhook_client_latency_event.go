/*
Mist API

> Version: **2406.1.3** > > Date: **June 26, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.3
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WebhookClientLatencyEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookClientLatencyEvent{}

// WebhookClientLatencyEvent struct for WebhookClientLatencyEvent
type WebhookClientLatencyEvent struct {
	AvgAuth *float32 `json:"avg_auth,omitempty"`
	AvgDhcp *float32 `json:"avg_dhcp,omitempty"`
	AvgDns *float32 `json:"avg_dns,omitempty"`
	MaxAuth *float32 `json:"max_auth,omitempty"`
	MaxDhcp *float32 `json:"max_dhcp,omitempty"`
	MaxDns *float32 `json:"max_dns,omitempty"`
	MinAuth *float32 `json:"min_auth,omitempty"`
	MinDhcp *float32 `json:"min_dhcp,omitempty"`
	MinDns *float32 `json:"min_dns,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookClientLatencyEvent WebhookClientLatencyEvent

// NewWebhookClientLatencyEvent instantiates a new WebhookClientLatencyEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookClientLatencyEvent() *WebhookClientLatencyEvent {
	this := WebhookClientLatencyEvent{}
	return &this
}

// NewWebhookClientLatencyEventWithDefaults instantiates a new WebhookClientLatencyEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookClientLatencyEventWithDefaults() *WebhookClientLatencyEvent {
	this := WebhookClientLatencyEvent{}
	return &this
}

// GetAvgAuth returns the AvgAuth field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetAvgAuth() float32 {
	if o == nil || IsNil(o.AvgAuth) {
		var ret float32
		return ret
	}
	return *o.AvgAuth
}

// GetAvgAuthOk returns a tuple with the AvgAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetAvgAuthOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgAuth) {
		return nil, false
	}
	return o.AvgAuth, true
}

// HasAvgAuth returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasAvgAuth() bool {
	if o != nil && !IsNil(o.AvgAuth) {
		return true
	}

	return false
}

// SetAvgAuth gets a reference to the given float32 and assigns it to the AvgAuth field.
func (o *WebhookClientLatencyEvent) SetAvgAuth(v float32) {
	o.AvgAuth = &v
}

// GetAvgDhcp returns the AvgDhcp field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetAvgDhcp() float32 {
	if o == nil || IsNil(o.AvgDhcp) {
		var ret float32
		return ret
	}
	return *o.AvgDhcp
}

// GetAvgDhcpOk returns a tuple with the AvgDhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetAvgDhcpOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgDhcp) {
		return nil, false
	}
	return o.AvgDhcp, true
}

// HasAvgDhcp returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasAvgDhcp() bool {
	if o != nil && !IsNil(o.AvgDhcp) {
		return true
	}

	return false
}

// SetAvgDhcp gets a reference to the given float32 and assigns it to the AvgDhcp field.
func (o *WebhookClientLatencyEvent) SetAvgDhcp(v float32) {
	o.AvgDhcp = &v
}

// GetAvgDns returns the AvgDns field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetAvgDns() float32 {
	if o == nil || IsNil(o.AvgDns) {
		var ret float32
		return ret
	}
	return *o.AvgDns
}

// GetAvgDnsOk returns a tuple with the AvgDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetAvgDnsOk() (*float32, bool) {
	if o == nil || IsNil(o.AvgDns) {
		return nil, false
	}
	return o.AvgDns, true
}

// HasAvgDns returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasAvgDns() bool {
	if o != nil && !IsNil(o.AvgDns) {
		return true
	}

	return false
}

// SetAvgDns gets a reference to the given float32 and assigns it to the AvgDns field.
func (o *WebhookClientLatencyEvent) SetAvgDns(v float32) {
	o.AvgDns = &v
}

// GetMaxAuth returns the MaxAuth field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMaxAuth() float32 {
	if o == nil || IsNil(o.MaxAuth) {
		var ret float32
		return ret
	}
	return *o.MaxAuth
}

// GetMaxAuthOk returns a tuple with the MaxAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMaxAuthOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxAuth) {
		return nil, false
	}
	return o.MaxAuth, true
}

// HasMaxAuth returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMaxAuth() bool {
	if o != nil && !IsNil(o.MaxAuth) {
		return true
	}

	return false
}

// SetMaxAuth gets a reference to the given float32 and assigns it to the MaxAuth field.
func (o *WebhookClientLatencyEvent) SetMaxAuth(v float32) {
	o.MaxAuth = &v
}

// GetMaxDhcp returns the MaxDhcp field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMaxDhcp() float32 {
	if o == nil || IsNil(o.MaxDhcp) {
		var ret float32
		return ret
	}
	return *o.MaxDhcp
}

// GetMaxDhcpOk returns a tuple with the MaxDhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMaxDhcpOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDhcp) {
		return nil, false
	}
	return o.MaxDhcp, true
}

// HasMaxDhcp returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMaxDhcp() bool {
	if o != nil && !IsNil(o.MaxDhcp) {
		return true
	}

	return false
}

// SetMaxDhcp gets a reference to the given float32 and assigns it to the MaxDhcp field.
func (o *WebhookClientLatencyEvent) SetMaxDhcp(v float32) {
	o.MaxDhcp = &v
}

// GetMaxDns returns the MaxDns field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMaxDns() float32 {
	if o == nil || IsNil(o.MaxDns) {
		var ret float32
		return ret
	}
	return *o.MaxDns
}

// GetMaxDnsOk returns a tuple with the MaxDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMaxDnsOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxDns) {
		return nil, false
	}
	return o.MaxDns, true
}

// HasMaxDns returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMaxDns() bool {
	if o != nil && !IsNil(o.MaxDns) {
		return true
	}

	return false
}

// SetMaxDns gets a reference to the given float32 and assigns it to the MaxDns field.
func (o *WebhookClientLatencyEvent) SetMaxDns(v float32) {
	o.MaxDns = &v
}

// GetMinAuth returns the MinAuth field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMinAuth() float32 {
	if o == nil || IsNil(o.MinAuth) {
		var ret float32
		return ret
	}
	return *o.MinAuth
}

// GetMinAuthOk returns a tuple with the MinAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMinAuthOk() (*float32, bool) {
	if o == nil || IsNil(o.MinAuth) {
		return nil, false
	}
	return o.MinAuth, true
}

// HasMinAuth returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMinAuth() bool {
	if o != nil && !IsNil(o.MinAuth) {
		return true
	}

	return false
}

// SetMinAuth gets a reference to the given float32 and assigns it to the MinAuth field.
func (o *WebhookClientLatencyEvent) SetMinAuth(v float32) {
	o.MinAuth = &v
}

// GetMinDhcp returns the MinDhcp field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMinDhcp() float32 {
	if o == nil || IsNil(o.MinDhcp) {
		var ret float32
		return ret
	}
	return *o.MinDhcp
}

// GetMinDhcpOk returns a tuple with the MinDhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMinDhcpOk() (*float32, bool) {
	if o == nil || IsNil(o.MinDhcp) {
		return nil, false
	}
	return o.MinDhcp, true
}

// HasMinDhcp returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMinDhcp() bool {
	if o != nil && !IsNil(o.MinDhcp) {
		return true
	}

	return false
}

// SetMinDhcp gets a reference to the given float32 and assigns it to the MinDhcp field.
func (o *WebhookClientLatencyEvent) SetMinDhcp(v float32) {
	o.MinDhcp = &v
}

// GetMinDns returns the MinDns field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetMinDns() float32 {
	if o == nil || IsNil(o.MinDns) {
		var ret float32
		return ret
	}
	return *o.MinDns
}

// GetMinDnsOk returns a tuple with the MinDns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetMinDnsOk() (*float32, bool) {
	if o == nil || IsNil(o.MinDns) {
		return nil, false
	}
	return o.MinDns, true
}

// HasMinDns returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasMinDns() bool {
	if o != nil && !IsNil(o.MinDns) {
		return true
	}

	return false
}

// SetMinDns gets a reference to the given float32 and assigns it to the MinDns field.
func (o *WebhookClientLatencyEvent) SetMinDns(v float32) {
	o.MinDns = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *WebhookClientLatencyEvent) SetOrgId(v string) {
	o.OrgId = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *WebhookClientLatencyEvent) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *WebhookClientLatencyEvent) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookClientLatencyEvent) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *WebhookClientLatencyEvent) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *WebhookClientLatencyEvent) SetTimestamp(v int32) {
	o.Timestamp = &v
}

func (o WebhookClientLatencyEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookClientLatencyEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvgAuth) {
		toSerialize["avg_auth"] = o.AvgAuth
	}
	if !IsNil(o.AvgDhcp) {
		toSerialize["avg_dhcp"] = o.AvgDhcp
	}
	if !IsNil(o.AvgDns) {
		toSerialize["avg_dns"] = o.AvgDns
	}
	if !IsNil(o.MaxAuth) {
		toSerialize["max_auth"] = o.MaxAuth
	}
	if !IsNil(o.MaxDhcp) {
		toSerialize["max_dhcp"] = o.MaxDhcp
	}
	if !IsNil(o.MaxDns) {
		toSerialize["max_dns"] = o.MaxDns
	}
	if !IsNil(o.MinAuth) {
		toSerialize["min_auth"] = o.MinAuth
	}
	if !IsNil(o.MinDhcp) {
		toSerialize["min_dhcp"] = o.MinDhcp
	}
	if !IsNil(o.MinDns) {
		toSerialize["min_dns"] = o.MinDns
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookClientLatencyEvent) UnmarshalJSON(data []byte) (err error) {
	varWebhookClientLatencyEvent := _WebhookClientLatencyEvent{}

	err = json.Unmarshal(data, &varWebhookClientLatencyEvent)

	if err != nil {
		return err
	}

	*o = WebhookClientLatencyEvent(varWebhookClientLatencyEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "avg_auth")
		delete(additionalProperties, "avg_dhcp")
		delete(additionalProperties, "avg_dns")
		delete(additionalProperties, "max_auth")
		delete(additionalProperties, "max_dhcp")
		delete(additionalProperties, "max_dns")
		delete(additionalProperties, "min_auth")
		delete(additionalProperties, "min_dhcp")
		delete(additionalProperties, "min_dns")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "timestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookClientLatencyEvent struct {
	value *WebhookClientLatencyEvent
	isSet bool
}

func (v NullableWebhookClientLatencyEvent) Get() *WebhookClientLatencyEvent {
	return v.value
}

func (v *NullableWebhookClientLatencyEvent) Set(val *WebhookClientLatencyEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookClientLatencyEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookClientLatencyEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookClientLatencyEvent(val *WebhookClientLatencyEvent) *NullableWebhookClientLatencyEvent {
	return &NullableWebhookClientLatencyEvent{value: val, isSet: true}
}

func (v NullableWebhookClientLatencyEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookClientLatencyEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


