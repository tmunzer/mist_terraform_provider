/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// JunosAclTagType the model 'JunosAclTagType'
type JunosAclTagType string

// List of junos_acl_tag_type
const (
	JUNOSACLTAGTYPE_MAC JunosAclTagType = "mac"
	JUNOSACLTAGTYPE_SUBNET JunosAclTagType = "subnet"
	JUNOSACLTAGTYPE_NETWORK JunosAclTagType = "network"
	JUNOSACLTAGTYPE_RADIUS_GROUP JunosAclTagType = "radius_group"
	JUNOSACLTAGTYPE_ANY JunosAclTagType = "any"
	JUNOSACLTAGTYPE_RESOURCE JunosAclTagType = "resource"
	JUNOSACLTAGTYPE_DYNAMIC_GBP JunosAclTagType = "dynamic_gbp"
	JUNOSACLTAGTYPE_STATIC_GBP JunosAclTagType = "static_gbp"
)

// All allowed values of JunosAclTagType enum
var AllowedJunosAclTagTypeEnumValues = []JunosAclTagType{
	"mac",
	"subnet",
	"network",
	"radius_group",
	"any",
	"resource",
	"dynamic_gbp",
	"static_gbp",
}

func (v *JunosAclTagType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := JunosAclTagType(value)
	for _, existing := range AllowedJunosAclTagTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid JunosAclTagType", value)
}

// NewJunosAclTagTypeFromValue returns a pointer to a valid JunosAclTagType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewJunosAclTagTypeFromValue(v string) (*JunosAclTagType, error) {
	ev := JunosAclTagType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for JunosAclTagType: valid values are %v", v, AllowedJunosAclTagTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v JunosAclTagType) IsValid() bool {
	for _, existing := range AllowedJunosAclTagTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to junos_acl_tag_type value
func (v JunosAclTagType) Ptr() *JunosAclTagType {
	return &v
}

type NullableJunosAclTagType struct {
	value *JunosAclTagType
	isSet bool
}

func (v NullableJunosAclTagType) Get() *JunosAclTagType {
	return v.value
}

func (v *NullableJunosAclTagType) Set(val *JunosAclTagType) {
	v.value = val
	v.isSet = true
}

func (v NullableJunosAclTagType) IsSet() bool {
	return v.isSet
}

func (v *NullableJunosAclTagType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJunosAclTagType(val *JunosAclTagType) *NullableJunosAclTagType {
	return &NullableJunosAclTagType{value: val, isSet: true}
}

func (v NullableJunosAclTagType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJunosAclTagType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

