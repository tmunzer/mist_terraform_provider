/*
Mist API

> Version: **2406.1.10** > > Date: **June 29, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.10
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// IdpProfileMatchingSeverity1 the model 'IdpProfileMatchingSeverity1'
type IdpProfileMatchingSeverity1 string

// List of idp_profile_matching_severity1
const (
	IDPPROFILEMATCHINGSEVERITY1_EMPTY IdpProfileMatchingSeverity1 = ""
	IDPPROFILEMATCHINGSEVERITY1_CRITICAL IdpProfileMatchingSeverity1 = "critical"
	IDPPROFILEMATCHINGSEVERITY1_MAJOR IdpProfileMatchingSeverity1 = "major"
	IDPPROFILEMATCHINGSEVERITY1_MINOR IdpProfileMatchingSeverity1 = "minor"
	IDPPROFILEMATCHINGSEVERITY1_INFO IdpProfileMatchingSeverity1 = "info"
)

// All allowed values of IdpProfileMatchingSeverity1 enum
var AllowedIdpProfileMatchingSeverity1EnumValues = []IdpProfileMatchingSeverity1{
	"",
	"critical",
	"major",
	"minor",
	"info",
}

func (v *IdpProfileMatchingSeverity1) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IdpProfileMatchingSeverity1(value)
	for _, existing := range AllowedIdpProfileMatchingSeverity1EnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IdpProfileMatchingSeverity1", value)
}

// NewIdpProfileMatchingSeverity1FromValue returns a pointer to a valid IdpProfileMatchingSeverity1
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIdpProfileMatchingSeverity1FromValue(v string) (*IdpProfileMatchingSeverity1, error) {
	ev := IdpProfileMatchingSeverity1(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IdpProfileMatchingSeverity1: valid values are %v", v, AllowedIdpProfileMatchingSeverity1EnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IdpProfileMatchingSeverity1) IsValid() bool {
	for _, existing := range AllowedIdpProfileMatchingSeverity1EnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to idp_profile_matching_severity1 value
func (v IdpProfileMatchingSeverity1) Ptr() *IdpProfileMatchingSeverity1 {
	return &v
}

type NullableIdpProfileMatchingSeverity1 struct {
	value *IdpProfileMatchingSeverity1
	isSet bool
}

func (v NullableIdpProfileMatchingSeverity1) Get() *IdpProfileMatchingSeverity1 {
	return v.value
}

func (v *NullableIdpProfileMatchingSeverity1) Set(val *IdpProfileMatchingSeverity1) {
	v.value = val
	v.isSet = true
}

func (v NullableIdpProfileMatchingSeverity1) IsSet() bool {
	return v.isSet
}

func (v *NullableIdpProfileMatchingSeverity1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdpProfileMatchingSeverity1(val *IdpProfileMatchingSeverity1) *NullableIdpProfileMatchingSeverity1 {
	return &NullableIdpProfileMatchingSeverity1{value: val, isSet: true}
}

func (v NullableIdpProfileMatchingSeverity1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdpProfileMatchingSeverity1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

