/*
Mist API

> Version: **2406.1.10** > > Date: **June 29, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.10
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WebhookLocationAssetEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookLocationAssetEventsInner{}

// WebhookLocationAssetEventsInner struct for WebhookLocationAssetEventsInner
type WebhookLocationAssetEventsInner struct {
	BatteryVoltage *int32 `json:"battery_voltage,omitempty"`
	EddystoneUidInstance *string `json:"eddystone_uid_instance,omitempty"`
	EddystoneUidNamespace *string `json:"eddystone_uid_namespace,omitempty"`
	EddystoneUrlUrl *string `json:"eddystone_url_url,omitempty"`
	IbeaconMajor *int32 `json:"ibeacon_major,omitempty"`
	IbeaconMinor *int32 `json:"ibeacon_minor,omitempty"`
	IbeaconUuid *string `json:"ibeacon_uuid,omitempty"`
	Mac *string `json:"mac,omitempty"`
	MapId *string `json:"map_id,omitempty"`
	// optional, BLE manufacturing company ID
	MfgCompanyId *int32 `json:"mfg_company_id,omitempty"`
	// optional, BLE manufacturing data in hex byte-string format (ie: “112233AABBCC”)
	MfgData *string `json:"mfg_data,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	// x, in meter
	X *float32 `json:"x,omitempty"`
	// y, in meter
	Y *float32 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookLocationAssetEventsInner WebhookLocationAssetEventsInner

// NewWebhookLocationAssetEventsInner instantiates a new WebhookLocationAssetEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookLocationAssetEventsInner() *WebhookLocationAssetEventsInner {
	this := WebhookLocationAssetEventsInner{}
	var type_ string = "asset"
	this.Type = &type_
	return &this
}

// NewWebhookLocationAssetEventsInnerWithDefaults instantiates a new WebhookLocationAssetEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookLocationAssetEventsInnerWithDefaults() *WebhookLocationAssetEventsInner {
	this := WebhookLocationAssetEventsInner{}
	var type_ string = "asset"
	this.Type = &type_
	return &this
}

// GetBatteryVoltage returns the BatteryVoltage field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetBatteryVoltage() int32 {
	if o == nil || IsNil(o.BatteryVoltage) {
		var ret int32
		return ret
	}
	return *o.BatteryVoltage
}

// GetBatteryVoltageOk returns a tuple with the BatteryVoltage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetBatteryVoltageOk() (*int32, bool) {
	if o == nil || IsNil(o.BatteryVoltage) {
		return nil, false
	}
	return o.BatteryVoltage, true
}

// HasBatteryVoltage returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasBatteryVoltage() bool {
	if o != nil && !IsNil(o.BatteryVoltage) {
		return true
	}

	return false
}

// SetBatteryVoltage gets a reference to the given int32 and assigns it to the BatteryVoltage field.
func (o *WebhookLocationAssetEventsInner) SetBatteryVoltage(v int32) {
	o.BatteryVoltage = &v
}

// GetEddystoneUidInstance returns the EddystoneUidInstance field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUidInstance() string {
	if o == nil || IsNil(o.EddystoneUidInstance) {
		var ret string
		return ret
	}
	return *o.EddystoneUidInstance
}

// GetEddystoneUidInstanceOk returns a tuple with the EddystoneUidInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUidInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.EddystoneUidInstance) {
		return nil, false
	}
	return o.EddystoneUidInstance, true
}

// HasEddystoneUidInstance returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasEddystoneUidInstance() bool {
	if o != nil && !IsNil(o.EddystoneUidInstance) {
		return true
	}

	return false
}

// SetEddystoneUidInstance gets a reference to the given string and assigns it to the EddystoneUidInstance field.
func (o *WebhookLocationAssetEventsInner) SetEddystoneUidInstance(v string) {
	o.EddystoneUidInstance = &v
}

// GetEddystoneUidNamespace returns the EddystoneUidNamespace field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUidNamespace() string {
	if o == nil || IsNil(o.EddystoneUidNamespace) {
		var ret string
		return ret
	}
	return *o.EddystoneUidNamespace
}

// GetEddystoneUidNamespaceOk returns a tuple with the EddystoneUidNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUidNamespaceOk() (*string, bool) {
	if o == nil || IsNil(o.EddystoneUidNamespace) {
		return nil, false
	}
	return o.EddystoneUidNamespace, true
}

// HasEddystoneUidNamespace returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasEddystoneUidNamespace() bool {
	if o != nil && !IsNil(o.EddystoneUidNamespace) {
		return true
	}

	return false
}

// SetEddystoneUidNamespace gets a reference to the given string and assigns it to the EddystoneUidNamespace field.
func (o *WebhookLocationAssetEventsInner) SetEddystoneUidNamespace(v string) {
	o.EddystoneUidNamespace = &v
}

// GetEddystoneUrlUrl returns the EddystoneUrlUrl field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUrlUrl() string {
	if o == nil || IsNil(o.EddystoneUrlUrl) {
		var ret string
		return ret
	}
	return *o.EddystoneUrlUrl
}

// GetEddystoneUrlUrlOk returns a tuple with the EddystoneUrlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetEddystoneUrlUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EddystoneUrlUrl) {
		return nil, false
	}
	return o.EddystoneUrlUrl, true
}

// HasEddystoneUrlUrl returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasEddystoneUrlUrl() bool {
	if o != nil && !IsNil(o.EddystoneUrlUrl) {
		return true
	}

	return false
}

// SetEddystoneUrlUrl gets a reference to the given string and assigns it to the EddystoneUrlUrl field.
func (o *WebhookLocationAssetEventsInner) SetEddystoneUrlUrl(v string) {
	o.EddystoneUrlUrl = &v
}

// GetIbeaconMajor returns the IbeaconMajor field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetIbeaconMajor() int32 {
	if o == nil || IsNil(o.IbeaconMajor) {
		var ret int32
		return ret
	}
	return *o.IbeaconMajor
}

// GetIbeaconMajorOk returns a tuple with the IbeaconMajor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetIbeaconMajorOk() (*int32, bool) {
	if o == nil || IsNil(o.IbeaconMajor) {
		return nil, false
	}
	return o.IbeaconMajor, true
}

// HasIbeaconMajor returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasIbeaconMajor() bool {
	if o != nil && !IsNil(o.IbeaconMajor) {
		return true
	}

	return false
}

// SetIbeaconMajor gets a reference to the given int32 and assigns it to the IbeaconMajor field.
func (o *WebhookLocationAssetEventsInner) SetIbeaconMajor(v int32) {
	o.IbeaconMajor = &v
}

// GetIbeaconMinor returns the IbeaconMinor field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetIbeaconMinor() int32 {
	if o == nil || IsNil(o.IbeaconMinor) {
		var ret int32
		return ret
	}
	return *o.IbeaconMinor
}

// GetIbeaconMinorOk returns a tuple with the IbeaconMinor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetIbeaconMinorOk() (*int32, bool) {
	if o == nil || IsNil(o.IbeaconMinor) {
		return nil, false
	}
	return o.IbeaconMinor, true
}

// HasIbeaconMinor returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasIbeaconMinor() bool {
	if o != nil && !IsNil(o.IbeaconMinor) {
		return true
	}

	return false
}

// SetIbeaconMinor gets a reference to the given int32 and assigns it to the IbeaconMinor field.
func (o *WebhookLocationAssetEventsInner) SetIbeaconMinor(v int32) {
	o.IbeaconMinor = &v
}

// GetIbeaconUuid returns the IbeaconUuid field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetIbeaconUuid() string {
	if o == nil || IsNil(o.IbeaconUuid) {
		var ret string
		return ret
	}
	return *o.IbeaconUuid
}

// GetIbeaconUuidOk returns a tuple with the IbeaconUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetIbeaconUuidOk() (*string, bool) {
	if o == nil || IsNil(o.IbeaconUuid) {
		return nil, false
	}
	return o.IbeaconUuid, true
}

// HasIbeaconUuid returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasIbeaconUuid() bool {
	if o != nil && !IsNil(o.IbeaconUuid) {
		return true
	}

	return false
}

// SetIbeaconUuid gets a reference to the given string and assigns it to the IbeaconUuid field.
func (o *WebhookLocationAssetEventsInner) SetIbeaconUuid(v string) {
	o.IbeaconUuid = &v
}

// GetMac returns the Mac field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetMac() string {
	if o == nil || IsNil(o.Mac) {
		var ret string
		return ret
	}
	return *o.Mac
}

// GetMacOk returns a tuple with the Mac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetMacOk() (*string, bool) {
	if o == nil || IsNil(o.Mac) {
		return nil, false
	}
	return o.Mac, true
}

// HasMac returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasMac() bool {
	if o != nil && !IsNil(o.Mac) {
		return true
	}

	return false
}

// SetMac gets a reference to the given string and assigns it to the Mac field.
func (o *WebhookLocationAssetEventsInner) SetMac(v string) {
	o.Mac = &v
}

// GetMapId returns the MapId field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetMapId() string {
	if o == nil || IsNil(o.MapId) {
		var ret string
		return ret
	}
	return *o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetMapIdOk() (*string, bool) {
	if o == nil || IsNil(o.MapId) {
		return nil, false
	}
	return o.MapId, true
}

// HasMapId returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasMapId() bool {
	if o != nil && !IsNil(o.MapId) {
		return true
	}

	return false
}

// SetMapId gets a reference to the given string and assigns it to the MapId field.
func (o *WebhookLocationAssetEventsInner) SetMapId(v string) {
	o.MapId = &v
}

// GetMfgCompanyId returns the MfgCompanyId field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetMfgCompanyId() int32 {
	if o == nil || IsNil(o.MfgCompanyId) {
		var ret int32
		return ret
	}
	return *o.MfgCompanyId
}

// GetMfgCompanyIdOk returns a tuple with the MfgCompanyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetMfgCompanyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MfgCompanyId) {
		return nil, false
	}
	return o.MfgCompanyId, true
}

// HasMfgCompanyId returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasMfgCompanyId() bool {
	if o != nil && !IsNil(o.MfgCompanyId) {
		return true
	}

	return false
}

// SetMfgCompanyId gets a reference to the given int32 and assigns it to the MfgCompanyId field.
func (o *WebhookLocationAssetEventsInner) SetMfgCompanyId(v int32) {
	o.MfgCompanyId = &v
}

// GetMfgData returns the MfgData field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetMfgData() string {
	if o == nil || IsNil(o.MfgData) {
		var ret string
		return ret
	}
	return *o.MfgData
}

// GetMfgDataOk returns a tuple with the MfgData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetMfgDataOk() (*string, bool) {
	if o == nil || IsNil(o.MfgData) {
		return nil, false
	}
	return o.MfgData, true
}

// HasMfgData returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasMfgData() bool {
	if o != nil && !IsNil(o.MfgData) {
		return true
	}

	return false
}

// SetMfgData gets a reference to the given string and assigns it to the MfgData field.
func (o *WebhookLocationAssetEventsInner) SetMfgData(v string) {
	o.MfgData = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *WebhookLocationAssetEventsInner) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *WebhookLocationAssetEventsInner) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WebhookLocationAssetEventsInner) SetType(v string) {
	o.Type = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetX() float32 {
	if o == nil || IsNil(o.X) {
		var ret float32
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetXOk() (*float32, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float32 and assigns it to the X field.
func (o *WebhookLocationAssetEventsInner) SetX(v float32) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *WebhookLocationAssetEventsInner) GetY() float32 {
	if o == nil || IsNil(o.Y) {
		var ret float32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationAssetEventsInner) GetYOk() (*float32, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *WebhookLocationAssetEventsInner) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float32 and assigns it to the Y field.
func (o *WebhookLocationAssetEventsInner) SetY(v float32) {
	o.Y = &v
}

func (o WebhookLocationAssetEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookLocationAssetEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatteryVoltage) {
		toSerialize["battery_voltage"] = o.BatteryVoltage
	}
	if !IsNil(o.EddystoneUidInstance) {
		toSerialize["eddystone_uid_instance"] = o.EddystoneUidInstance
	}
	if !IsNil(o.EddystoneUidNamespace) {
		toSerialize["eddystone_uid_namespace"] = o.EddystoneUidNamespace
	}
	if !IsNil(o.EddystoneUrlUrl) {
		toSerialize["eddystone_url_url"] = o.EddystoneUrlUrl
	}
	if !IsNil(o.IbeaconMajor) {
		toSerialize["ibeacon_major"] = o.IbeaconMajor
	}
	if !IsNil(o.IbeaconMinor) {
		toSerialize["ibeacon_minor"] = o.IbeaconMinor
	}
	if !IsNil(o.IbeaconUuid) {
		toSerialize["ibeacon_uuid"] = o.IbeaconUuid
	}
	if !IsNil(o.Mac) {
		toSerialize["mac"] = o.Mac
	}
	if !IsNil(o.MapId) {
		toSerialize["map_id"] = o.MapId
	}
	if !IsNil(o.MfgCompanyId) {
		toSerialize["mfg_company_id"] = o.MfgCompanyId
	}
	if !IsNil(o.MfgData) {
		toSerialize["mfg_data"] = o.MfgData
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookLocationAssetEventsInner) UnmarshalJSON(data []byte) (err error) {
	varWebhookLocationAssetEventsInner := _WebhookLocationAssetEventsInner{}

	err = json.Unmarshal(data, &varWebhookLocationAssetEventsInner)

	if err != nil {
		return err
	}

	*o = WebhookLocationAssetEventsInner(varWebhookLocationAssetEventsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "battery_voltage")
		delete(additionalProperties, "eddystone_uid_instance")
		delete(additionalProperties, "eddystone_uid_namespace")
		delete(additionalProperties, "eddystone_url_url")
		delete(additionalProperties, "ibeacon_major")
		delete(additionalProperties, "ibeacon_minor")
		delete(additionalProperties, "ibeacon_uuid")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "mfg_company_id")
		delete(additionalProperties, "mfg_data")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookLocationAssetEventsInner struct {
	value *WebhookLocationAssetEventsInner
	isSet bool
}

func (v NullableWebhookLocationAssetEventsInner) Get() *WebhookLocationAssetEventsInner {
	return v.value
}

func (v *NullableWebhookLocationAssetEventsInner) Set(val *WebhookLocationAssetEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookLocationAssetEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookLocationAssetEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookLocationAssetEventsInner(val *WebhookLocationAssetEventsInner) *NullableWebhookLocationAssetEventsInner {
	return &NullableWebhookLocationAssetEventsInner{value: val, isSet: true}
}

func (v NullableWebhookLocationAssetEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookLocationAssetEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


