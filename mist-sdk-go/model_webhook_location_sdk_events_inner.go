/*
Mist API

> Version: **2406.1.9** > > Date: **June 28, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.9
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the WebhookLocationSdkEventsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookLocationSdkEventsInner{}

// WebhookLocationSdkEventsInner struct for WebhookLocationSdkEventsInner
type WebhookLocationSdkEventsInner struct {
	Id *string `json:"id,omitempty"`
	MapId *string `json:"map_id,omitempty"`
	Name *string `json:"name,omitempty"`
	SiteId *string `json:"site_id,omitempty"`
	Timestamp *int32 `json:"timestamp,omitempty"`
	Type *string `json:"type,omitempty"`
	// x, in meter
	X *float32 `json:"x,omitempty"`
	// y, in meter
	Y *float32 `json:"y,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _WebhookLocationSdkEventsInner WebhookLocationSdkEventsInner

// NewWebhookLocationSdkEventsInner instantiates a new WebhookLocationSdkEventsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookLocationSdkEventsInner() *WebhookLocationSdkEventsInner {
	this := WebhookLocationSdkEventsInner{}
	var type_ string = "sdk"
	this.Type = &type_
	return &this
}

// NewWebhookLocationSdkEventsInnerWithDefaults instantiates a new WebhookLocationSdkEventsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookLocationSdkEventsInnerWithDefaults() *WebhookLocationSdkEventsInner {
	this := WebhookLocationSdkEventsInner{}
	var type_ string = "sdk"
	this.Type = &type_
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WebhookLocationSdkEventsInner) SetId(v string) {
	o.Id = &v
}

// GetMapId returns the MapId field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetMapId() string {
	if o == nil || IsNil(o.MapId) {
		var ret string
		return ret
	}
	return *o.MapId
}

// GetMapIdOk returns a tuple with the MapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetMapIdOk() (*string, bool) {
	if o == nil || IsNil(o.MapId) {
		return nil, false
	}
	return o.MapId, true
}

// HasMapId returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasMapId() bool {
	if o != nil && !IsNil(o.MapId) {
		return true
	}

	return false
}

// SetMapId gets a reference to the given string and assigns it to the MapId field.
func (o *WebhookLocationSdkEventsInner) SetMapId(v string) {
	o.MapId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WebhookLocationSdkEventsInner) SetName(v string) {
	o.Name = &v
}

// GetSiteId returns the SiteId field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetSiteId() string {
	if o == nil || IsNil(o.SiteId) {
		var ret string
		return ret
	}
	return *o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetSiteIdOk() (*string, bool) {
	if o == nil || IsNil(o.SiteId) {
		return nil, false
	}
	return o.SiteId, true
}

// HasSiteId returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasSiteId() bool {
	if o != nil && !IsNil(o.SiteId) {
		return true
	}

	return false
}

// SetSiteId gets a reference to the given string and assigns it to the SiteId field.
func (o *WebhookLocationSdkEventsInner) SetSiteId(v string) {
	o.SiteId = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *WebhookLocationSdkEventsInner) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WebhookLocationSdkEventsInner) SetType(v string) {
	o.Type = &v
}

// GetX returns the X field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetX() float32 {
	if o == nil || IsNil(o.X) {
		var ret float32
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetXOk() (*float32, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given float32 and assigns it to the X field.
func (o *WebhookLocationSdkEventsInner) SetX(v float32) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *WebhookLocationSdkEventsInner) GetY() float32 {
	if o == nil || IsNil(o.Y) {
		var ret float32
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebhookLocationSdkEventsInner) GetYOk() (*float32, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *WebhookLocationSdkEventsInner) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given float32 and assigns it to the Y field.
func (o *WebhookLocationSdkEventsInner) SetY(v float32) {
	o.Y = &v
}

func (o WebhookLocationSdkEventsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookLocationSdkEventsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MapId) {
		toSerialize["map_id"] = o.MapId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.SiteId) {
		toSerialize["site_id"] = o.SiteId
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookLocationSdkEventsInner) UnmarshalJSON(data []byte) (err error) {
	varWebhookLocationSdkEventsInner := _WebhookLocationSdkEventsInner{}

	err = json.Unmarshal(data, &varWebhookLocationSdkEventsInner)

	if err != nil {
		return err
	}

	*o = WebhookLocationSdkEventsInner(varWebhookLocationSdkEventsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "map_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "type")
		delete(additionalProperties, "x")
		delete(additionalProperties, "y")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookLocationSdkEventsInner struct {
	value *WebhookLocationSdkEventsInner
	isSet bool
}

func (v NullableWebhookLocationSdkEventsInner) Get() *WebhookLocationSdkEventsInner {
	return v.value
}

func (v *NullableWebhookLocationSdkEventsInner) Set(val *WebhookLocationSdkEventsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookLocationSdkEventsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookLocationSdkEventsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookLocationSdkEventsInner(val *WebhookLocationSdkEventsInner) *NullableWebhookLocationSdkEventsInner {
	return &NullableWebhookLocationSdkEventsInner{value: val, isSet: true}
}

func (v NullableWebhookLocationSdkEventsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookLocationSdkEventsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


