/*
Mist API

> Version: **2406.1.9** > > Date: **June 28, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location_services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2406.1.9
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
	"fmt"
)

// checks if the WebhookClientSessionsEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookClientSessionsEvent{}

// WebhookClientSessionsEvent struct for WebhookClientSessionsEvent
type WebhookClientSessionsEvent struct {
	// mac address of the AP the client roamed or disconnected from
	Ap string `json:"ap"`
	// user-friendly name of the AP the client roamed or disconnected from.
	ApName string `json:"ap_name"`
	// 5GHz or 2.4GHz band
	Band string `json:"band"`
	Bssid string `json:"bssid"`
	// device family E.g. “Mac”, “iPhone”, “Apple watch”
	ClientFamily string `json:"client_family"`
	// device manufacturer E.g. “Apple”
	ClientManufacture string `json:"client_manufacture"`
	// device model E.g. “8+”, “XS”
	ClientModel string `json:"client_model"`
	// device operating system E.g. “Mojave”, “Windows 10”, “Linux”
	ClientOs string `json:"client_os"`
	// time when the user connects
	Connect int32 `json:"connect"`
	// floating point connect timestamp with millisecond precision
	ConnectFloat float32 `json:"connect_float"`
	// time when the user disconnects
	Disconnect int32 `json:"disconnect"`
	// floating point disconnect timestamp with millisecond precision
	DisconnectFloat float32 `json:"disconnect_float"`
	// the duration of the roamed or complete session indicated by termination_reason field.
	Duration int32 `json:"duration"`
	// the client’s mac
	Mac string `json:"mac"`
	// the AP the client has roamed to.
	NextAp string `json:"next_ap"`
	OrgId string `json:"org_id"`
	// latest average RSSI before the user disconnects
	Rssi float32 `json:"rssi"`
	SiteId string `json:"site_id"`
	SiteName string `json:"site_name"`
	Ssid string `json:"ssid"`
	// 1 disassociate - when the client disassociates. 2 inactive - when the client is timeout. 3 roamed - when the client is roamed between APs
	TerminationReason int32 `json:"termination_reason"`
	Timestamp float32 `json:"timestamp"`
	// schema version of this message
	Version float32 `json:"version"`
	WlanId string `json:"wlan_id"`
	AdditionalProperties map[string]interface{}
}

type _WebhookClientSessionsEvent WebhookClientSessionsEvent

// NewWebhookClientSessionsEvent instantiates a new WebhookClientSessionsEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookClientSessionsEvent(ap string, apName string, band string, bssid string, clientFamily string, clientManufacture string, clientModel string, clientOs string, connect int32, connectFloat float32, disconnect int32, disconnectFloat float32, duration int32, mac string, nextAp string, orgId string, rssi float32, siteId string, siteName string, ssid string, terminationReason int32, timestamp float32, version float32, wlanId string) *WebhookClientSessionsEvent {
	this := WebhookClientSessionsEvent{}
	this.Ap = ap
	this.ApName = apName
	this.Band = band
	this.Bssid = bssid
	this.ClientFamily = clientFamily
	this.ClientManufacture = clientManufacture
	this.ClientModel = clientModel
	this.ClientOs = clientOs
	this.Connect = connect
	this.ConnectFloat = connectFloat
	this.Disconnect = disconnect
	this.DisconnectFloat = disconnectFloat
	this.Duration = duration
	this.Mac = mac
	this.NextAp = nextAp
	this.OrgId = orgId
	this.Rssi = rssi
	this.SiteId = siteId
	this.SiteName = siteName
	this.Ssid = ssid
	this.TerminationReason = terminationReason
	this.Timestamp = timestamp
	this.Version = version
	this.WlanId = wlanId
	return &this
}

// NewWebhookClientSessionsEventWithDefaults instantiates a new WebhookClientSessionsEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookClientSessionsEventWithDefaults() *WebhookClientSessionsEvent {
	this := WebhookClientSessionsEvent{}
	return &this
}

// GetAp returns the Ap field value
func (o *WebhookClientSessionsEvent) GetAp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ap
}

// GetApOk returns a tuple with the Ap field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetApOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ap, true
}

// SetAp sets field value
func (o *WebhookClientSessionsEvent) SetAp(v string) {
	o.Ap = v
}

// GetApName returns the ApName field value
func (o *WebhookClientSessionsEvent) GetApName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApName
}

// GetApNameOk returns a tuple with the ApName field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetApNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApName, true
}

// SetApName sets field value
func (o *WebhookClientSessionsEvent) SetApName(v string) {
	o.ApName = v
}

// GetBand returns the Band field value
func (o *WebhookClientSessionsEvent) GetBand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Band
}

// GetBandOk returns a tuple with the Band field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetBandOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Band, true
}

// SetBand sets field value
func (o *WebhookClientSessionsEvent) SetBand(v string) {
	o.Band = v
}

// GetBssid returns the Bssid field value
func (o *WebhookClientSessionsEvent) GetBssid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bssid
}

// GetBssidOk returns a tuple with the Bssid field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetBssidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bssid, true
}

// SetBssid sets field value
func (o *WebhookClientSessionsEvent) SetBssid(v string) {
	o.Bssid = v
}

// GetClientFamily returns the ClientFamily field value
func (o *WebhookClientSessionsEvent) GetClientFamily() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientFamily
}

// GetClientFamilyOk returns a tuple with the ClientFamily field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetClientFamilyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientFamily, true
}

// SetClientFamily sets field value
func (o *WebhookClientSessionsEvent) SetClientFamily(v string) {
	o.ClientFamily = v
}

// GetClientManufacture returns the ClientManufacture field value
func (o *WebhookClientSessionsEvent) GetClientManufacture() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientManufacture
}

// GetClientManufactureOk returns a tuple with the ClientManufacture field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetClientManufactureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientManufacture, true
}

// SetClientManufacture sets field value
func (o *WebhookClientSessionsEvent) SetClientManufacture(v string) {
	o.ClientManufacture = v
}

// GetClientModel returns the ClientModel field value
func (o *WebhookClientSessionsEvent) GetClientModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientModel
}

// GetClientModelOk returns a tuple with the ClientModel field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetClientModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientModel, true
}

// SetClientModel sets field value
func (o *WebhookClientSessionsEvent) SetClientModel(v string) {
	o.ClientModel = v
}

// GetClientOs returns the ClientOs field value
func (o *WebhookClientSessionsEvent) GetClientOs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientOs
}

// GetClientOsOk returns a tuple with the ClientOs field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetClientOsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientOs, true
}

// SetClientOs sets field value
func (o *WebhookClientSessionsEvent) SetClientOs(v string) {
	o.ClientOs = v
}

// GetConnect returns the Connect field value
func (o *WebhookClientSessionsEvent) GetConnect() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Connect
}

// GetConnectOk returns a tuple with the Connect field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetConnectOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Connect, true
}

// SetConnect sets field value
func (o *WebhookClientSessionsEvent) SetConnect(v int32) {
	o.Connect = v
}

// GetConnectFloat returns the ConnectFloat field value
func (o *WebhookClientSessionsEvent) GetConnectFloat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ConnectFloat
}

// GetConnectFloatOk returns a tuple with the ConnectFloat field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetConnectFloatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectFloat, true
}

// SetConnectFloat sets field value
func (o *WebhookClientSessionsEvent) SetConnectFloat(v float32) {
	o.ConnectFloat = v
}

// GetDisconnect returns the Disconnect field value
func (o *WebhookClientSessionsEvent) GetDisconnect() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Disconnect
}

// GetDisconnectOk returns a tuple with the Disconnect field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetDisconnectOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disconnect, true
}

// SetDisconnect sets field value
func (o *WebhookClientSessionsEvent) SetDisconnect(v int32) {
	o.Disconnect = v
}

// GetDisconnectFloat returns the DisconnectFloat field value
func (o *WebhookClientSessionsEvent) GetDisconnectFloat() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DisconnectFloat
}

// GetDisconnectFloatOk returns a tuple with the DisconnectFloat field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetDisconnectFloatOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisconnectFloat, true
}

// SetDisconnectFloat sets field value
func (o *WebhookClientSessionsEvent) SetDisconnectFloat(v float32) {
	o.DisconnectFloat = v
}

// GetDuration returns the Duration field value
func (o *WebhookClientSessionsEvent) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *WebhookClientSessionsEvent) SetDuration(v int32) {
	o.Duration = v
}

// GetMac returns the Mac field value
func (o *WebhookClientSessionsEvent) GetMac() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mac
}

// GetMacOk returns a tuple with the Mac field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetMacOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mac, true
}

// SetMac sets field value
func (o *WebhookClientSessionsEvent) SetMac(v string) {
	o.Mac = v
}

// GetNextAp returns the NextAp field value
func (o *WebhookClientSessionsEvent) GetNextAp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NextAp
}

// GetNextApOk returns a tuple with the NextAp field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetNextApOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NextAp, true
}

// SetNextAp sets field value
func (o *WebhookClientSessionsEvent) SetNextAp(v string) {
	o.NextAp = v
}

// GetOrgId returns the OrgId field value
func (o *WebhookClientSessionsEvent) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *WebhookClientSessionsEvent) SetOrgId(v string) {
	o.OrgId = v
}

// GetRssi returns the Rssi field value
func (o *WebhookClientSessionsEvent) GetRssi() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rssi
}

// GetRssiOk returns a tuple with the Rssi field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetRssiOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rssi, true
}

// SetRssi sets field value
func (o *WebhookClientSessionsEvent) SetRssi(v float32) {
	o.Rssi = v
}

// GetSiteId returns the SiteId field value
func (o *WebhookClientSessionsEvent) GetSiteId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetSiteIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *WebhookClientSessionsEvent) SetSiteId(v string) {
	o.SiteId = v
}

// GetSiteName returns the SiteName field value
func (o *WebhookClientSessionsEvent) GetSiteName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteName
}

// GetSiteNameOk returns a tuple with the SiteName field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetSiteNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteName, true
}

// SetSiteName sets field value
func (o *WebhookClientSessionsEvent) SetSiteName(v string) {
	o.SiteName = v
}

// GetSsid returns the Ssid field value
func (o *WebhookClientSessionsEvent) GetSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ssid
}

// GetSsidOk returns a tuple with the Ssid field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ssid, true
}

// SetSsid sets field value
func (o *WebhookClientSessionsEvent) SetSsid(v string) {
	o.Ssid = v
}

// GetTerminationReason returns the TerminationReason field value
func (o *WebhookClientSessionsEvent) GetTerminationReason() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TerminationReason
}

// GetTerminationReasonOk returns a tuple with the TerminationReason field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetTerminationReasonOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TerminationReason, true
}

// SetTerminationReason sets field value
func (o *WebhookClientSessionsEvent) SetTerminationReason(v int32) {
	o.TerminationReason = v
}

// GetTimestamp returns the Timestamp field value
func (o *WebhookClientSessionsEvent) GetTimestamp() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetTimestampOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WebhookClientSessionsEvent) SetTimestamp(v float32) {
	o.Timestamp = v
}

// GetVersion returns the Version field value
func (o *WebhookClientSessionsEvent) GetVersion() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetVersionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *WebhookClientSessionsEvent) SetVersion(v float32) {
	o.Version = v
}

// GetWlanId returns the WlanId field value
func (o *WebhookClientSessionsEvent) GetWlanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WlanId
}

// GetWlanIdOk returns a tuple with the WlanId field value
// and a boolean to check if the value has been set.
func (o *WebhookClientSessionsEvent) GetWlanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WlanId, true
}

// SetWlanId sets field value
func (o *WebhookClientSessionsEvent) SetWlanId(v string) {
	o.WlanId = v
}

func (o WebhookClientSessionsEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookClientSessionsEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ap"] = o.Ap
	toSerialize["ap_name"] = o.ApName
	toSerialize["band"] = o.Band
	toSerialize["bssid"] = o.Bssid
	toSerialize["client_family"] = o.ClientFamily
	toSerialize["client_manufacture"] = o.ClientManufacture
	toSerialize["client_model"] = o.ClientModel
	toSerialize["client_os"] = o.ClientOs
	toSerialize["connect"] = o.Connect
	toSerialize["connect_float"] = o.ConnectFloat
	toSerialize["disconnect"] = o.Disconnect
	toSerialize["disconnect_float"] = o.DisconnectFloat
	toSerialize["duration"] = o.Duration
	toSerialize["mac"] = o.Mac
	toSerialize["next_ap"] = o.NextAp
	toSerialize["org_id"] = o.OrgId
	toSerialize["rssi"] = o.Rssi
	toSerialize["site_id"] = o.SiteId
	toSerialize["site_name"] = o.SiteName
	toSerialize["ssid"] = o.Ssid
	toSerialize["termination_reason"] = o.TerminationReason
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["version"] = o.Version
	toSerialize["wlan_id"] = o.WlanId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *WebhookClientSessionsEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ap",
		"ap_name",
		"band",
		"bssid",
		"client_family",
		"client_manufacture",
		"client_model",
		"client_os",
		"connect",
		"connect_float",
		"disconnect",
		"disconnect_float",
		"duration",
		"mac",
		"next_ap",
		"org_id",
		"rssi",
		"site_id",
		"site_name",
		"ssid",
		"termination_reason",
		"timestamp",
		"version",
		"wlan_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookClientSessionsEvent := _WebhookClientSessionsEvent{}

	err = json.Unmarshal(data, &varWebhookClientSessionsEvent)

	if err != nil {
		return err
	}

	*o = WebhookClientSessionsEvent(varWebhookClientSessionsEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ap")
		delete(additionalProperties, "ap_name")
		delete(additionalProperties, "band")
		delete(additionalProperties, "bssid")
		delete(additionalProperties, "client_family")
		delete(additionalProperties, "client_manufacture")
		delete(additionalProperties, "client_model")
		delete(additionalProperties, "client_os")
		delete(additionalProperties, "connect")
		delete(additionalProperties, "connect_float")
		delete(additionalProperties, "disconnect")
		delete(additionalProperties, "disconnect_float")
		delete(additionalProperties, "duration")
		delete(additionalProperties, "mac")
		delete(additionalProperties, "next_ap")
		delete(additionalProperties, "org_id")
		delete(additionalProperties, "rssi")
		delete(additionalProperties, "site_id")
		delete(additionalProperties, "site_name")
		delete(additionalProperties, "ssid")
		delete(additionalProperties, "termination_reason")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "version")
		delete(additionalProperties, "wlan_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableWebhookClientSessionsEvent struct {
	value *WebhookClientSessionsEvent
	isSet bool
}

func (v NullableWebhookClientSessionsEvent) Get() *WebhookClientSessionsEvent {
	return v.value
}

func (v *NullableWebhookClientSessionsEvent) Set(val *WebhookClientSessionsEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookClientSessionsEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookClientSessionsEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookClientSessionsEvent(val *WebhookClientSessionsEvent) *NullableWebhookClientSessionsEvent {
	return &NullableWebhookClientSessionsEvent{value: val, isSet: true}
}

func (v NullableWebhookClientSessionsEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookClientSessionsEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


