/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the JunosBgpCommunity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JunosBgpCommunity{}

// JunosBgpCommunity struct for JunosBgpCommunity
type JunosBgpCommunity struct {
	Id *string `json:"id,omitempty"`
	LocalPreference *int32 `json:"local_preference,omitempty"`
	VpnName *string `json:"vpn_name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _JunosBgpCommunity JunosBgpCommunity

// NewJunosBgpCommunity instantiates a new JunosBgpCommunity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJunosBgpCommunity() *JunosBgpCommunity {
	this := JunosBgpCommunity{}
	return &this
}

// NewJunosBgpCommunityWithDefaults instantiates a new JunosBgpCommunity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJunosBgpCommunityWithDefaults() *JunosBgpCommunity {
	this := JunosBgpCommunity{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JunosBgpCommunity) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunosBgpCommunity) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JunosBgpCommunity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JunosBgpCommunity) SetId(v string) {
	o.Id = &v
}

// GetLocalPreference returns the LocalPreference field value if set, zero value otherwise.
func (o *JunosBgpCommunity) GetLocalPreference() int32 {
	if o == nil || IsNil(o.LocalPreference) {
		var ret int32
		return ret
	}
	return *o.LocalPreference
}

// GetLocalPreferenceOk returns a tuple with the LocalPreference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunosBgpCommunity) GetLocalPreferenceOk() (*int32, bool) {
	if o == nil || IsNil(o.LocalPreference) {
		return nil, false
	}
	return o.LocalPreference, true
}

// HasLocalPreference returns a boolean if a field has been set.
func (o *JunosBgpCommunity) HasLocalPreference() bool {
	if o != nil && !IsNil(o.LocalPreference) {
		return true
	}

	return false
}

// SetLocalPreference gets a reference to the given int32 and assigns it to the LocalPreference field.
func (o *JunosBgpCommunity) SetLocalPreference(v int32) {
	o.LocalPreference = &v
}

// GetVpnName returns the VpnName field value if set, zero value otherwise.
func (o *JunosBgpCommunity) GetVpnName() string {
	if o == nil || IsNil(o.VpnName) {
		var ret string
		return ret
	}
	return *o.VpnName
}

// GetVpnNameOk returns a tuple with the VpnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JunosBgpCommunity) GetVpnNameOk() (*string, bool) {
	if o == nil || IsNil(o.VpnName) {
		return nil, false
	}
	return o.VpnName, true
}

// HasVpnName returns a boolean if a field has been set.
func (o *JunosBgpCommunity) HasVpnName() bool {
	if o != nil && !IsNil(o.VpnName) {
		return true
	}

	return false
}

// SetVpnName gets a reference to the given string and assigns it to the VpnName field.
func (o *JunosBgpCommunity) SetVpnName(v string) {
	o.VpnName = &v
}

func (o JunosBgpCommunity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JunosBgpCommunity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LocalPreference) {
		toSerialize["local_preference"] = o.LocalPreference
	}
	if !IsNil(o.VpnName) {
		toSerialize["vpn_name"] = o.VpnName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JunosBgpCommunity) UnmarshalJSON(data []byte) (err error) {
	varJunosBgpCommunity := _JunosBgpCommunity{}

	err = json.Unmarshal(data, &varJunosBgpCommunity)

	if err != nil {
		return err
	}

	*o = JunosBgpCommunity(varJunosBgpCommunity)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "local_preference")
		delete(additionalProperties, "vpn_name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJunosBgpCommunity struct {
	value *JunosBgpCommunity
	isSet bool
}

func (v NullableJunosBgpCommunity) Get() *JunosBgpCommunity {
	return v.value
}

func (v *NullableJunosBgpCommunity) Set(val *JunosBgpCommunity) {
	v.value = val
	v.isSet = true
}

func (v NullableJunosBgpCommunity) IsSet() bool {
	return v.isSet
}

func (v *NullableJunosBgpCommunity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJunosBgpCommunity(val *JunosBgpCommunity) *NullableJunosBgpCommunity {
	return &NullableJunosBgpCommunity{value: val, isSet: true}
}

func (v NullableJunosBgpCommunity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJunosBgpCommunity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


