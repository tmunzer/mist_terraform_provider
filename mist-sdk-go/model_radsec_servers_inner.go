/*
Mist API

> Version: **2405.1.6** > > Date: **June 6, 2024**  ---  ### Additional Documentation * [Mist Automation Guide](https://www.juniper.net/documentation/us/en/software/mist/automation-integration/index.html) * [Mist Location SDK](https://www.juniper.net/documentation/us/en/software/mist/location-services/topics/concept/mist-how-get-mist-sdk.html) * [Mist Product Updates](https://www.mist.com/documentation/category/product-updates/)  ---  ### Helpful Resources * [API Sandbox and Exercises](https://api-class.mist.com/) * [Postman Collection, Runners and Webhook Samples](https://www.postman.com/juniper-mist/workspace/mist-systems-s-public-workspace) * [API Demo Apps](https://apps.mist-lab.fr/) * [Juniper Blog](https://blogs.juniper.net/)  --- 

API version: 2405.1.6
Contact: tmunzer@juniper.net
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistsdkgo

import (
	"encoding/json"
)

// checks if the RadsecServersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RadsecServersInner{}

// RadsecServersInner struct for RadsecServersInner
type RadsecServersInner struct {
	Host *string `json:"host,omitempty"`
	Port *int32 `json:"port,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RadsecServersInner RadsecServersInner

// NewRadsecServersInner instantiates a new RadsecServersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRadsecServersInner() *RadsecServersInner {
	this := RadsecServersInner{}
	return &this
}

// NewRadsecServersInnerWithDefaults instantiates a new RadsecServersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRadsecServersInnerWithDefaults() *RadsecServersInner {
	this := RadsecServersInner{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *RadsecServersInner) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadsecServersInner) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *RadsecServersInner) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *RadsecServersInner) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *RadsecServersInner) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RadsecServersInner) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *RadsecServersInner) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *RadsecServersInner) SetPort(v int32) {
	o.Port = &v
}

func (o RadsecServersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RadsecServersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RadsecServersInner) UnmarshalJSON(data []byte) (err error) {
	varRadsecServersInner := _RadsecServersInner{}

	err = json.Unmarshal(data, &varRadsecServersInner)

	if err != nil {
		return err
	}

	*o = RadsecServersInner(varRadsecServersInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRadsecServersInner struct {
	value *RadsecServersInner
	isSet bool
}

func (v NullableRadsecServersInner) Get() *RadsecServersInner {
	return v.value
}

func (v *NullableRadsecServersInner) Set(val *RadsecServersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRadsecServersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRadsecServersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRadsecServersInner(val *RadsecServersInner) *NullableRadsecServersInner {
	return &NullableRadsecServersInner{value: val, isSet: true}
}

func (v NullableRadsecServersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRadsecServersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


